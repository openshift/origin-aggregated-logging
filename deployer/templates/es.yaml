apiVersion: "v1"
kind: "Template"
metadata:
  name: logging-elasticsearch-template-maker
  annotations:
    description: "Template to create template for deploying ElasticSearch"
    tags: "infrastructure"
objects:
- apiVersion: "v1"
  kind: "Template"
  metadata:
    name: logging-${ES_CLUSTER_NAME}-template
    annotations:
      description: "Template for deploying ElasticSearch with proxy/plugin for storing and retrieving aggregated cluster logs."
      tags: "infrastructure"
    labels:
      logging-infra: elasticsearch
  labels:
    logging-infra: elasticsearch
    provider: openshift
    component: ${ES_CLUSTER_NAME}
  objects:
  -
    apiVersion: "v1"
    kind: "DeploymentConfig"
    metadata:
      name: ${ES_DEPLOYMENT_NAME}
    spec:
      replicas: 1
      selector:
        provider: "openshift"
        component: ${ES_CLUSTER_NAME}
        deployment: ${ES_DEPLOYMENT_NAME}
      triggers: {}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            provider: "openshift"
            component: ${ES_CLUSTER_NAME}
            deployment: ${ES_DEPLOYMENT_NAME}
        spec:
          terminationGracePeriodSeconds: 600
          serviceAccountName: aggregated-logging-elasticsearch
          securityContext:
            supplementalGroups:
            - ${STORAGE_GROUP}
          containers:
            -
              name: "elasticsearch"
              image: ${IMAGE_PREFIX}logging-elasticsearch:${IMAGE_VERSION}
              imagePullPolicy: Always
              resources:
                limits:
                  memory: "${INSTANCE_RAM}i"
                requests:
                  memory: "512Mi"
              ports:
              -
                containerPort: 9200
                name: "restapi"
              -
                containerPort: 9300
                name: "cluster"
              env:
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              -
                name: "KUBERNETES_TRUST_CERT"
                value: "true"
              -
                name: "SERVICE_DNS"
                value: "logging-${ES_CLUSTER_NAME}-cluster"
              -
                name: "CLUSTER_NAME"
                value: "logging-${ES_CLUSTER_NAME}"
              -
                name: INSTANCE_RAM
                value: ${INSTANCE_RAM}
              -
                name: MIN_MASTERS
                value: ${MIN_MASTERS}
              -
                name: NODE_QUORUM
                value: ${NODE_QUORUM}
              -
                name: RECOVER_AFTER_NODES
                value: ${RECOVER_AFTER_NODES}
              -
                name: RECOVER_EXPECTED_NODES
                value: ${RECOVER_EXPECTED_NODES}
              -
                name: RECOVER_AFTER_TIME
                value: ${RECOVER_AFTER_TIME}
              volumeMounts:
                - name: elasticsearch
                  mountPath: /etc/elasticsearch/secret
                  readOnly: true
                - name: elasticsearch-config
                  mountPath: /usr/share/elasticsearch/config
                  readOnly: true
                - name: elasticsearch-storage
                  mountPath: /elasticsearch/persistent
          volumes:
            - name: elasticsearch
              secret:
                secretName: logging-elasticsearch
            - name: elasticsearch-config
              configMap:
                name: logging-elasticsearch
            - name: elasticsearch-storage
              emptyDir: {}
  parameters:
  -
    description: 'Use to create multiple deployments in order to "scale"; will share services but must have different names.'
    name: ES_DEPLOYMENT_NAME
    from: 'logging-${ES_CLUSTER_NAME}-[a-z0-9]{8}'
    generate: expression
  -
    description: "Amount of RAM to reserve per ElasticSearch instance (e.g. 1024M or 8G)"
    name: INSTANCE_RAM
    value: ${ES_INSTANCE_RAM}
  -
    description: "Number of nodes required to elect a master (ES minimum_master_nodes). By default, derived from ES_CLUSTER_SIZE / 2 + 1."
    name: NODE_QUORUM
    value: ${ES_NODE_QUORUM}
  -
    description: "Number of nodes required to be present before the cluster will recover from a full restart. By default, one fewer than ES_CLUSTER_SIZE."
    name: RECOVER_AFTER_NODES
    value: ${ES_RECOVER_AFTER_NODES}
  -
    description: "Number of nodes desired to be present before the cluster will recover from a full restart. By default, ES_CLUSTER_SIZE."
    name: RECOVER_EXPECTED_NODES
    value: ${ES_RECOVER_EXPECTED_NODES}
  -
    description: "Timeout for *expected* nodes to be present when cluster is recovering from a full restart."
    name: RECOVER_AFTER_TIME
    value: ${ES_RECOVER_AFTER_TIME}
  -
    name: IMAGE_PREFIX
    value: ${IMAGE_PREFIX_DEFAULT}
  -
    description: "The version tag of the image to use."
    name: IMAGE_VERSION
    value: ${IMAGE_VERSION_DEFAULT}
  -
    description: "Numeric ID of a supplemental group for storage volume access."
    name: STORAGE_GROUP
    value: ${STORAGE_GROUP_DEFAULT}
  -
    description: "The mimimum number of masters that must be present in the ES cluster for the master election process to complete"
    name: MIN_MASTERS
    value: ${ES_MIN_MASTERS}
parameters:
- name: ES_CLUSTER_NAME
- name: ES_INSTANCE_RAM
- name: ES_MIN_MASTERS
- name: ES_NODE_QUORUM
- name: ES_RECOVER_AFTER_NODES
- name: ES_RECOVER_EXPECTED_NODES
- name: ES_RECOVER_AFTER_TIME
- name: IMAGE_PREFIX_DEFAULT
- name: IMAGE_VERSION_DEFAULT
  value: "latest"
- name: STORAGE_GROUP_DEFAULT
  value: "65534"
