!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vega-dataflow"),require("vega-util"),require("d3-array"),require("d3-contour"),require("vega-projection"),require("d3-geo")):"function"==typeof define&&define.amd?define(["exports","vega-dataflow","vega-util","d3-array","d3-contour","vega-projection","d3-geo"],t):t((e.vega=e.vega||{},e.vega.transforms=e.vega.transforms||{}),e.vega,e.vega,e.d3,e.d3,e.vega,e.d3)}(this,function(e,t,n,i,r,a,o){"use strict";function s(e){t.Transform.call(this,null,e)}function u(e){return function(t){for(var n=i.extent(t),r=n[0],a=n[1]-r,o=[],s=1;s<=e;++s)o.push(r+a*s/(e+1));return o}}function f(e){t.Transform.call(this,null,e)}function l(e){t.Transform.call(this,null,e)}function d(e,t){var n=e.pointRadius();return e.context(null),null!=t&&e.pointRadius(t),n}function p(e){t.Transform.call(this,null,e)}function m(e){t.Transform.call(this,null,e)}function c(e,t,n){var i=null==n?function(n){return e(t(n))}:function(i){var r=e.pointRadius(),a=e.pointRadius(n)(t(i));return e.pointRadius(r),a};return i.context=function(t){return e.context(t),i},i}function h(e){t.Transform.call(this,[],e),this.generator=o.geoGraticule()}function y(e){t.Transform.call(this,null,e),this.modified(!0)}function v(e,t){var n=D(t.fit);t.extent?e.fitExtent(t.extent,n):t.size&&e.fitSize(t.size,n)}function g(e){var t=a.projection((e||"mercator").toLowerCase());return t||n.error("Unrecognized projection type: "+e),t()}function j(e,t,i){n.isFunction(e[t])&&e[t](i)}function D(e){return 1===(e=n.array(e)).length?e[0]:{type:x,features:e.reduce(function(e,t){return t&&t.type===x?e.push.apply(e,t.features):n.isArray(t)?e.push.apply(e,t):e.push(t),e},[])}}var b=["size","smooth"],R=["x","y","size","cellSize","bandwidth"];s.Definition={type:"Contour",metadata:{generates:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"values",type:"number",array:!0},{name:"x",type:"field"},{name:"y",type:"field"},{name:"cellSize",type:"number"},{name:"bandwidth",type:"number"},{name:"count",type:"number"},{name:"smooth",type:"boolean"},{name:"nice",type:"boolean",default:!1},{name:"thresholds",type:"number",array:!0}]},n.inherits(s,t.Transform).transform=function(e,n){if(this.value&&!n.changed()&&!e.modified())return n.StopPropagation;var i,a,o,s=n.fork(n.NO_SOURCE|n.NO_FIELDS),f=e.count||10;return e.values?(i=r.contours(),a=b,o=e.values):(i=r.contourDensity(),a=R,o=n.materialize(n.SOURCE).source),i.thresholds(e.thresholds||(e.nice?f:u(f))),a.forEach(function(t){null!=e[t]&&i[t](e[t])}),this.value&&(s.rem=this.value),o=o&&o.length?i(o).map(t.ingest):[],this.value=s.source=s.add=o,s};var x="FeatureCollection";f.Definition={type:"GeoJSON",metadata:{},params:[{name:"fields",type:"field",array:!0,length:2},{name:"geojson",type:"field"}]},n.inherits(f,t.Transform).transform=function(e,t){var i,r=this._features,a=this._points,o=e.fields,s=o&&o[0],u=o&&o[1],f=e.geojson,l=t.ADD;i=e.modified()||t.changed(t.REM)||t.modified(n.accessorFields(f))||s&&t.modified(n.accessorFields(s))||u&&t.modified(n.accessorFields(u)),this.value&&!i||(l=t.SOURCE,this._features=r=[],this._points=a=[]),f&&t.visit(l,function(e){r.push(f(e))}),s&&u&&(t.visit(l,function(e){var t=s(e),n=u(e);null!=t&&null!=n&&(t=+t)===t&&(n=+n)===n&&a.push([t,n])}),r=r.concat({type:"Feature",geometry:{type:"MultiPoint",coordinates:a}})),this.value={type:x,features:r}},l.Definition={type:"GeoPath",metadata:{modifies:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"path"}]},n.inherits(l,t.Transform).transform=function(e,t){var i=t.fork(t.ALL),r=this.value,o=e.field||n.identity,s=e.as||"path",u=i.SOURCE;!r||e.modified()?(this.value=r=a.getProjectionPath(e.projection),i.materialize().reflow()):u=o===n.identity||t.modified(o.fields)?i.ADD_MOD:i.ADD;var f=d(r,e.pointRadius);return i.visit(u,function(e){e[s]=r(o(e))}),r.pointRadius(f),i.modifies(s)},p.Definition={type:"GeoPoint",metadata:{modifies:!0},params:[{name:"projection",type:"projection",required:!0},{name:"fields",type:"field",array:!0,required:!0,length:2},{name:"as",type:"string",array:!0,length:2,default:["x","y"]}]},n.inherits(p,t.Transform).transform=function(e,t){function n(e){var t=r([a(e),o(e)]);t?(e[u]=t[0],e[f]=t[1]):(e[u]=void 0,e[f]=void 0)}var i,r=e.projection,a=e.fields[0],o=e.fields[1],s=e.as||["x","y"],u=s[0],f=s[1];return e.modified()?t=t.materialize().reflow(!0).visit(t.SOURCE,n):(i=t.modified(a.fields)||t.modified(o.fields),t.visit(i?t.ADD_MOD:t.ADD,n)),t.modifies(s)},m.Definition={type:"GeoShape",metadata:{modifies:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field",default:"datum"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"shape"}]},n.inherits(m,t.Transform).transform=function(e,t){var i=t.fork(t.ALL),r=this.value,o=e.field||n.field("datum"),s=e.as||"shape",u=i.ADD_MOD;return r&&!e.modified()||(this.value=r=c(a.getProjectionPath(e.projection),o,e.pointRadius),i.materialize().reflow(),u=i.SOURCE),i.visit(u,function(e){e[s]=r}),i.modifies(s)},h.Definition={type:"Graticule",metadata:{changes:!0},params:[{name:"extent",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMajor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMinor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"step",type:"number",array:!0,length:2},{name:"stepMajor",type:"number",array:!0,length:2,default:[90,360]},{name:"stepMinor",type:"number",array:!0,length:2,default:[10,10]},{name:"precision",type:"number",default:2.5}]},n.inherits(h,t.Transform).transform=function(e,i){var r,a=this.value,o=this.generator;if(!a.length||e.modified())for(var s in e)n.isFunction(o[s])&&o[s](e[s]);return r=o(),a.length?i.mod.push(t.replace(a[0],r)):i.add.push(t.ingest(r)),a[0]=r,i},n.inherits(y,t.Transform).transform=function(e,t){var n=this.value;return!n||e.modified("type")?(this.value=n=g(e.type),a.projectionProperties.forEach(function(t){null!=e[t]&&j(n,t,e[t])})):a.projectionProperties.forEach(function(t){e.modified(t)&&j(n,t,e[t])}),null!=e.pointRadius&&n.path.pointRadius(e.pointRadius),e.fit&&v(n,e),t.fork(t.NO_SOURCE|t.NO_FIELDS)},e.contour=s,e.geojson=f,e.geopath=l,e.geopoint=p,e.geoshape=m,e.graticule=h,e.projection=y,Object.defineProperty(e,"__esModule",{value:!0})});