{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/search_bar/search_bar.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/search_bar/search_bar.js","mtime":1565204169991},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Query\", {\n  enumerable: true,\n  get: function get() {\n    return _query2.Query;\n  }\n});\nObject.defineProperty(exports, \"Ast\", {\n  enumerable: true,\n  get: function get() {\n    return _query2.AST;\n  }\n});\nexports.EuiSearchBar = exports.SearchBarPropTypes = exports.QueryType = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _predicate = require(\"../../services/predicate\");\n\nvar _flex_group = require(\"../flex/flex_group\");\n\nvar _search_box = require(\"./search_box\");\n\nvar _search_filters = require(\"./search_filters\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _query2 = require(\"./query\");\n\nvar _flex_item = require(\"../flex/flex_item\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar QueryType = _propTypes.default.oneOfType([_propTypes.default.instanceOf(_query2.Query), _propTypes.default.string]);\n\nexports.QueryType = QueryType;\nvar SearchBarPropTypes = {\n  /**\n   (query?: Query, queryText: string, error?: string) => void\n   */\n  onChange: _propTypes.default.func.isRequired,\n\n  /**\n   The initial query the bar will hold when first mounted\n   */\n  defaultQuery: QueryType,\n\n  /**\n   If you wish to use the search bar as a controlled component, continuously pass the query\n   via this prop\n   */\n  query: QueryType,\n\n  /**\n   Configures the search box. Set `placeholder` to change the placeholder text in the box and\n   `incremental` to support incremental (as you type) search.\n   */\n  box: _propTypes.default.shape(_search_box.SearchBoxConfigPropTypes),\n\n  /**\n   An array of search filters.\n   */\n  filters: _search_filters.SearchFiltersFiltersType,\n\n  /**\n   * Tools which go to the left of the search bar.\n   */\n  toolsLeft: _propTypes.default.node,\n\n  /**\n   * Tools which go to the right of the search bar.\n   */\n  toolsRight: _propTypes.default.node,\n\n  /**\n   * Date formatter to use when parsing date values\n   */\n  dateFormat: _propTypes.default.object\n};\nexports.SearchBarPropTypes = SearchBarPropTypes;\n\nvar parseQuery = function parseQuery(query, props) {\n  var schema = props.box ? props.box.schema : undefined;\n  var dateFormat = props.dateFormat;\n  var parseOptions = {\n    schema: schema,\n    dateFormat: dateFormat\n  };\n\n  if (!query) {\n    return _query2.Query.parse('', parseOptions);\n  }\n\n  return (0, _predicate.isString)(query) ? _query2.Query.parse(query, parseOptions) : query;\n};\n\nvar EuiSearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiSearchBar, _Component);\n\n  function EuiSearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, EuiSearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiSearchBar).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearch\", function (queryText) {\n      try {\n        var query = parseQuery(queryText, _this.props);\n\n        _this.notifyControllingParent({\n          query: query,\n          queryText: queryText,\n          error: null\n        });\n\n        _this.setState({\n          query: query,\n          queryText: queryText,\n          error: null\n        });\n      } catch (e) {\n        var error = {\n          message: e.message\n        };\n\n        _this.notifyControllingParent({\n          query: null,\n          queryText: queryText,\n          error: error\n        });\n\n        _this.setState({\n          queryText: queryText,\n          error: error\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFiltersChange\", function (query) {\n      _this.notifyControllingParent({\n        query: query,\n        queryText: query.text,\n        error: null\n      });\n\n      _this.setState({\n        query: query,\n        queryText: query.text,\n        error: null\n      });\n    });\n\n    var _query = parseQuery(props.defaultQuery || props.query, props);\n\n    _this.state = {\n      query: _query,\n      queryText: _query.text,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(EuiSearchBar, [{\n    key: \"notifyControllingParent\",\n    value: function notifyControllingParent(newState) {\n      var oldState = this.state;\n      var query = newState.query,\n          queryText = newState.queryText,\n          error = newState.error;\n      var isQueryDifferent = oldState.queryText !== queryText;\n      var oldError = oldState.error ? oldState.error.message : null;\n      var newError = error ? error.message : null;\n      var isErrorDifferent = oldError !== newError;\n\n      if (isQueryDifferent || isErrorDifferent) {\n        this.props.onChange({\n          query: query,\n          queryText: queryText,\n          error: error\n        });\n      }\n    }\n  }, {\n    key: \"renderTools\",\n    value: function renderTools(tools) {\n      if (!tools) {\n        return undefined;\n      }\n\n      if (Array.isArray(tools)) {\n        return tools.map(function (tool) {\n          return _react.default.createElement(_flex_item.EuiFlexItem, {\n            grow: false,\n            key: tool.key\n          }, tool);\n        });\n      }\n\n      return _react.default.createElement(_flex_item.EuiFlexItem, {\n        grow: false\n      }, tools);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          query = _this$state.query,\n          queryText = _this$state.queryText,\n          error = _this$state.error;\n      var _this$props = this.props,\n          box = _this$props.box,\n          filters = _this$props.filters,\n          toolsLeft = _this$props.toolsLeft,\n          toolsRight = _this$props.toolsRight;\n      var toolsLeftEl = this.renderTools(toolsLeft);\n      var filtersBar = !filters ? undefined : _react.default.createElement(_flex_item.EuiFlexItem, {\n        className: \"euiSearchBar__filtersHolder\",\n        grow: false\n      }, _react.default.createElement(_search_filters.EuiSearchFilters, {\n        filters: filters,\n        query: query,\n        onChange: this.onFiltersChange\n      }));\n      var toolsRightEl = this.renderTools(toolsRight);\n      return _react.default.createElement(_flex_group.EuiFlexGroup, {\n        gutterSize: \"m\",\n        alignItems: \"center\",\n        wrap: true\n      }, toolsLeftEl, _react.default.createElement(_flex_item.EuiFlexItem, {\n        className: \"euiSearchBar__searchHolder\",\n        grow: true\n      }, _react.default.createElement(_search_box.EuiSearchBox, _extends({}, box, {\n        query: queryText,\n        onSearch: this.onSearch,\n        isInvalid: !!error,\n        title: error ? error.message : undefined\n      }))), filtersBar, toolsRightEl);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.query && (!prevState.query || nextProps.query.text !== prevState.query.text)) {\n        var query = parseQuery(nextProps.query, nextProps);\n        return {\n          query: query,\n          queryText: query.text,\n          error: null\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return EuiSearchBar;\n}(_react.Component);\n\nexports.EuiSearchBar = EuiSearchBar;\n\n_defineProperty(EuiSearchBar, \"propTypes\", SearchBarPropTypes);\n\n_defineProperty(EuiSearchBar, \"Query\", _query2.Query);\n\nEuiSearchBar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"nextProps\",\n      \"type\": null\n    }, {\n      \"name\": \"prevState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"notifyControllingParent\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"newState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onSearch\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"queryText\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onFiltersChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"query\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderTools\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"tools\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiSearchBar\",\n  \"props\": {\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"(query?: Query, queryText: string, error?: string) => void\"\n    },\n    \"defaultQuery\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"QueryType\"\n      },\n      \"required\": false,\n      \"description\": \"The initial query the bar will hold when first mounted\"\n    },\n    \"query\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"QueryType\"\n      },\n      \"required\": false,\n      \"description\": \"If you wish to use the search bar as a controlled component, continuously pass the query\\n   via this prop\"\n    },\n    \"box\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": \"import { EuiSearchBox, SearchBoxConfigPropTypes } from './search_box';\",\n        \"computed\": true\n      },\n      \"required\": false,\n      \"description\": \"Configures the search box. Set `placeholder` to change the placeholder text in the box and\\n   `incremental` to support incremental (as you type) search.\"\n    },\n    \"filters\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"SearchFiltersFiltersType\"\n      },\n      \"required\": false,\n      \"description\": \"An array of search filters.\"\n    },\n    \"toolsLeft\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Tools which go to the left of the search bar.\"\n    },\n    \"toolsRight\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Tools which go to the right of the search bar.\"\n    },\n    \"dateFormat\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"Date formatter to use when parsing date values\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/search_bar/search_bar.js"],"names":["QueryType","PropTypes","oneOfType","instanceOf","Query","string","SearchBarPropTypes","onChange","func","isRequired","defaultQuery","query","box","shape","SearchBoxConfigPropTypes","filters","SearchFiltersFiltersType","toolsLeft","node","toolsRight","dateFormat","object","parseQuery","props","schema","undefined","parseOptions","parse","EuiSearchBar","queryText","notifyControllingParent","error","setState","e","message","text","state","newState","oldState","isQueryDifferent","oldError","newError","isErrorDifferent","tools","Array","isArray","map","tool","key","toolsLeftEl","renderTools","filtersBar","onFiltersChange","toolsRightEl","onSearch","nextProps","prevState","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { isString } from '../../services/predicate';\nimport { EuiFlexGroup } from '../flex/flex_group';\nimport { EuiSearchBox, SearchBoxConfigPropTypes } from './search_box';\nimport { EuiSearchFilters, SearchFiltersFiltersType } from './search_filters';\nimport PropTypes from 'prop-types';\nimport { Query } from './query';\nimport { EuiFlexItem } from '../flex/flex_item';\n\nexport { Query, AST as Ast } from './query';\n\nexport const QueryType = PropTypes.oneOfType([\n  PropTypes.instanceOf(Query),\n  PropTypes.string,\n]);\n\nexport const SearchBarPropTypes = {\n  /**\n   (query?: Query, queryText: string, error?: string) => void\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   The initial query the bar will hold when first mounted\n   */\n  defaultQuery: QueryType,\n\n  /**\n   If you wish to use the search bar as a controlled component, continuously pass the query\n   via this prop\n   */\n  query: QueryType,\n\n  /**\n   Configures the search box. Set `placeholder` to change the placeholder text in the box and\n   `incremental` to support incremental (as you type) search.\n   */\n  box: PropTypes.shape(SearchBoxConfigPropTypes),\n\n  /**\n   An array of search filters.\n   */\n  filters: SearchFiltersFiltersType,\n\n  /**\n   * Tools which go to the left of the search bar.\n   */\n  toolsLeft: PropTypes.node,\n\n  /**\n   * Tools which go to the right of the search bar.\n   */\n  toolsRight: PropTypes.node,\n\n  /**\n   * Date formatter to use when parsing date values\n   */\n  dateFormat: PropTypes.object,\n};\n\nconst parseQuery = (query, props) => {\n  const schema = props.box ? props.box.schema : undefined;\n  const dateFormat = props.dateFormat;\n  const parseOptions = { schema, dateFormat };\n  if (!query) {\n    return Query.parse('', parseOptions);\n  }\n  return isString(query) ? Query.parse(query, parseOptions) : query;\n};\n\nexport class EuiSearchBar extends Component {\n  static propTypes = SearchBarPropTypes;\n\n  static Query = Query;\n\n  constructor(props) {\n    super(props);\n    const query = parseQuery(props.defaultQuery || props.query, props);\n    this.state = {\n      query,\n      queryText: query.text,\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (\n      nextProps.query &&\n      (!prevState.query || nextProps.query.text !== prevState.query.text)\n    ) {\n      const query = parseQuery(nextProps.query, nextProps);\n      return {\n        query,\n        queryText: query.text,\n        error: null,\n      };\n    }\n    return null;\n  }\n\n  notifyControllingParent(newState) {\n    const oldState = this.state;\n    const { query, queryText, error } = newState;\n\n    const isQueryDifferent = oldState.queryText !== queryText;\n\n    const oldError = oldState.error ? oldState.error.message : null;\n    const newError = error ? error.message : null;\n    const isErrorDifferent = oldError !== newError;\n\n    if (isQueryDifferent || isErrorDifferent) {\n      this.props.onChange({ query, queryText, error });\n    }\n  }\n\n  onSearch = queryText => {\n    try {\n      const query = parseQuery(queryText, this.props);\n      this.notifyControllingParent({ query, queryText, error: null });\n      this.setState({ query, queryText, error: null });\n    } catch (e) {\n      const error = { message: e.message };\n      this.notifyControllingParent({ query: null, queryText, error });\n      this.setState({ queryText, error });\n    }\n  };\n\n  onFiltersChange = query => {\n    this.notifyControllingParent({ query, queryText: query.text, error: null });\n    this.setState({\n      query,\n      queryText: query.text,\n      error: null,\n    });\n  };\n\n  renderTools(tools) {\n    if (!tools) {\n      return undefined;\n    }\n\n    if (Array.isArray(tools)) {\n      return tools.map(tool => (\n        <EuiFlexItem grow={false} key={tool.key}>\n          {tool}\n        </EuiFlexItem>\n      ));\n    }\n\n    return <EuiFlexItem grow={false}>{tools}</EuiFlexItem>;\n  }\n\n  render() {\n    const { query, queryText, error } = this.state;\n    const { box, filters, toolsLeft, toolsRight } = this.props;\n\n    const toolsLeftEl = this.renderTools(toolsLeft);\n\n    const filtersBar = !filters ? (\n      undefined\n    ) : (\n      <EuiFlexItem className=\"euiSearchBar__filtersHolder\" grow={false}>\n        <EuiSearchFilters\n          filters={filters}\n          query={query}\n          onChange={this.onFiltersChange}\n        />\n      </EuiFlexItem>\n    );\n\n    const toolsRightEl = this.renderTools(toolsRight);\n\n    return (\n      <EuiFlexGroup gutterSize=\"m\" alignItems=\"center\" wrap>\n        {toolsLeftEl}\n        <EuiFlexItem className=\"euiSearchBar__searchHolder\" grow={true}>\n          <EuiSearchBox\n            {...box}\n            query={queryText}\n            onSearch={this.onSearch}\n            isInvalid={!!error}\n            title={error ? error.message : undefined}\n          />\n        </EuiFlexItem>\n        {filtersBar}\n        {toolsRightEl}\n      </EuiFlexGroup>\n    );\n  }\n}\n"]}]}