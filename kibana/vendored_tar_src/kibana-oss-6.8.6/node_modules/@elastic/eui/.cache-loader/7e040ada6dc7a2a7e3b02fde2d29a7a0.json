{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/date_picker/date_picker_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/date_picker/date_picker_example.js","mtime":1565204169455},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DatePickerExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _date_picker = _interopRequireDefault(require(\"./date_picker\"));\n\nvar _states = _interopRequireDefault(require(\"./states\"));\n\nvar _locale = _interopRequireDefault(require(\"./locale\"));\n\nvar _time_select = _interopRequireDefault(require(\"./time_select\"));\n\nvar _inline = _interopRequireDefault(require(\"./inline\"));\n\nvar _range = _interopRequireDefault(require(\"./range\"));\n\nvar _min_max = _interopRequireDefault(require(\"./min_max\"));\n\nvar _classes = _interopRequireDefault(require(\"./classes\"));\n\nvar _open_to_date = _interopRequireDefault(require(\"./open_to_date\"));\n\nvar _custom_input = _interopRequireDefault(require(\"./custom_input\"));\n\nvar _utc = _interopRequireDefault(require(\"./utc\"));\n\nvar _super_date_picker = _interopRequireDefault(require(\"./super_date_picker\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar datePickerSource = require('!!raw-loader!./date_picker');\n\nvar datePickerHtml = (0, _services.renderToHtml)(_date_picker.default);\n\nvar statesSource = require('!!raw-loader!./states');\n\nvar statesHtml = (0, _services.renderToHtml)(_states.default);\n\nvar localeSource = require('!!raw-loader!./locale');\n\nvar localeHtml = (0, _services.renderToHtml)(_locale.default);\n\nvar timeSource = require('!!raw-loader!./time_select');\n\nvar timeHtml = (0, _services.renderToHtml)(_time_select.default);\n\nvar inlineSource = require('!!raw-loader!./inline');\n\nvar inlineHtml = (0, _services.renderToHtml)(_inline.default);\n\nvar rangeSource = require('!!raw-loader!./range');\n\nvar rangeHtml = (0, _services.renderToHtml)(_range.default);\n\nvar minMaxSource = require('!!raw-loader!./min_max');\n\nvar minMaxHtml = (0, _services.renderToHtml)(_min_max.default);\n\nvar classesSource = require('!!raw-loader!./classes');\n\nvar classesHtml = (0, _services.renderToHtml)(_classes.default);\n\nvar openToDateSource = require('!!raw-loader!./open_to_date');\n\nvar openToDateHtml = (0, _services.renderToHtml)(_open_to_date.default);\n\nvar customInputSource = require('!!raw-loader!./custom_input');\n\nvar customInputHtml = (0, _services.renderToHtml)(_custom_input.default);\n\nvar utcSource = require('!!raw-loader!./utc');\n\nvar utcHtml = (0, _services.renderToHtml)(_utc.default);\n\nvar superDatePickerSource = require('!!raw-loader!./super_date_picker');\n\nvar superDatePickerHtml = (0, _services.renderToHtml)(_super_date_picker.default);\nvar DatePickerExample = {\n  title: 'Date Picker',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: datePickerSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: datePickerHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"At its most bare the \", _react.default.createElement(_components2.EuiCode, null, \"EuiDatePicker\"), \" only requires props for \", _react.default.createElement(_components2.EuiCode, null, \"selected\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"onChange\"), \". It depends on\", ' ', _react.default.createElement(_components2.EuiLink, {\n      href: \"https://momentjs.com/docs/\"\n    }, \"moment\"), \" for all of its formatting.\"),\n    components: {\n      EuiDatePicker: _components2.EuiDatePicker\n    },\n    demo: _react.default.createElement(_date_picker.default, null),\n    props: {\n      EuiDatePicker: _components2.EuiDatePicker\n    }\n  }, {\n    title: 'Date picker states',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: statesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: statesHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Examples of how the input can appear within a form. This should match our other form styles.\"),\n    demo: _react.default.createElement(_states.default, null)\n  }, {\n    title: 'Time selection',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: timeSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: timeHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Two props control time selection. \", _react.default.createElement(_components2.EuiCode, null, \"showTimeSelect\"), ' ', \"will make time selection appear next to the calendar and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"showTimeSelectOnly\"), \" will exclude the calendar and make the time selection the only thing you see. Make sure to adjust your \", _react.default.createElement(_components2.EuiCode, null, \"dateFormat\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"timeFormat\"), ' ', \"values to match.\"),\n    demo: _react.default.createElement(_time_select.default, null)\n  }, {\n    title: 'Locale',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: localeSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: localeHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Locale formatting is achieved by using the \", _react.default.createElement(_components2.EuiCode, null, \"locale\"), \",\", _react.default.createElement(_components2.EuiCode, null, \"timeFormat\"), \", and \", _react.default.createElement(_components2.EuiCode, null, \"dateFormat\"), ' ', \"props. The latter will take any \", _react.default.createElement(_components2.EuiCode, null, \"moment()\"), \" notation. Check\", ' ', _react.default.createElement(\"a\", {\n      href: \"https://en.wikipedia.org/wiki/Date_format_by_country\"\n    }, \"Date format by country\"), ' ', \"for formatting examples.\"),\n    demo: _react.default.createElement(_locale.default, null)\n  }, {\n    title: 'Date picker range',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: rangeSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: rangeHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"By passing \", _react.default.createElement(_components2.EuiCode, null, \"startDate\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"endDate\"), ' ', \"props you can provide styling the range in between two dates. To further style the group as a single control, use\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDatePickerRange\"), \" and pass the date picker controls into the \", _react.default.createElement(_components2.EuiCode, null, \"startDateControl\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"endDateControl\"), \" props.\"),\n    demo: _react.default.createElement(_range.default, null),\n    props: {\n      EuiDatePickerRange: _components2.EuiDatePickerRange\n    }\n  }, {\n    title: 'Only allow specific dates and times',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: minMaxSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: minMaxHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the \", _react.default.createElement(_components2.EuiCode, null, \"minDate\"), \",\", _react.default.createElement(_components2.EuiCode, null, \"maxDate\"), \",\", _react.default.createElement(_components2.EuiCode, null, \"minTime\"), \", and \", _react.default.createElement(_components2.EuiCode, null, \"maxTime\"), \"props to specify specific ranges the \", _react.default.createElement(_components2.EuiCode, null, \"selected\"), \" code must must fall into. You can also use the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"excludeDates\"), \" and\", _react.default.createElement(_components2.EuiCode, null, \"excludeTimes\"), \" property to disallow a specific array of items from selection.\"),\n    demo: _react.default.createElement(_min_max.default, null)\n  }, {\n    title: 'Open to a specific date',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: openToDateSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: openToDateHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use \", _react.default.createElement(_components2.EuiCode, null, \"openToDate\"), \" to default selection to a specific date.\"),\n    demo: _react.default.createElement(_open_to_date.default, null)\n  }, {\n    title: 'Custom input',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: customInputSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: customInputHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use \", _react.default.createElement(_components2.EuiCode, null, \"customInput\"), \" to pass a custom input to trigger your calendar.\"),\n    demo: _react.default.createElement(_custom_input.default, null)\n  }, {\n    title: 'UTC offsets',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: utcSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: utcHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use \", _react.default.createElement(_components2.EuiCode, null, \"utcOffset\"), \" to apply an offset to the datetime.\"),\n    demo: _react.default.createElement(_utc.default, null)\n  }, {\n    title: 'Date picker inline',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: inlineSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: inlineHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the \", _react.default.createElement(_components2.EuiCode, null, \"inline\"), \" prop to display the date picker directly in the page. If you do not need the shadows / popover effect to the date picker then also apply the \", _react.default.createElement(_components2.EuiCode, null, \"shadow=false\"), ' ', \"prop as shown in the second example.\"),\n    demo: _react.default.createElement(_inline.default, null)\n  }, {\n    title: 'Custom classes',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: classesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: classesHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Custom classes can be passed to various bits of the calendar and input.\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"className\"), \" will pass onto the input.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"calendarClassName\"), \" will pass onto the calendar itself.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"dayClassName\"), \" will pass onto specificed days.\"))),\n    demo: _react.default.createElement(_classes.default, null)\n  }, {\n    title: 'Super date picker',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: superDatePickerSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: superDatePickerHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" date times are passed as strings in either datemath format (e.g.: now, now-15m, now-15m/m) or as absolute date in the format\", ' ', _react.default.createElement(_components2.EuiCode, null, \"YYYY-MM-DDTHH:mm:ss.SSSZ\"), \". Use\", ' ', _react.default.createElement(_components2.EuiLink, {\n      href: \"https://github.com/elastic/datemath-js\"\n    }, \"datemath\"), ' ', \"to convert start and end strings into moment objects.\"), _react.default.createElement(_components2.EuiCodeBlock, {\n      paddingSize: \"none\",\n      isCopyable: true\n    }, \"\\nimport dateMath from '@elastic/datemath';\\n\\nconst startMoment = dateMath.parse(start);\\n// dateMath.parse is inconsistent with unparsable strings.\\n// Sometimes undefined is returned, other times an invalid moment is returned\\nif (!startMoment || !startMoment.isValid()) {\\n  throw new Error('Unable to parse start string');\\n}\\n\\n// Pass roundUp when parsing end string\\nconst endMoment = dateMath.parse(end, { roundUp: true });\\nif (!endMoment || !endMoment.isValid()) {\\n  throw new Error('Unable to parse end string');\\n}\\n          \"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"onTimeChange\"), \" will be immediately invoked when\", ' ', _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" change from interactions with \", _react.default.createElement(\"strong\", null, \" Quick select\"), \",\", ' ', _react.default.createElement(\"strong\", null, \"Commonly used\"), \", or\", ' ', _react.default.createElement(\"strong\", null, \"Recently used date ranges\"), \" since these interactions set both \", _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" in a single event.\"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"onTimeChange\"), \" will \", _react.default.createElement(\"strong\", null, \"not\"), \" be invoked when\", _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" change from interactions with \", _react.default.createElement(\"strong\", null, \"Absolute\"), \",\", ' ', _react.default.createElement(\"strong\", null, \"Relative\"), \", and \", _react.default.createElement(\"strong\", null, \"Now\"), \" tabs.\", ' ', _react.default.createElement(_components2.EuiCode, null, \"onTimeChange\"), \" will be invoked when the user clicks the \", _react.default.createElement(\"strong\", null, \"Update\"), \" button. This gives users the ability to set both \", _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" before triggering \", _react.default.createElement(_components2.EuiCode, null, \"onTimeChange\"), \". Set\", ' ', _react.default.createElement(_components2.EuiCode, null, \"showUpdateButton\"), \" to \", _react.default.createElement(_components2.EuiCode, null, \"false\"), \" to immediately invoke \", _react.default.createElement(_components2.EuiCode, null, \"onTimeChange\"), \" for all\", ' ', _react.default.createElement(_components2.EuiCode, null, \"start\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"end\"), \" changes.\"), _react.default.createElement(\"p\", null, \"Set \", _react.default.createElement(_components2.EuiCode, null, \"isAutoRefreshOnly\"), \" to \", _react.default.createElement(_components2.EuiCode, null, \"true \"), ' ', \"to limit the component to only display auto refresh content. This is useful in cases where there is no time data but auto-refresh configuration is still desired.\")),\n    demo: _react.default.createElement(_super_date_picker.default, null),\n    props: {\n      EuiSuperDatePicker: _components2.EuiSuperDatePicker,\n      EuiSuperUpdateButton: _components2.EuiSuperUpdateButton\n    }\n  }]\n};\nexports.DatePickerExample = DatePickerExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/date_picker/date_picker_example.js"],"names":["datePickerSource","require","datePickerHtml","DatePicker","statesSource","statesHtml","States","localeSource","localeHtml","Locale","timeSource","timeHtml","Time","inlineSource","inlineHtml","Inline","rangeSource","rangeHtml","Range","minMaxSource","minMaxHtml","MinMax","classesSource","classesHtml","Classes","openToDateSource","openToDateHtml","OpenToDate","customInputSource","customInputHtml","CustomInput","utcSource","utcHtml","Utc","superDatePickerSource","superDatePickerHtml","SuperDatePicker","DatePickerExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","components","EuiDatePicker","demo","props","EuiDatePickerRange","EuiSuperDatePicker","EuiSuperUpdateButton"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiCodeBlock,\n  EuiLink,\n  EuiDatePicker,\n  EuiDatePickerRange,\n  EuiSuperDatePicker,\n  EuiSuperUpdateButton,\n} from '../../../../src/components';\n\nimport DatePicker from './date_picker';\nconst datePickerSource = require('!!raw-loader!./date_picker');\nconst datePickerHtml = renderToHtml(DatePicker);\n\nimport States from './states';\nconst statesSource = require('!!raw-loader!./states');\nconst statesHtml = renderToHtml(States);\n\nimport Locale from './locale';\nconst localeSource = require('!!raw-loader!./locale');\nconst localeHtml = renderToHtml(Locale);\n\nimport Time from './time_select';\nconst timeSource = require('!!raw-loader!./time_select');\nconst timeHtml = renderToHtml(Time);\n\nimport Inline from './inline';\nconst inlineSource = require('!!raw-loader!./inline');\nconst inlineHtml = renderToHtml(Inline);\n\nimport Range from './range';\nconst rangeSource = require('!!raw-loader!./range');\nconst rangeHtml = renderToHtml(Range);\n\nimport MinMax from './min_max';\nconst minMaxSource = require('!!raw-loader!./min_max');\nconst minMaxHtml = renderToHtml(MinMax);\n\nimport Classes from './classes';\nconst classesSource = require('!!raw-loader!./classes');\nconst classesHtml = renderToHtml(Classes);\n\nimport OpenToDate from './open_to_date';\nconst openToDateSource = require('!!raw-loader!./open_to_date');\nconst openToDateHtml = renderToHtml(OpenToDate);\n\nimport CustomInput from './custom_input';\nconst customInputSource = require('!!raw-loader!./custom_input');\nconst customInputHtml = renderToHtml(CustomInput);\n\nimport Utc from './utc';\nconst utcSource = require('!!raw-loader!./utc');\nconst utcHtml = renderToHtml(Utc);\n\nimport SuperDatePicker from './super_date_picker';\nconst superDatePickerSource = require('!!raw-loader!./super_date_picker');\nconst superDatePickerHtml = renderToHtml(SuperDatePicker);\n\nexport const DatePickerExample = {\n  title: 'Date Picker',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: datePickerSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: datePickerHtml,\n        },\n      ],\n      text: (\n        <p>\n          At its most bare the <EuiCode>EuiDatePicker</EuiCode> only requires\n          props for <EuiCode>selected</EuiCode> and <EuiCode>onChange</EuiCode>.\n          It depends on{' '}\n          <EuiLink href=\"https://momentjs.com/docs/\">moment</EuiLink> for all of\n          its formatting.\n        </p>\n      ),\n      components: { EuiDatePicker },\n      demo: <DatePicker />,\n      props: { EuiDatePicker },\n    },\n    {\n      title: 'Date picker states',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: statesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: statesHtml,\n        },\n      ],\n      text: (\n        <p>\n          Examples of how the input can appear within a form. This should match\n          our other form styles.\n        </p>\n      ),\n      demo: <States />,\n    },\n    {\n      title: 'Time selection',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: timeSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: timeHtml,\n        },\n      ],\n      text: (\n        <p>\n          Two props control time selection. <EuiCode>showTimeSelect</EuiCode>{' '}\n          will make time selection appear next to the calendar and{' '}\n          <EuiCode>showTimeSelectOnly</EuiCode> will exclude the calendar and\n          make the time selection the only thing you see. Make sure to adjust\n          your <EuiCode>dateFormat</EuiCode> and <EuiCode>timeFormat</EuiCode>{' '}\n          values to match.\n        </p>\n      ),\n      demo: <Time />,\n    },\n    {\n      title: 'Locale',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: localeSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: localeHtml,\n        },\n      ],\n      text: (\n        <p>\n          Locale formatting is achieved by using the <EuiCode>locale</EuiCode>,\n          <EuiCode>timeFormat</EuiCode>, and <EuiCode>dateFormat</EuiCode>{' '}\n          props. The latter will take any <EuiCode>moment()</EuiCode> notation.\n          Check{' '}\n          <a href=\"https://en.wikipedia.org/wiki/Date_format_by_country\">\n            Date format by country\n          </a>{' '}\n          for formatting examples.\n        </p>\n      ),\n      demo: <Locale />,\n    },\n    {\n      title: 'Date picker range',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: rangeSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: rangeHtml,\n        },\n      ],\n      text: (\n        <p>\n          By passing <EuiCode>startDate</EuiCode> and <EuiCode>endDate</EuiCode>{' '}\n          props you can provide styling the range in between two dates. To\n          further style the group as a single control, use{' '}\n          <EuiCode>EuiDatePickerRange</EuiCode> and pass the date picker\n          controls into the <EuiCode>startDateControl</EuiCode> and{' '}\n          <EuiCode>endDateControl</EuiCode> props.\n        </p>\n      ),\n      demo: <Range />,\n      props: { EuiDatePickerRange },\n    },\n    {\n      title: 'Only allow specific dates and times',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: minMaxSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: minMaxHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the <EuiCode>minDate</EuiCode>,<EuiCode>maxDate</EuiCode>,\n          <EuiCode>minTime</EuiCode>, and <EuiCode>maxTime</EuiCode>\n          props to specify specific ranges the <EuiCode>selected</EuiCode> code\n          must must fall into. You can also use the{' '}\n          <EuiCode>excludeDates</EuiCode> and\n          <EuiCode>excludeTimes</EuiCode> property to disallow a specific array\n          of items from selection.\n        </p>\n      ),\n      demo: <MinMax />,\n    },\n    {\n      title: 'Open to a specific date',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: openToDateSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: openToDateHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use <EuiCode>openToDate</EuiCode> to default selection to a specific\n          date.\n        </p>\n      ),\n      demo: <OpenToDate />,\n    },\n    {\n      title: 'Custom input',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: customInputSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: customInputHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use <EuiCode>customInput</EuiCode> to pass a custom input to trigger\n          your calendar.\n        </p>\n      ),\n      demo: <CustomInput />,\n    },\n    {\n      title: 'UTC offsets',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: utcSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: utcHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use <EuiCode>utcOffset</EuiCode> to apply an offset to the datetime.\n        </p>\n      ),\n      demo: <Utc />,\n    },\n    {\n      title: 'Date picker inline',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: inlineSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: inlineHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the <EuiCode>inline</EuiCode> prop to display the date picker\n          directly in the page. If you do not need the shadows / popover effect\n          to the date picker then also apply the <EuiCode>shadow=false</EuiCode>{' '}\n          prop as shown in the second example.\n        </p>\n      ),\n      demo: <Inline />,\n    },\n    {\n      title: 'Custom classes',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: classesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: classesHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Custom classes can be passed to various bits of the calendar and\n            input.\n          </p>\n          <ul>\n            <li>\n              <EuiCode>className</EuiCode> will pass onto the input.\n            </li>\n            <li>\n              <EuiCode>calendarClassName</EuiCode> will pass onto the calendar\n              itself.\n            </li>\n            <li>\n              <EuiCode>dayClassName</EuiCode> will pass onto specificed days.\n            </li>\n          </ul>\n        </div>\n      ),\n      demo: <Classes />,\n    },\n    {\n      title: 'Super date picker',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: superDatePickerSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: superDatePickerHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> date times are\n            passed as strings in either datemath format (e.g.: now, now-15m,\n            now-15m/m) or as absolute date in the format{' '}\n            <EuiCode>YYYY-MM-DDTHH:mm:ss.SSSZ</EuiCode>. Use{' '}\n            <EuiLink href=\"https://github.com/elastic/datemath-js\">\n              datemath\n            </EuiLink>{' '}\n            to convert start and end strings into moment objects.\n          </p>\n          <EuiCodeBlock paddingSize=\"none\" isCopyable>\n            {`\nimport dateMath from '@elastic/datemath';\n\nconst startMoment = dateMath.parse(start);\n// dateMath.parse is inconsistent with unparsable strings.\n// Sometimes undefined is returned, other times an invalid moment is returned\nif (!startMoment || !startMoment.isValid()) {\n  throw new Error('Unable to parse start string');\n}\n\n// Pass roundUp when parsing end string\nconst endMoment = dateMath.parse(end, { roundUp: true });\nif (!endMoment || !endMoment.isValid()) {\n  throw new Error('Unable to parse end string');\n}\n          `}\n          </EuiCodeBlock>\n          <p>\n            <EuiCode>onTimeChange</EuiCode> will be immediately invoked when{' '}\n            <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> change from\n            interactions with <strong> Quick select</strong>,{' '}\n            <strong>Commonly used</strong>, or{' '}\n            <strong>Recently used date ranges</strong> since these interactions\n            set both <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> in a\n            single event.\n          </p>\n          <p>\n            <EuiCode>onTimeChange</EuiCode> will <strong>not</strong> be invoked\n            when\n            <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> change from\n            interactions with <strong>Absolute</strong>,{' '}\n            <strong>Relative</strong>, and <strong>Now</strong> tabs.{' '}\n            <EuiCode>onTimeChange</EuiCode> will be invoked when the user clicks\n            the <strong>Update</strong> button. This gives users the ability to\n            set both <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> before\n            triggering <EuiCode>onTimeChange</EuiCode>. Set{' '}\n            <EuiCode>showUpdateButton</EuiCode> to <EuiCode>false</EuiCode> to\n            immediately invoke <EuiCode>onTimeChange</EuiCode> for all{' '}\n            <EuiCode>start</EuiCode> and <EuiCode>end</EuiCode> changes.\n          </p>\n          <p>\n            Set <EuiCode>isAutoRefreshOnly</EuiCode> to <EuiCode>true </EuiCode>{' '}\n            to limit the component to only display auto refresh content. This is\n            useful in cases where there is no time data but auto-refresh\n            configuration is still desired.\n          </p>\n        </div>\n      ),\n      demo: <SuperDatePicker />,\n      props: { EuiSuperDatePicker, EuiSuperUpdateButton },\n    },\n  ],\n};\n"]}]}