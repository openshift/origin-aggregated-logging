{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer.js","mtime":1565204169514},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MutationObserver = void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _components = require(\"../../../../src/components\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MutationObserver =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MutationObserver, _Component);\n\n  function MutationObserver(props) {\n    var _this;\n\n    _classCallCheck(this, MutationObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MutationObserver).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleButtonColor\", function () {\n      _this.setState(function (_ref) {\n        var buttonColor = _ref.buttonColor;\n        return {\n          buttonColor: buttonColor === 'primary' ? 'warning' : 'primary'\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addItem\", function () {\n      _this.setState(function (_ref2) {\n        var items = _ref2.items;\n        return {\n          items: _toConsumableArray(items).concat([\"Item \".concat(items.length + 1)])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMutation\", function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          type = _ref4[0].type;\n\n      _this.setState({\n        lastMutation: type === 'attributes' ? 'button class name changed' : 'DOM tree changed'\n      });\n    });\n\n    _this.state = {\n      lastMutation: 'no changes detected',\n      buttonColor: 'primary',\n      items: ['Item 1', 'Item 2', 'Item 3']\n    };\n    return _this;\n  }\n\n  _createClass(MutationObserver, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, this.state.lastMutation), _react.default.createElement(_components.EuiSpacer, null), _react.default.createElement(_components.EuiMutationObserver, {\n        observerOptions: {\n          subtree: true,\n          attributes: true,\n          childList: true\n        },\n        onMutation: this.onMutation\n      }, function (mutationRef) {\n        return _react.default.createElement(\"div\", {\n          ref: mutationRef\n        }, _react.default.createElement(_components.EuiButton, {\n          color: _this2.state.buttonColor,\n          fill: true,\n          onClick: _this2.toggleButtonColor\n        }, \"Toggle button color\"), _react.default.createElement(_components.EuiSpacer, null), _react.default.createElement(_components.EuiFlexGroup, null, _react.default.createElement(_components.EuiFlexItem, {\n          grow: false\n        }, _react.default.createElement(_components.EuiPanel, {\n          grow: false\n        }, _react.default.createElement(\"ul\", null, _this2.state.items.map(function (item) {\n          return _react.default.createElement(\"li\", {\n            key: item\n          }, item);\n        })), _react.default.createElement(_components.EuiSpacer, {\n          size: \"s\"\n        }), _react.default.createElement(_components.EuiButtonEmpty, {\n          onClick: _this2.addItem\n        }, \"add item\")))));\n      }));\n    }\n  }]);\n\n  return MutationObserver;\n}(_react.Component);\n\nexports.MutationObserver = MutationObserver;\nMutationObserver.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"toggleButtonColor\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"addItem\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onMutation\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"[{ type }]\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"MutationObserver\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer.js"],"names":["MutationObserver","props","setState","buttonColor","items","length","type","lastMutation","state","subtree","attributes","childList","onMutation","mutationRef","toggleButtonColor","map","item","addItem","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUaA,gB;;;;;AACX,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,gGAUC,YAAM;AACxB,YAAKC,QAAL,CAAc;AAAA,YAAGC,WAAH,QAAGA,WAAH;AAAA,eAAsB;AAClCA,UAAAA,WAAW,EAAEA,WAAW,KAAK,SAAhB,GAA4B,SAA5B,GAAwC;AADnB,SAAtB;AAAA,OAAd;AAGD,KAdkB;;AAAA,sFAgBT,YAAM;AACd,YAAKD,QAAL,CAAc;AAAA,YAAGE,KAAH,SAAGA,KAAH;AAAA,eAAgB;AAC5BA,UAAAA,KAAK,qBAAMA,KAAN,yBAAqBA,KAAK,CAACC,MAAN,GAAe,CAApC;AADuB,SAAhB;AAAA,OAAd;AAGD,KApBkB;;AAAA,yFAsBN,iBAAgB;AAAA;AAAA,UAAZC,IAAY,YAAZA,IAAY;;AAC3B,YAAKJ,QAAL,CAAc;AACZK,QAAAA,YAAY,EACVD,IAAI,KAAK,YAAT,GACI,2BADJ,GAEI;AAJM,OAAd;AAMD,KA7BkB;;AAGjB,UAAKE,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE,qBADH;AAEXJ,MAAAA,WAAW,EAAE,SAFF;AAGXC,MAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB;AAHI,KAAb;AAHiB;AAQlB;;;;6BAuBQ;AAAA;;AACP,aACE,0CACE,wCAAI,KAAKI,KAAL,CAAWD,YAAf,CADF,EAGE,6BAAC,qBAAD,OAHF,EAKE,6BAAC,+BAAD;AACE,QAAA,eAAe,EAAE;AAAEE,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,UAAU,EAAE,IAA7B;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SADnB;AAEE,QAAA,UAAU,EAAE,KAAKC;AAFnB,SAGG,UAAAC,WAAW;AAAA,eACV;AAAK,UAAA,GAAG,EAAEA;AAAV,WACE,6BAAC,qBAAD;AACE,UAAA,KAAK,EAAE,MAAI,CAACL,KAAL,CAAWL,WADpB;AAEE,UAAA,IAAI,EAAE,IAFR;AAGE,UAAA,OAAO,EAAE,MAAI,CAACW;AAHhB,iCADF,EAQE,6BAAC,qBAAD,OARF,EAUE,6BAAC,wBAAD,QACE,6BAAC,uBAAD;AAAa,UAAA,IAAI,EAAE;AAAnB,WACE,6BAAC,oBAAD;AAAU,UAAA,IAAI,EAAE;AAAhB,WACE,yCACG,MAAI,CAACN,KAAL,CAAWJ,KAAX,CAAiBW,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBACxB;AAAI,YAAA,GAAG,EAAEA;AAAT,aAAgBA,IAAhB,CADwB;AAAA,SAAzB,CADH,CADF,EAME,6BAAC,qBAAD;AAAW,UAAA,IAAI,EAAC;AAAhB,UANF,EAOE,6BAAC,0BAAD;AAAgB,UAAA,OAAO,EAAE,MAAI,CAACC;AAA9B,sBAPF,CADF,CADF,CAVF,CADU;AAAA,OAHd,CALF,CADF;AAwCD;;;;EAzEmCC,gB","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiFlexItem,\n  EuiFlexGroup,\n  EuiMutationObserver,\n  EuiPanel,\n  EuiSpacer,\n} from '../../../../src/components';\n\nexport class MutationObserver extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lastMutation: 'no changes detected',\n      buttonColor: 'primary',\n      items: ['Item 1', 'Item 2', 'Item 3'],\n    };\n  }\n\n  toggleButtonColor = () => {\n    this.setState(({ buttonColor }) => ({\n      buttonColor: buttonColor === 'primary' ? 'warning' : 'primary',\n    }));\n  };\n\n  addItem = () => {\n    this.setState(({ items }) => ({\n      items: [...items, `Item ${items.length + 1}`],\n    }));\n  };\n\n  onMutation = ([{ type }]) => {\n    this.setState({\n      lastMutation:\n        type === 'attributes'\n          ? 'button class name changed'\n          : 'DOM tree changed',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.lastMutation}</p>\n\n        <EuiSpacer />\n\n        <EuiMutationObserver\n          observerOptions={{ subtree: true, attributes: true, childList: true }}\n          onMutation={this.onMutation}>\n          {mutationRef => (\n            <div ref={mutationRef}>\n              <EuiButton\n                color={this.state.buttonColor}\n                fill={true}\n                onClick={this.toggleButtonColor}>\n                Toggle button color\n              </EuiButton>\n\n              <EuiSpacer />\n\n              <EuiFlexGroup>\n                <EuiFlexItem grow={false}>\n                  <EuiPanel grow={false}>\n                    <ul>\n                      {this.state.items.map(item => (\n                        <li key={item}>{item}</li>\n                      ))}\n                    </ul>\n                    <EuiSpacer size=\"s\" />\n                    <EuiButtonEmpty onClick={this.addItem}>\n                      add item\n                    </EuiButtonEmpty>\n                  </EuiPanel>\n                </EuiFlexItem>\n              </EuiFlexGroup>\n            </div>\n          )}\n        </EuiMutationObserver>\n      </div>\n    );\n  }\n}\n"]}]}