{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/table/table_header_cell.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/table/table_header_cell.tsx","mtime":1567626462190},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiTableHeaderCell = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _accessibility = require(\"../accessibility\");\n\nvar _icon = require(\"../icon\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar EuiTableHeaderCell = function EuiTableHeaderCell(_ref) {\n  var children = _ref.children,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? _services.LEFT_ALIGNMENT : _ref$align,\n      onSort = _ref.onSort,\n      isSorted = _ref.isSorted,\n      isSortAscending = _ref.isSortAscending,\n      allowNeutralSort = _ref.allowNeutralSort,\n      className = _ref.className,\n      _ref$scope = _ref.scope,\n      scope = _ref$scope === void 0 ? 'col' : _ref$scope,\n      _ref$mobileOptions = _ref.mobileOptions,\n      mobileOptions = _ref$mobileOptions === void 0 ? {\n    show: true\n  } : _ref$mobileOptions,\n      isMobileHeader = _ref.isMobileHeader,\n      hideForMobile = _ref.hideForMobile,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"align\", \"onSort\", \"isSorted\", \"isSortAscending\", \"allowNeutralSort\", \"className\", \"scope\", \"mobileOptions\", \"isMobileHeader\", \"hideForMobile\"]);\n\n  var classes = (0, _classnames.default)('euiTableHeaderCell', className, {\n    'euiTableHeaderCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableHeaderCell--hideForMobile': !mobileOptions.show || hideForMobile\n  });\n  var contentClasses = (0, _classnames.default)('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === _services.RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === _services.CENTER_ALIGNMENT\n  });\n\n  if (onSort) {\n    var getScreenCasterDirection = function getScreenCasterDirection() {\n      if (ariaSortValue === 'ascending') {\n        return 'Click to sort in descending order';\n      }\n\n      if (allowNeutralSort && ariaSortValue === 'descending') {\n        return 'Click to unsort';\n      }\n\n      return 'Click to sort in ascending order';\n    };\n\n    var buttonClasses = (0, _classnames.default)('euiTableHeaderButton', {\n      'euiTableHeaderButton-isSorted': isSorted\n    });\n    var ariaSortValue = 'none';\n\n    if (isSorted) {\n      ariaSortValue = isSortAscending ? 'ascending' : 'descending';\n    }\n\n    return _react.default.createElement(\"th\", _extends({\n      className: classes,\n      scope: scope,\n      role: \"columnheader\",\n      \"aria-sort\": ariaSortValue,\n      \"aria-live\": \"polite\"\n    }, rest), _react.default.createElement(\"button\", {\n      type: \"button\",\n      className: buttonClasses,\n      onClick: onSort,\n      \"data-test-subj\": \"tableHeaderSortButton\"\n    }, _react.default.createElement(\"span\", {\n      className: contentClasses\n    }, _react.default.createElement(\"span\", {\n      className: \"euiTableCellContent__text\"\n    }, children), isSorted && _react.default.createElement(_icon.EuiIcon, {\n      className: \"euiTableSortIcon\",\n      type: isSortAscending ? 'sortUp' : 'sortDown',\n      size: \"m\",\n      \"aria-label\": \"Sorted in \".concat(ariaSortValue, \" order\")\n    }), _react.default.createElement(_accessibility.EuiScreenReaderOnly, null, _react.default.createElement(\"span\", null, getScreenCasterDirection())))));\n  }\n\n  return _react.default.createElement(\"th\", _extends({\n    className: classes,\n    scope: scope,\n    role: \"columnheader\"\n  }, rest), _react.default.createElement(\"div\", {\n    className: contentClasses\n  }, _react.default.createElement(\"span\", {\n    className: \"euiTableCellContent__text\"\n  }, children)));\n};\n\nexports.EuiTableHeaderCell = EuiTableHeaderCell;\nEuiTableHeaderCell.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  align: _propTypes.default.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n       * Set `allowNeutralSort` on EuiInMemoryTable to false to force column\n       * sorting.  EuiBasicTable always forces column sorting.\n       */\n  allowNeutralSort: _propTypes.default.bool,\n\n  /**\n       * _DEPRECATED: use `mobileOptions.show = false`_ Indicates if the\n       * column should not show for mobile users (typically hidden because a\n       * custom mobile header utilizes the column's contents)\n       */\n  hideForMobile: _propTypes.default.bool,\n\n  /**\n       * _DEPRECATED: use `mobileOptions.only = true`_ Indicates if the\n       * column was created to be the row's heading in mobile view (this\n       * column will be hidden at larger screens)\n       */\n  isMobileHeader: _propTypes.default.bool,\n  isSortAscending: _propTypes.default.bool,\n  isSorted: _propTypes.default.bool,\n\n  /**\n       * Mobile options for displaying differently at small screens\n       */\n  mobileOptions: _propTypes.default.shape({\n    /**\n           * If false, will not render the column at all for mobile\n           */\n    show: _propTypes.default.bool,\n\n    /**\n           * Only show for mobile? If true, will not render the column at all\n           * for desktop\n           */\n    only: _propTypes.default.bool\n  }),\n  onSort: _propTypes.default.any,\n  scope: _propTypes.default.oneOf([\"col\", \"row\", \"colgroup\", \"rowgroup\"])\n};\nEuiTableHeaderCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiTableHeaderCell\",\n  \"props\": {\n    \"align\": {\n      \"defaultValue\": {\n        \"value\": \"LEFT_ALIGNMENT\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.oneOf([\\\"left\\\", \\\"right\\\", \\\"center\\\"])\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scope\": {\n      \"defaultValue\": {\n        \"value\": \"'col'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"col\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"row\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"colgroup\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"rowgroup\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mobileOptions\": {\n      \"defaultValue\": {\n        \"value\": \"{\\n  show: true\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"show\": {\n            \"name\": \"bool\",\n            \"description\": \"If false, will not render the column at all for mobile\",\n            \"required\": false\n          },\n          \"only\": {\n            \"name\": \"bool\",\n            \"description\": \"Only show for mobile? If true, will not render the column at all\\nfor desktop\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Mobile options for displaying differently at small screens\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowNeutralSort\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set `allowNeutralSort` on EuiInMemoryTable to false to force column\\nsorting.  EuiBasicTable always forces column sorting.\"\n    },\n    \"hideForMobile\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.show = false`_ Indicates if the\\ncolumn should not show for mobile users (typically hidden because a\\ncustom mobile header utilizes the column's contents)\"\n    },\n    \"isMobileHeader\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.only = true`_ Indicates if the\\ncolumn was created to be the row's heading in mobile view (this\\ncolumn will be hidden at larger screens)\"\n    },\n    \"isSortAscending\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isSorted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onSort\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/table/table_header_cell.tsx"],"names":["EuiTableHeaderCell","children","align","LEFT_ALIGNMENT","onSort","isSorted","isSortAscending","allowNeutralSort","className","scope","mobileOptions","show","isMobileHeader","hideForMobile","rest","classes","only","contentClasses","RIGHT_ALIGNMENT","CENTER_ALIGNMENT","getScreenCasterDirection","ariaSortValue","buttonClasses"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAKA;;AAEA;;AAEA;;AAEA;;;;;;;;;;AAiDO,IAAMA,kBAA4C,GAAG,SAA/CA,kBAA+C,OAgBtD;AAAA,MAfJC,QAeI,QAfJA,QAeI;AAAA,wBAdJC,KAcI;AAAA,MAdJA,KAcI,2BAdIC,wBAcJ;AAAA,MAbJC,MAaI,QAbJA,MAaI;AAAA,MAZJC,QAYI,QAZJA,QAYI;AAAA,MAXJC,eAWI,QAXJA,eAWI;AAAA,MAVJC,gBAUI,QAVJA,gBAUI;AAAA,MATJC,SASI,QATJA,SASI;AAAA,wBARJC,KAQI;AAAA,MARJA,KAQI,2BARI,KAQJ;AAAA,gCAPJC,aAOI;AAAA,MAPJA,aAOI,mCAPY;AACdC,IAAAA,IAAI,EAAE;AADQ,GAOZ;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAG,yBAAW,oBAAX,EAAiCP,SAAjC,EAA4C;AAC1D,0CAAsCE,aAAa,CAACM,IAAd,IAAsBJ,cADF;AAE1D,yCAAqC,CAACF,aAAa,CAACC,IAAf,IAAuBE;AAFF,GAA5C,CAAhB;AAKA,MAAMI,cAAc,GAAG,yBAAW,qBAAX,EAAkCT,SAAlC,EAA6C;AAClE,uCAAmCN,KAAK,KAAKgB,yBADqB;AAElE,wCAAoChB,KAAK,KAAKiB;AAFoB,GAA7C,CAAvB;;AAKA,MAAIf,MAAJ,EAAY;AAAA,QAUDgB,wBAVC,GAUV,SAASA,wBAAT,GAAoC;AAClC,UAAIC,aAAa,KAAK,WAAtB,EAAmC;AACjC,eAAO,mCAAP;AACD;;AAED,UAAId,gBAAgB,IAAIc,aAAa,KAAK,YAA1C,EAAwD;AACtD,eAAO,iBAAP;AACD;;AAED,aAAO,kCAAP;AACD,KApBS;;AACV,QAAMC,aAAa,GAAG,yBAAW,sBAAX,EAAmC;AACvD,uCAAiCjB;AADsB,KAAnC,CAAtB;AAIA,QAAIgB,aAA+C,GAAG,MAAtD;;AACA,QAAIhB,QAAJ,EAAc;AACZgB,MAAAA,aAAa,GAAGf,eAAe,GAAG,WAAH,GAAiB,YAAhD;AACD;;AAcD,WACE;AACE,MAAA,SAAS,EAAES,OADb;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,mBAAWY,aAJb;AAKE,mBAAU;AALZ,OAMMP,IANN,GAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEQ,aAFb;AAGE,MAAA,OAAO,EAAElB,MAHX;AAIE,wBAAe;AAJjB,OAKE;AAAM,MAAA,SAAS,EAAEa;AAAjB,OACE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAA6ChB,QAA7C,CADF,EAEGI,QAAQ,IACP,6BAAC,aAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAEC,eAAe,GAAG,QAAH,GAAc,UAFrC;AAGE,MAAA,IAAI,EAAC,GAHP;AAIE,wCAAyBe,aAAzB;AAJF,MAHJ,EAUE,6BAAC,kCAAD,QACE,2CAAOD,wBAAwB,EAA/B,CADF,CAVF,CALF,CAPF,CADF;AA8BD;;AAED,SACE;AAAI,IAAA,SAAS,EAAEL,OAAf;AAAwB,IAAA,KAAK,EAAEN,KAA/B;AAAsC,IAAA,IAAI,EAAC;AAA3C,KAA8DK,IAA9D,GACE;AAAK,IAAA,SAAS,EAAEG;AAAhB,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA6ChB,QAA7C,CADF,CADF,CADF;AAOD,CAxFM","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiIcon } from '../icon';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT } from '../../services';\nexport var EuiTableHeaderCell = ({\n  children,\n  align = LEFT_ALIGNMENT,\n  onSort,\n  isSorted,\n  isSortAscending,\n  allowNeutralSort,\n  className,\n  scope = 'col',\n  mobileOptions = {\n    show: true\n  },\n  // Soon to be deprecated for {...mobileOptions}\n  isMobileHeader,\n  hideForMobile,\n  ...rest\n}) => {\n  const classes = classNames('euiTableHeaderCell', className, {\n    'euiTableHeaderCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableHeaderCell--hideForMobile': !mobileOptions.show || hideForMobile\n  });\n  const contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT\n  });\n\n  if (onSort) {\n    const buttonClasses = classNames('euiTableHeaderButton', {\n      'euiTableHeaderButton-isSorted': isSorted\n    });\n    let ariaSortValue = 'none';\n\n    if (isSorted) {\n      ariaSortValue = isSortAscending ? 'ascending' : 'descending';\n    }\n\n    function getScreenCasterDirection() {\n      if (ariaSortValue === 'ascending') {\n        return 'Click to sort in descending order';\n      }\n\n      if (allowNeutralSort && ariaSortValue === 'descending') {\n        return 'Click to unsort';\n      }\n\n      return 'Click to sort in ascending order';\n    }\n\n    return <th className={classes} scope={scope} role=\"columnheader\" aria-sort={ariaSortValue} aria-live=\"polite\" {...rest}>\n        <button type=\"button\" className={buttonClasses} onClick={onSort} data-test-subj=\"tableHeaderSortButton\">\n          <span className={contentClasses}>\n            <span className=\"euiTableCellContent__text\">{children}</span>\n            {isSorted && <EuiIcon className=\"euiTableSortIcon\" type={isSortAscending ? 'sortUp' : 'sortDown'} size=\"m\" aria-label={`Sorted in ${ariaSortValue} order`} />}\n            <EuiScreenReaderOnly>\n              <span>{getScreenCasterDirection()}</span>\n            </EuiScreenReaderOnly>\n          </span>\n        </button>\n      </th>;\n  }\n\n  return <th className={classes} scope={scope} role=\"columnheader\" {...rest}>\n      <div className={contentClasses}>\n        <span className=\"euiTableCellContent__text\">{children}</span>\n      </div>\n    </th>;\n};\nEuiTableHeaderCell.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  align: _propTypes.default.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n       * Set `allowNeutralSort` on EuiInMemoryTable to false to force column\n       * sorting.  EuiBasicTable always forces column sorting.\n       */\n  allowNeutralSort: PropTypes.bool,\n\n  /**\n       * _DEPRECATED: use `mobileOptions.show = false`_ Indicates if the\n       * column should not show for mobile users (typically hidden because a\n       * custom mobile header utilizes the column's contents)\n       */\n  hideForMobile: PropTypes.bool,\n\n  /**\n       * _DEPRECATED: use `mobileOptions.only = true`_ Indicates if the\n       * column was created to be the row's heading in mobile view (this\n       * column will be hidden at larger screens)\n       */\n  isMobileHeader: PropTypes.bool,\n  isSortAscending: PropTypes.bool,\n  isSorted: PropTypes.bool,\n\n  /**\n       * Mobile options for displaying differently at small screens\n       */\n  mobileOptions: PropTypes.shape({\n    /**\n           * If false, will not render the column at all for mobile\n           */\n    show: PropTypes.bool,\n\n    /**\n           * Only show for mobile? If true, will not render the column at all\n           * for desktop\n           */\n    only: PropTypes.bool\n  }),\n  onSort: PropTypes.any,\n  scope: PropTypes.oneOf([\"col\", \"row\", \"colgroup\", \"rowgroup\"])\n};"]}]}