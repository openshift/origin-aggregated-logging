{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/date_popover/date_popover_content.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/date_popover/date_popover_content.js","mtime":1565204169665},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiDatePopoverContent = EuiDatePopoverContent;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _tabs = require(\"../../../tabs\");\n\nvar _text = require(\"../../../text\");\n\nvar _button = require(\"../../../button\");\n\nvar _absolute_tab = require(\"./absolute_tab\");\n\nvar _relative_tab = require(\"./relative_tab\");\n\nvar _date_modes = require(\"../date_modes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction EuiDatePopoverContent(_ref) {\n  var value = _ref.value,\n      roundUp = _ref.roundUp,\n      onChange = _ref.onChange,\n      dateFormat = _ref.dateFormat,\n      position = _ref.position;\n\n  var onTabClick = function onTabClick(selectedTab) {\n    switch (selectedTab.id) {\n      case _date_modes.DATE_MODES.ABSOLUTE:\n        onChange((0, _date_modes.toAbsoluteString)(value, roundUp));\n        break;\n\n      case _date_modes.DATE_MODES.RELATIVE:\n        onChange((0, _date_modes.toRelativeString)(value));\n        break;\n    }\n  };\n\n  var ariaLabel = \"\".concat(position === 'start' ? 'Start' : 'End', \" date:\");\n\n  var renderTabs = function renderTabs() {\n    return [{\n      id: _date_modes.DATE_MODES.ABSOLUTE,\n      name: 'Absolute',\n      content: _react.default.createElement(_absolute_tab.EuiAbsoluteTab, {\n        dateFormat: dateFormat,\n        value: value,\n        onChange: onChange,\n        roundUp: roundUp,\n        position: position\n      }),\n      'data-test-subj': 'superDatePickerAbsoluteTab',\n      'aria-label': \"\".concat(ariaLabel, \" Absolute\")\n    }, {\n      id: _date_modes.DATE_MODES.RELATIVE,\n      name: 'Relative',\n      content: _react.default.createElement(_relative_tab.EuiRelativeTab, {\n        dateFormat: dateFormat,\n        value: value,\n        onChange: onChange,\n        roundUp: roundUp,\n        position: position\n      }),\n      'data-test-subj': 'superDatePickerRelativeTab',\n      'aria-label': \"\".concat(ariaLabel, \" Relative\")\n    }, {\n      id: _date_modes.DATE_MODES.NOW,\n      name: 'Now',\n      content: _react.default.createElement(_text.EuiText, {\n        size: \"s\",\n        color: \"subdued\",\n        className: \"euiDatePopoverContent__padded--large\"\n      }, _react.default.createElement(\"p\", null, \"Setting the time to \\\"now\\\" means that on every refresh this time will be set to the time of the refresh.\"), _react.default.createElement(_button.EuiButton, {\n        \"data-test-subj\": \"superDatePickerNowButton\",\n        onClick: function onClick() {\n          return onChange('now');\n        },\n        fullWidth: true,\n        size: \"s\",\n        fill: true\n      }, \"Set \", position, \" date and time to now\")),\n      'data-test-subj': 'superDatePickerNowTab',\n      'aria-label': \"\".concat(ariaLabel, \" Now\")\n    }];\n  };\n\n  return _react.default.createElement(_tabs.EuiTabbedContent, {\n    className: \"euiDatePopoverContent\",\n    tabs: renderTabs(),\n    autoFocus: \"selected\",\n    initialSelectedTab: {\n      id: (0, _date_modes.getDateMode)(value)\n    },\n    onTabClick: onTabClick,\n    size: \"s\",\n    expand: true\n  });\n}\n\nEuiDatePopoverContent.propTypes = {\n  value: _propTypes.default.string.isRequired,\n  onChange: _propTypes.default.func.isRequired,\n  roundUp: _propTypes.default.bool,\n  dateFormat: _propTypes.default.string.isRequired,\n  position: _propTypes.default.oneOf(['start', 'end'])\n};\nEuiDatePopoverContent.defaultProps = {\n  roundUp: false\n};\nEuiDatePopoverContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiDatePopoverContent\",\n  \"props\": {\n    \"roundUp\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"dateFormat\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"position\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'start'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'end'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/date_popover/date_popover_content.js"],"names":["EuiDatePopoverContent","value","roundUp","onChange","dateFormat","position","onTabClick","selectedTab","id","DATE_MODES","ABSOLUTE","RELATIVE","ariaLabel","renderTabs","name","content","NOW","propTypes","PropTypes","string","isRequired","func","bool","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { EuiTabbedContent } from '../../../tabs';\nimport { EuiText } from '../../../text';\nimport { EuiButton } from '../../../button';\n\nimport { EuiAbsoluteTab } from './absolute_tab';\nimport { EuiRelativeTab } from './relative_tab';\n\nimport {\n  getDateMode,\n  DATE_MODES,\n  toAbsoluteString,\n  toRelativeString,\n} from '../date_modes';\n\nexport function EuiDatePopoverContent({\n  value,\n  roundUp,\n  onChange,\n  dateFormat,\n  position,\n}) {\n  const onTabClick = selectedTab => {\n    switch (selectedTab.id) {\n      case DATE_MODES.ABSOLUTE:\n        onChange(toAbsoluteString(value, roundUp));\n        break;\n      case DATE_MODES.RELATIVE:\n        onChange(toRelativeString(value));\n        break;\n    }\n  };\n\n  const ariaLabel = `${position === 'start' ? 'Start' : 'End'} date:`;\n\n  const renderTabs = () => {\n    return [\n      {\n        id: DATE_MODES.ABSOLUTE,\n        name: 'Absolute',\n        content: (\n          <EuiAbsoluteTab\n            dateFormat={dateFormat}\n            value={value}\n            onChange={onChange}\n            roundUp={roundUp}\n            position={position}\n          />\n        ),\n        'data-test-subj': 'superDatePickerAbsoluteTab',\n        'aria-label': `${ariaLabel} Absolute`,\n      },\n      {\n        id: DATE_MODES.RELATIVE,\n        name: 'Relative',\n        content: (\n          <EuiRelativeTab\n            dateFormat={dateFormat}\n            value={value}\n            onChange={onChange}\n            roundUp={roundUp}\n            position={position}\n          />\n        ),\n        'data-test-subj': 'superDatePickerRelativeTab',\n        'aria-label': `${ariaLabel} Relative`,\n      },\n      {\n        id: DATE_MODES.NOW,\n        name: 'Now',\n        content: (\n          <EuiText\n            size=\"s\"\n            color=\"subdued\"\n            className=\"euiDatePopoverContent__padded--large\">\n            <p>\n              Setting the time to &quot;now&quot; means that on every refresh\n              this time will be set to the time of the refresh.\n            </p>\n            <EuiButton\n              data-test-subj=\"superDatePickerNowButton\"\n              onClick={() => onChange('now')}\n              fullWidth\n              size=\"s\"\n              fill>\n              Set {position} date and time to now\n            </EuiButton>\n          </EuiText>\n        ),\n        'data-test-subj': 'superDatePickerNowTab',\n        'aria-label': `${ariaLabel} Now`,\n      },\n    ];\n  };\n\n  return (\n    <EuiTabbedContent\n      className=\"euiDatePopoverContent\"\n      tabs={renderTabs()}\n      autoFocus=\"selected\"\n      initialSelectedTab={{ id: getDateMode(value) }}\n      onTabClick={onTabClick}\n      size=\"s\"\n      expand\n    />\n  );\n}\n\nEuiDatePopoverContent.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  roundUp: PropTypes.bool,\n  dateFormat: PropTypes.string.isRequired,\n  position: PropTypes.oneOf(['start', 'end']),\n};\n\nEuiDatePopoverContent.defaultProps = {\n  roundUp: false,\n};\n"]}]}