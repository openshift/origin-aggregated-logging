{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/breadcrumbs/breadcrumbs.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/breadcrumbs/breadcrumbs.js","mtime":1565204169608},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiBreadcrumbs = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _link = require(\"../link\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar limitBreadcrumbs = function limitBreadcrumbs(breadcrumbs, max) {\n  var breadcrumbsAtStart = [];\n  var breadcrumbsAtEnd = [];\n  var limit = Math.min(max, breadcrumbs.length);\n\n  for (var i = 0; i < limit; i++) {\n    // We'll alternate with displaying breadcrumbs at the end and at the start, but be biased\n    // towards breadcrumbs the end so that if max is an odd number, we'll have one more\n    // breadcrumb visible at the end than at the beginning.\n    var isEven = i % 2 === 0; // We're picking breadcrumbs from the front AND the back, so we treat each iteration as a\n    // half-iteration.\n\n    var normalizedIndex = Math.floor(i * 0.5);\n    var indexOfBreadcrumb = isEven ? breadcrumbs.length - 1 - normalizedIndex : normalizedIndex;\n    var breadcrumb = breadcrumbs[indexOfBreadcrumb];\n\n    if (isEven) {\n      breadcrumbsAtEnd.unshift(breadcrumb);\n    } else {\n      breadcrumbsAtStart.push(breadcrumb);\n    }\n  }\n\n  if (max < breadcrumbs.length) {\n    breadcrumbsAtStart.push(_react.default.createElement(EuiBreadcrumbCollapsed, {\n      key: \"collapsed\"\n    }));\n  }\n\n  return breadcrumbsAtStart.concat(breadcrumbsAtEnd);\n};\n\nvar EuiBreadcrumbCollapsed = function EuiBreadcrumbCollapsed() {\n  return _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"div\", {\n    className: \"euiBreadcrumb euiBreadcrumb--collapsed\"\n  }, \"\\u2026\"), _react.default.createElement(EuiBreadcrumbSeparator, null));\n};\n\nvar EuiBreadcrumbSeparator = function EuiBreadcrumbSeparator() {\n  return _react.default.createElement(\"div\", {\n    className: \"euiBreadcrumbSeparator\"\n  });\n};\n\nvar EuiBreadcrumbs = function EuiBreadcrumbs(_ref) {\n  var breadcrumbs = _ref.breadcrumbs,\n      className = _ref.className,\n      responsive = _ref.responsive,\n      truncate = _ref.truncate,\n      max = _ref.max,\n      rest = _objectWithoutProperties(_ref, [\"breadcrumbs\", \"className\", \"responsive\", \"truncate\", \"max\"]);\n\n  var breadcrumbElements = breadcrumbs.map(function (breadcrumb, index) {\n    var text = breadcrumb.text,\n        href = breadcrumb.href,\n        onClick = breadcrumb.onClick,\n        truncate = breadcrumb.truncate,\n        breadcrumbClassName = breadcrumb.className,\n        breadcrumbRest = _objectWithoutProperties(breadcrumb, [\"text\", \"href\", \"onClick\", \"truncate\", \"className\"]);\n\n    var isLastBreadcrumb = index === breadcrumbs.length - 1;\n    var breadcrumbClasses = (0, _classnames.default)('euiBreadcrumb', breadcrumbClassName, {\n      'euiBreadcrumb--last': isLastBreadcrumb,\n      'euiBreadcrumb--truncate': truncate\n    });\n    var link;\n\n    if (isLastBreadcrumb && !href) {\n      link = _react.default.createElement(\"span\", _extends({\n        className: breadcrumbClasses,\n        title: text,\n        \"aria-current\": \"page\"\n      }, breadcrumbRest), text);\n    } else {\n      link = _react.default.createElement(_link.EuiLink, _extends({\n        color: isLastBreadcrumb ? 'text' : 'subdued',\n        onClick: onClick,\n        href: href,\n        className: breadcrumbClasses,\n        title: text\n      }, breadcrumbRest), text);\n    }\n\n    var separator;\n\n    if (!isLastBreadcrumb) {\n      separator = _react.default.createElement(EuiBreadcrumbSeparator, null);\n    }\n\n    return _react.default.createElement(_react.Fragment, {\n      key: index\n    }, link, separator);\n  });\n  var limitedBreadcrumbs = max ? limitBreadcrumbs(breadcrumbElements, max) : breadcrumbElements;\n  var classes = (0, _classnames.default)('euiBreadcrumbs', className, {\n    'euiBreadcrumbs--truncate': truncate,\n    'euiBreadcrumbs--responsive': responsive\n  });\n  return _react.default.createElement(\"nav\", _extends({\n    \"aria-label\": \"breadcrumb\",\n    className: classes\n  }, rest), limitedBreadcrumbs);\n};\n\nexports.EuiBreadcrumbs = EuiBreadcrumbs;\nEuiBreadcrumbs.propTypes = {\n  className: _propTypes.default.string,\n\n  /**\n   * Hides left most breadcrumbs as window gets smaller\n   */\n  responsive: _propTypes.default.bool,\n\n  /**\n   * Forces all breadcrumbs to single line and\n   * truncates each breadcrumb to a particular width,\n   * except for the last item\n   */\n  truncate: _propTypes.default.bool,\n\n  /**\n   * Condenses the inner items past the maximum set here\n   * into a single ellipses item\n   */\n  max: _propTypes.default.number,\n\n  /**\n   * The array of individual breadcrumbs, takes the following props.\n   * `text` (node) (required): visible label of the breadcrumb,\n   * `href` or `onClick`: provide only one (last breadcrumb will not apply either),\n   * `truncate` (bool): Force a max-width on the breadcrumb text\n   */\n  breadcrumbs: _propTypes.default.arrayOf(_propTypes.default.shape({\n    text: _propTypes.default.node.isRequired,\n    href: _propTypes.default.string,\n    onClick: _propTypes.default.func,\n    truncate: _propTypes.default.bool\n  })).isRequired\n};\nEuiBreadcrumbs.defaultProps = {\n  responsive: true,\n  truncate: true,\n  max: 5\n};\nEuiBreadcrumbs.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiBreadcrumbs\",\n  \"props\": {\n    \"responsive\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Hides left most breadcrumbs as window gets smaller\"\n    },\n    \"truncate\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Forces all breadcrumbs to single line and\\ntruncates each breadcrumb to a particular width,\\nexcept for the last item\"\n    },\n    \"max\": {\n      \"defaultValue\": {\n        \"value\": \"5\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Condenses the inner items past the maximum set here\\ninto a single ellipses item\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"breadcrumbs\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"text\": {\n              \"name\": \"node\",\n              \"required\": true\n            },\n            \"href\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"onClick\": {\n              \"name\": \"func\",\n              \"required\": false\n            },\n            \"truncate\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"The array of individual breadcrumbs, takes the following props.\\n`text` (node) (required): visible label of the breadcrumb,\\n`href` or `onClick`: provide only one (last breadcrumb will not apply either),\\n`truncate` (bool): Force a max-width on the breadcrumb text\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/breadcrumbs/breadcrumbs.js"],"names":["limitBreadcrumbs","breadcrumbs","max","breadcrumbsAtStart","breadcrumbsAtEnd","limit","Math","min","length","i","isEven","normalizedIndex","floor","indexOfBreadcrumb","breadcrumb","unshift","push","EuiBreadcrumbCollapsed","EuiBreadcrumbSeparator","EuiBreadcrumbs","className","responsive","truncate","rest","breadcrumbElements","map","index","text","href","onClick","breadcrumbClassName","breadcrumbRest","isLastBreadcrumb","breadcrumbClasses","link","separator","limitedBreadcrumbs","classes","propTypes","PropTypes","string","bool","number","arrayOf","shape","node","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiLink } from '../link';\n\nconst limitBreadcrumbs = (breadcrumbs, max) => {\n  const breadcrumbsAtStart = [];\n  const breadcrumbsAtEnd = [];\n  const limit = Math.min(max, breadcrumbs.length);\n\n  for (let i = 0; i < limit; i++) {\n    // We'll alternate with displaying breadcrumbs at the end and at the start, but be biased\n    // towards breadcrumbs the end so that if max is an odd number, we'll have one more\n    // breadcrumb visible at the end than at the beginning.\n    const isEven = i % 2 === 0;\n\n    // We're picking breadcrumbs from the front AND the back, so we treat each iteration as a\n    // half-iteration.\n    const normalizedIndex = Math.floor(i * 0.5);\n    const indexOfBreadcrumb = isEven\n      ? breadcrumbs.length - 1 - normalizedIndex\n      : normalizedIndex;\n    const breadcrumb = breadcrumbs[indexOfBreadcrumb];\n\n    if (isEven) {\n      breadcrumbsAtEnd.unshift(breadcrumb);\n    } else {\n      breadcrumbsAtStart.push(breadcrumb);\n    }\n  }\n\n  if (max < breadcrumbs.length) {\n    breadcrumbsAtStart.push(<EuiBreadcrumbCollapsed key=\"collapsed\" />);\n  }\n\n  return [...breadcrumbsAtStart, ...breadcrumbsAtEnd];\n};\n\nconst EuiBreadcrumbCollapsed = () => (\n  <Fragment>\n    <div className=\"euiBreadcrumb euiBreadcrumb--collapsed\">&#8230;</div>\n    <EuiBreadcrumbSeparator />\n  </Fragment>\n);\n\nconst EuiBreadcrumbSeparator = () => <div className=\"euiBreadcrumbSeparator\" />;\n\nexport const EuiBreadcrumbs = ({\n  breadcrumbs,\n  className,\n  responsive,\n  truncate,\n  max,\n  ...rest\n}) => {\n  const breadcrumbElements = breadcrumbs.map((breadcrumb, index) => {\n    const {\n      text,\n      href,\n      onClick,\n      truncate,\n      className: breadcrumbClassName,\n      ...breadcrumbRest\n    } = breadcrumb;\n\n    const isLastBreadcrumb = index === breadcrumbs.length - 1;\n\n    const breadcrumbClasses = classNames('euiBreadcrumb', breadcrumbClassName, {\n      'euiBreadcrumb--last': isLastBreadcrumb,\n      'euiBreadcrumb--truncate': truncate,\n    });\n\n    let link;\n\n    if (isLastBreadcrumb && !href) {\n      link = (\n        <span\n          className={breadcrumbClasses}\n          title={text}\n          aria-current=\"page\"\n          {...breadcrumbRest}>\n          {text}\n        </span>\n      );\n    } else {\n      link = (\n        <EuiLink\n          color={isLastBreadcrumb ? 'text' : 'subdued'}\n          onClick={onClick}\n          href={href}\n          className={breadcrumbClasses}\n          title={text}\n          {...breadcrumbRest}>\n          {text}\n        </EuiLink>\n      );\n    }\n\n    let separator;\n\n    if (!isLastBreadcrumb) {\n      separator = <EuiBreadcrumbSeparator />;\n    }\n\n    return (\n      <Fragment key={index}>\n        {link}\n        {separator}\n      </Fragment>\n    );\n  });\n\n  const limitedBreadcrumbs = max\n    ? limitBreadcrumbs(breadcrumbElements, max)\n    : breadcrumbElements;\n\n  const classes = classNames('euiBreadcrumbs', className, {\n    'euiBreadcrumbs--truncate': truncate,\n    'euiBreadcrumbs--responsive': responsive,\n  });\n\n  return (\n    <nav aria-label=\"breadcrumb\" className={classes} {...rest}>\n      {limitedBreadcrumbs}\n    </nav>\n  );\n};\n\nEuiBreadcrumbs.propTypes = {\n  className: PropTypes.string,\n\n  /**\n   * Hides left most breadcrumbs as window gets smaller\n   */\n  responsive: PropTypes.bool,\n\n  /**\n   * Forces all breadcrumbs to single line and\n   * truncates each breadcrumb to a particular width,\n   * except for the last item\n   */\n  truncate: PropTypes.bool,\n\n  /**\n   * Condenses the inner items past the maximum set here\n   * into a single ellipses item\n   */\n  max: PropTypes.number,\n\n  /**\n   * The array of individual breadcrumbs, takes the following props.\n   * `text` (node) (required): visible label of the breadcrumb,\n   * `href` or `onClick`: provide only one (last breadcrumb will not apply either),\n   * `truncate` (bool): Force a max-width on the breadcrumb text\n   */\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.node.isRequired,\n      href: PropTypes.string,\n      onClick: PropTypes.func,\n      truncate: PropTypes.bool,\n    })\n  ).isRequired,\n};\n\nEuiBreadcrumbs.defaultProps = {\n  responsive: true,\n  truncate: true,\n  max: 5,\n};\n"]}]}