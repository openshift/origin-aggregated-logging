{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/card/card.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/card/card.js","mtime":1565204169624},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiCard = exports.LAYOUT_ALIGNMENTS = exports.ALIGNMENTS = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _services = require(\"../../services\");\n\nvar _text = require(\"../text\");\n\nvar _title = require(\"../title\");\n\nvar _beta_badge = require(\"../badge/beta_badge\");\n\nvar _card_select = require(\"./card_select\");\n\nvar _make_id = _interopRequireDefault(require(\"../form/form_row/make_id\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar textAlignToClassNameMap = {\n  left: 'euiCard--leftAligned',\n  center: 'euiCard--centerAligned',\n  right: 'euiCard--rightAligned'\n};\nvar ALIGNMENTS = Object.keys(textAlignToClassNameMap);\nexports.ALIGNMENTS = ALIGNMENTS;\nvar layoutToClassNameMap = {\n  vertical: '',\n  horizontal: 'euiCard--horizontal'\n};\nvar LAYOUT_ALIGNMENTS = Object.keys(layoutToClassNameMap);\nexports.LAYOUT_ALIGNMENTS = LAYOUT_ALIGNMENTS;\n\nvar oneOfLayouts = _propTypes.default.oneOf(LAYOUT_ALIGNMENTS);\n\nvar cardLayout = function cardLayout(props, propName, componentName) {\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  var oneOfResult = oneOfLayouts.apply(void 0, [props, propName, componentName].concat(rest));\n  if (oneOfResult) return oneOfResult;\n\n  if (props[propName] === 'horizontal') {\n    if (props.image || props.footer) {\n      return new Error(\"\".concat(componentName, \": '\").concat(propName, \" = horizontal' cannot be used in conjunction with 'image', 'footer', or 'textAlign'.\"));\n    }\n  }\n};\n\nvar EuiCard = function EuiCard(_ref) {\n  var className = _ref.className,\n      description = _ref.description,\n      title = _ref.title,\n      titleElement = _ref.titleElement,\n      icon = _ref.icon,\n      image = _ref.image,\n      footer = _ref.footer,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      rel = _ref.rel,\n      target = _ref.target,\n      textAlign = _ref.textAlign,\n      isClickable = _ref.isClickable,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeTitle = _ref.betaBadgeTitle,\n      layout = _ref.layout,\n      bottomGraphic = _ref.bottomGraphic,\n      selectable = _ref.selectable,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"description\", \"title\", \"titleElement\", \"icon\", \"image\", \"footer\", \"onClick\", \"href\", \"rel\", \"target\", \"textAlign\", \"isClickable\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeTitle\", \"layout\", \"bottomGraphic\", \"selectable\"]);\n\n  var selectableColorClass = selectable ? \"euiCard--isSelectable--\".concat((0, _card_select.euiCardSelectableColor)(selectable.color, selectable.isSelected)) : undefined;\n  var classes = (0, _classnames.default)('euiCard', textAlignToClassNameMap[textAlign], layoutToClassNameMap[layout], {\n    'euiCard--isClickable': onClick || href || isClickable,\n    'euiCard--hasBetaBadge': betaBadgeLabel,\n    'euiCard--hasIcon': icon,\n    'euiCard--hasBottomGraphic': bottomGraphic,\n    'euiCard--isSelectable': selectable,\n    'euiCard-isSelected': selectable && selectable.isSelected\n  }, selectableColorClass, className);\n  var ariaId = (0, _make_id.default)();\n  var secureRel;\n\n  if (href) {\n    secureRel = (0, _services.getSecureRelForTarget)({\n      href: href,\n      target: target,\n      rel: rel\n    });\n  }\n\n  var imageNode;\n\n  if (image && layout === 'vertical') {\n    imageNode = _react.default.createElement(\"img\", {\n      className: \"euiCard__image\",\n      src: image,\n      alt: \"\"\n    });\n  }\n\n  var iconNode;\n\n  if (icon) {\n    iconNode = _react.default.cloneElement(icon, {\n      className: (0, _classnames.default)(icon.props.className, 'euiCard__icon')\n    });\n  }\n\n  var OuterElement = 'div';\n\n  if (href) {\n    OuterElement = 'a';\n  } else if (onClick) {\n    OuterElement = 'button';\n  }\n\n  var TitleElement = titleElement;\n\n  if (OuterElement === 'button') {\n    TitleElement = 'span';\n  }\n\n  var optionalCardTop;\n\n  if (imageNode || iconNode) {\n    optionalCardTop = _react.default.createElement(\"span\", {\n      className: \"euiCard__top\"\n    }, imageNode, iconNode);\n  }\n\n  var optionalBetaBadge;\n\n  if (betaBadgeLabel) {\n    optionalBetaBadge = _react.default.createElement(\"span\", {\n      className: \"euiCard__betaBadgeWrapper\"\n    }, _react.default.createElement(_beta_badge.EuiBetaBadge, {\n      label: betaBadgeLabel,\n      title: betaBadgeTitle,\n      tooltipContent: betaBadgeTooltipContent,\n      className: \"euiCard__betaBadge\"\n    }));\n  }\n\n  var optionalBottomGraphic;\n\n  if (bottomGraphic) {\n    optionalBottomGraphic = _react.default.createElement(\"span\", {\n      className: \"euiCard__graphic\"\n    }, bottomGraphic);\n  }\n\n  var optionalSelectButton;\n\n  if (selectable) {\n    if (bottomGraphic) {\n      console.warn('EuiCard cannot support both `bottomGraphic` and `selectable`. It will ignore the bottomGraphic.');\n    }\n\n    optionalSelectButton = _react.default.createElement(_card_select.EuiCardSelect, _extends({\n      \"aria-describedby\": \"\".concat(ariaId, \"Title \").concat(ariaId, \"Description\")\n    }, selectable));\n  }\n\n  return _react.default.createElement(OuterElement, _extends({\n    onClick: onClick,\n    className: classes,\n    href: href,\n    target: target,\n    rel: secureRel\n  }, rest), optionalBetaBadge, optionalCardTop, _react.default.createElement(\"span\", {\n    className: \"euiCard__content\"\n  }, _react.default.createElement(_title.EuiTitle, {\n    id: \"\".concat(ariaId, \"Title\"),\n    className: \"euiCard__title\"\n  }, _react.default.createElement(TitleElement, null, title)), _react.default.createElement(_text.EuiText, {\n    id: \"\".concat(ariaId, \"Description\"),\n    size: \"s\",\n    className: \"euiCard__description\"\n  }, _react.default.createElement(\"p\", null, description))), layout === 'vertical' && _react.default.createElement(\"span\", {\n    className: \"euiCard__footer\"\n  }, footer), optionalSelectButton || optionalBottomGraphic);\n};\n\nexports.EuiCard = EuiCard;\nEuiCard.propTypes = {\n  className: _propTypes.default.string,\n  title: _propTypes.default.node.isRequired,\n\n  /**\n   * Determines the title's heading element. Will force to 'span' if\n   * the card is a button.\n   */\n  titleElement: _propTypes.default.oneOf(['h2', 'h3', 'h4', 'h5', 'h6', 'span']),\n  description: _propTypes.default.node.isRequired,\n\n  /**\n   * Requires a <EuiIcon> node\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * Accepts a url in string form\n   */\n  image: _propTypes.default.string,\n\n  /**\n   * Accepts any combination of elements\n   */\n  footer: _propTypes.default.node,\n\n  /**\n   * Use only if you want to forego a button in the footer and make the whole card clickable\n   */\n  onClick: _propTypes.default.func,\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  rel: _propTypes.default.string,\n  textAlign: _propTypes.default.oneOf(ALIGNMENTS),\n\n  /**\n   * Change to \"horizontal\" if you need the icon to be left of the content\n   */\n  layout: cardLayout,\n\n  /**\n   * Add a badge to the card to label it as \"Beta\" or other non-GA state\n   */\n  betaBadgeLabel: _propTypes.default.string,\n\n  /**\n   * Add a description to the beta badge (will appear in a tooltip)\n   */\n  betaBadgeTooltipContent: _propTypes.default.node,\n\n  /**\n   * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n   */\n  betaBadgeTitle: _propTypes.default.string,\n\n  /**\n   * Adds a button to the bottom of the card to allow for in-place selection.\n   */\n  selectable: _propTypes.default.shape(_card_select.EuiCardSelectProps),\n\n  /**\n   * Add a decorative bottom graphic to the card.\n   * This should be used sparingly, consult the Kibana Design team before use.\n   */\n  bottomGraphic: _propTypes.default.node\n};\nEuiCard.defaultProps = {\n  textAlign: 'center',\n  layout: 'vertical',\n  titleElement: 'span'\n};\nEuiCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiCard\",\n  \"props\": {\n    \"textAlign\": {\n      \"defaultValue\": {\n        \"value\": \"'center'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"layout\": {\n      \"defaultValue\": {\n        \"value\": \"'vertical'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"cardLayout\"\n      },\n      \"required\": false,\n      \"description\": \"Change to \\\"horizontal\\\" if you need the icon to be left of the content\"\n    },\n    \"titleElement\": {\n      \"defaultValue\": {\n        \"value\": \"'span'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'h2'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h3'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h4'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h5'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h6'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'span'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Determines the title's heading element. Will force to 'span' if\\nthe card is a button.\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"description\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Requires a <EuiIcon> node\"\n    },\n    \"image\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts a url in string form\"\n    },\n    \"footer\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Accepts any combination of elements\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Use only if you want to forego a button in the footer and make the whole card clickable\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"target\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the card to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    },\n    \"betaBadgeTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\"\n    },\n    \"selectable\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": \"import {\\n  EuiCardSelect,\\n  EuiCardSelectProps,\\n  euiCardSelectableColor,\\n} from './card_select';\",\n        \"computed\": true\n      },\n      \"required\": false,\n      \"description\": \"Adds a button to the bottom of the card to allow for in-place selection.\"\n    },\n    \"bottomGraphic\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a decorative bottom graphic to the card.\\nThis should be used sparingly, consult the Kibana Design team before use.\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/card/card.js"],"names":["textAlignToClassNameMap","left","center","right","ALIGNMENTS","Object","keys","layoutToClassNameMap","vertical","horizontal","LAYOUT_ALIGNMENTS","oneOfLayouts","PropTypes","oneOf","cardLayout","props","propName","componentName","rest","oneOfResult","image","footer","Error","EuiCard","className","description","title","titleElement","icon","onClick","href","rel","target","textAlign","isClickable","betaBadgeLabel","betaBadgeTooltipContent","betaBadgeTitle","layout","bottomGraphic","selectable","selectableColorClass","color","isSelected","undefined","classes","ariaId","secureRel","imageNode","iconNode","React","cloneElement","OuterElement","TitleElement","optionalCardTop","optionalBetaBadge","optionalBottomGraphic","optionalSelectButton","console","warn","propTypes","string","node","isRequired","func","shape","EuiCardSelectProps","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSecureRelForTarget } from '../../services';\n\nimport { EuiText } from '../text';\nimport { EuiTitle } from '../title';\nimport { EuiBetaBadge } from '../badge/beta_badge';\nimport {\n  EuiCardSelect,\n  EuiCardSelectProps,\n  euiCardSelectableColor,\n} from './card_select';\nimport makeId from '../form/form_row/make_id';\n\nconst textAlignToClassNameMap = {\n  left: 'euiCard--leftAligned',\n  center: 'euiCard--centerAligned',\n  right: 'euiCard--rightAligned',\n};\n\nexport const ALIGNMENTS = Object.keys(textAlignToClassNameMap);\n\nconst layoutToClassNameMap = {\n  vertical: '',\n  horizontal: 'euiCard--horizontal',\n};\n\nexport const LAYOUT_ALIGNMENTS = Object.keys(layoutToClassNameMap);\nconst oneOfLayouts = PropTypes.oneOf(LAYOUT_ALIGNMENTS);\n\nconst cardLayout = (props, propName, componentName, ...rest) => {\n  const oneOfResult = oneOfLayouts(props, propName, componentName, ...rest);\n  if (oneOfResult) return oneOfResult;\n\n  if (props[propName] === 'horizontal') {\n    if (props.image || props.footer) {\n      return new Error(\n        `${componentName}: '${propName} = horizontal' cannot be used in conjunction with 'image', 'footer', or 'textAlign'.`\n      );\n    }\n  }\n};\n\nexport const EuiCard = ({\n  className,\n  description,\n  title,\n  titleElement,\n  icon,\n  image,\n  footer,\n  onClick,\n  href,\n  rel,\n  target,\n  textAlign,\n  isClickable,\n  betaBadgeLabel,\n  betaBadgeTooltipContent,\n  betaBadgeTitle,\n  layout,\n  bottomGraphic,\n  selectable,\n  ...rest\n}) => {\n  const selectableColorClass = selectable\n    ? `euiCard--isSelectable--${euiCardSelectableColor(\n        selectable.color,\n        selectable.isSelected\n      )}`\n    : undefined;\n\n  const classes = classNames(\n    'euiCard',\n    textAlignToClassNameMap[textAlign],\n    layoutToClassNameMap[layout],\n    {\n      'euiCard--isClickable': onClick || href || isClickable,\n      'euiCard--hasBetaBadge': betaBadgeLabel,\n      'euiCard--hasIcon': icon,\n      'euiCard--hasBottomGraphic': bottomGraphic,\n      'euiCard--isSelectable': selectable,\n      'euiCard-isSelected': selectable && selectable.isSelected,\n    },\n    selectableColorClass,\n    className\n  );\n\n  const ariaId = makeId();\n\n  let secureRel;\n  if (href) {\n    secureRel = getSecureRelForTarget({ href, target, rel });\n  }\n\n  let imageNode;\n  if (image && layout === 'vertical') {\n    imageNode = <img className=\"euiCard__image\" src={image} alt=\"\" />;\n  }\n\n  let iconNode;\n  if (icon) {\n    iconNode = React.cloneElement(icon, {\n      className: classNames(icon.props.className, 'euiCard__icon'),\n    });\n  }\n\n  let OuterElement = 'div';\n  if (href) {\n    OuterElement = 'a';\n  } else if (onClick) {\n    OuterElement = 'button';\n  }\n\n  let TitleElement = titleElement;\n  if (OuterElement === 'button') {\n    TitleElement = 'span';\n  }\n\n  let optionalCardTop;\n  if (imageNode || iconNode) {\n    optionalCardTop = (\n      <span className=\"euiCard__top\">\n        {imageNode}\n        {iconNode}\n      </span>\n    );\n  }\n\n  let optionalBetaBadge;\n  if (betaBadgeLabel) {\n    optionalBetaBadge = (\n      <span className=\"euiCard__betaBadgeWrapper\">\n        <EuiBetaBadge\n          label={betaBadgeLabel}\n          title={betaBadgeTitle}\n          tooltipContent={betaBadgeTooltipContent}\n          className=\"euiCard__betaBadge\"\n        />\n      </span>\n    );\n  }\n\n  let optionalBottomGraphic;\n  if (bottomGraphic) {\n    optionalBottomGraphic = (\n      <span className=\"euiCard__graphic\">{bottomGraphic}</span>\n    );\n  }\n\n  let optionalSelectButton;\n  if (selectable) {\n    if (bottomGraphic) {\n      console.warn(\n        'EuiCard cannot support both `bottomGraphic` and `selectable`. It will ignore the bottomGraphic.'\n      );\n    }\n\n    optionalSelectButton = (\n      <EuiCardSelect\n        aria-describedby={`${ariaId}Title ${ariaId}Description`}\n        {...selectable}\n      />\n    );\n  }\n\n  return (\n    <OuterElement\n      onClick={onClick}\n      className={classes}\n      href={href}\n      target={target}\n      rel={secureRel}\n      {...rest}>\n      {optionalBetaBadge}\n\n      {optionalCardTop}\n\n      <span className=\"euiCard__content\">\n        <EuiTitle id={`${ariaId}Title`} className=\"euiCard__title\">\n          <TitleElement>{title}</TitleElement>\n        </EuiTitle>\n\n        <EuiText\n          id={`${ariaId}Description`}\n          size=\"s\"\n          className=\"euiCard__description\">\n          <p>{description}</p>\n        </EuiText>\n      </span>\n\n      {layout === 'vertical' && (\n        <span className=\"euiCard__footer\">{footer}</span>\n      )}\n\n      {optionalSelectButton || optionalBottomGraphic}\n    </OuterElement>\n  );\n};\n\nEuiCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  /**\n   * Determines the title's heading element. Will force to 'span' if\n   * the card is a button.\n   */\n  titleElement: PropTypes.oneOf(['h2', 'h3', 'h4', 'h5', 'h6', 'span']),\n  description: PropTypes.node.isRequired,\n\n  /**\n   * Requires a <EuiIcon> node\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Accepts a url in string form\n   */\n  image: PropTypes.string,\n\n  /**\n   * Accepts any combination of elements\n   */\n  footer: PropTypes.node,\n\n  /**\n   * Use only if you want to forego a button in the footer and make the whole card clickable\n   */\n  onClick: PropTypes.func,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  rel: PropTypes.string,\n  textAlign: PropTypes.oneOf(ALIGNMENTS),\n\n  /**\n   * Change to \"horizontal\" if you need the icon to be left of the content\n   */\n  layout: cardLayout,\n\n  /**\n   * Add a badge to the card to label it as \"Beta\" or other non-GA state\n   */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n   * Add a description to the beta badge (will appear in a tooltip)\n   */\n  betaBadgeTooltipContent: PropTypes.node,\n\n  /**\n   * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n   */\n  betaBadgeTitle: PropTypes.string,\n\n  /**\n   * Adds a button to the bottom of the card to allow for in-place selection.\n   */\n  selectable: PropTypes.shape(EuiCardSelectProps),\n\n  /**\n   * Add a decorative bottom graphic to the card.\n   * This should be used sparingly, consult the Kibana Design team before use.\n   */\n  bottomGraphic: PropTypes.node,\n};\n\nEuiCard.defaultProps = {\n  textAlign: 'center',\n  layout: 'vertical',\n  titleElement: 'span',\n};\n"]}]}