{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/services/format/format_date.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/services/format/format_date.ts","mtime":1565204170068},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDate = exports.dateFormatAliases = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _predicate = require(\"../predicate\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar calendar = function calendar(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var refTime = options.refTime;\n  return (0, _moment.default)(value).calendar(refTime, options);\n};\n\nvar dateFormatAliases = {\n  date: 'D MMM YYYY',\n  longDate: 'DD MMMM YYYY',\n  shortDate: 'D MMM YY',\n  dateTime: 'D MMM YYYY HH:mm',\n  longDateTime: 'DD MMMM YYYY HH:mm:ss',\n  shortDateTime: 'D MMM YY HH:mm',\n  dobShort: 'Do MMM YY',\n  dobLong: 'Do MMMM YYYY',\n  iso8601: 'YYYY-MM-DDTHH:mm:ss.SSSZ',\n  calendar: calendar,\n  calendarDateTime: function calendarDateTime(value, options) {\n    return calendar(value, _objectSpread({\n      sameDay: '[Today at] H:mmA',\n      nextDay: '[Tomorrow at] H:mmA',\n      nextWeek: 'dddd [at] H:mmA',\n      lastDay: '[Yesterday at] H:mmA',\n      lastWeek: '[Last] dddd [at] H:mmA',\n      sameElse: 'Do MMM YYYY [at] H:mmA'\n    }, options));\n  },\n  calendarDate: function calendarDate(value, options) {\n    return calendar(value, _objectSpread({\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: '[Last] dddd',\n      sameElse: 'Do MMM YYYY'\n    }, options));\n  }\n};\nexports.dateFormatAliases = dateFormatAliases;\n\nfunction isStringADateFormat(x) {\n  return dateFormatAliases.hasOwnProperty(x);\n}\n\nfunction instanceOfFormatDateConfig(x) {\n  return _typeof(x) === 'object' && (x.hasOwnProperty('format') || x.hasOwnProperty('nil') || x.hasOwnProperty('options'));\n}\n\nvar formatDate = function formatDate(value) {\n  var dateFormatKeyOrConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'dateTime';\n\n  if ((0, _predicate.isString)(dateFormatKeyOrConfig)) {\n    if ((0, _predicate.isNil)(value)) {\n      return '';\n    }\n\n    var dateFormatStrOrFunc = isStringADateFormat(dateFormatKeyOrConfig) ? dateFormatAliases[dateFormatKeyOrConfig] : dateFormatKeyOrConfig;\n\n    if ((0, _predicate.isFunction)(dateFormatStrOrFunc)) {\n      return dateFormatStrOrFunc(value, {});\n    }\n\n    if ((0, _predicate.isString)(dateFormatStrOrFunc)) {\n      return (0, _moment.default)(value).format(dateFormatStrOrFunc);\n    }\n  }\n\n  if (instanceOfFormatDateConfig(dateFormatKeyOrConfig)) {\n    var _dateFormatKeyOrConfi = dateFormatKeyOrConfig.format,\n        _format = _dateFormatKeyOrConfi === void 0 ? 'dateTime' : _dateFormatKeyOrConfi,\n        _dateFormatKeyOrConfi2 = dateFormatKeyOrConfig.nil,\n        _nil = _dateFormatKeyOrConfi2 === void 0 ? '' : _dateFormatKeyOrConfi2,\n        _options = dateFormatKeyOrConfig.options;\n\n    var dateFormat = dateFormatAliases[_format] || _format;\n\n    if ((0, _predicate.isNil)(value)) {\n      return _nil;\n    }\n\n    if ((0, _predicate.isFunction)(dateFormat)) {\n      return dateFormat(value, _options);\n    }\n\n    if ((0, _predicate.isString)(dateFormat)) {\n      return (0, _moment.default)(value).format(dateFormat);\n    }\n  }\n\n  throw new Error(\"Failed to format value using dateFormatKeyOrConfig: \".concat(dateFormatKeyOrConfig));\n};\n\nexports.formatDate = formatDate;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/services/format/format_date.ts"],"names":["calendar","value","options","refTime","dateFormatAliases","date","longDate","shortDate","dateTime","longDateTime","shortDateTime","dobShort","dobLong","iso8601","calendarDateTime","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendarDate","isStringADateFormat","x","hasOwnProperty","instanceOfFormatDateConfig","formatDate","dateFormatKeyOrConfig","dateFormatStrOrFunc","format","nil","dateFormat","Error"],"mappings":"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","sourcesContent":["import { isNil, isFunction, isString } from '../predicate';\nimport moment from 'moment';\n\ntype CalendarOptions = moment.CalendarSpec & {\n  refTime?: moment.MomentInput;\n};\n\nconst calendar = (value: moment.MomentInput, options: CalendarOptions = {}) => {\n  const refTime = options.refTime;\n  return moment(value).calendar(refTime, options);\n};\n\nexport const dateFormatAliases = {\n  date: 'D MMM YYYY',\n  longDate: 'DD MMMM YYYY',\n  shortDate: 'D MMM YY',\n  dateTime: 'D MMM YYYY HH:mm',\n  longDateTime: 'DD MMMM YYYY HH:mm:ss',\n  shortDateTime: 'D MMM YY HH:mm',\n  dobShort: 'Do MMM YY',\n  dobLong: 'Do MMMM YYYY',\n  iso8601: 'YYYY-MM-DDTHH:mm:ss.SSSZ',\n  calendar,\n  calendarDateTime: (\n    value: moment.MomentInput,\n    options: moment.CalendarSpec\n  ) => {\n    return calendar(value, {\n      sameDay: '[Today at] H:mmA',\n      nextDay: '[Tomorrow at] H:mmA',\n      nextWeek: 'dddd [at] H:mmA',\n      lastDay: '[Yesterday at] H:mmA',\n      lastWeek: '[Last] dddd [at] H:mmA',\n      sameElse: 'Do MMM YYYY [at] H:mmA',\n      ...options,\n    });\n  },\n  calendarDate: (value: moment.MomentInput, options: moment.CalendarSpec) => {\n    return calendar(value, {\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: '[Last] dddd',\n      sameElse: 'Do MMM YYYY',\n      ...options,\n    });\n  },\n};\n\ntype DateFormat = keyof typeof dateFormatAliases;\n\ninterface FormatDateConfig {\n  format: DateFormat;\n  nil: string;\n  options: any;\n}\n\nfunction isStringADateFormat(x: string): x is DateFormat {\n  return dateFormatAliases.hasOwnProperty(x);\n}\n\nfunction instanceOfFormatDateConfig(x: any): x is Partial<FormatDateConfig> {\n  return (\n    typeof x === 'object' &&\n    (x.hasOwnProperty('format') ||\n      x.hasOwnProperty('nil') ||\n      x.hasOwnProperty('options'))\n  );\n}\n\nexport const formatDate: (\n  value?: moment.MomentInput,\n  dateFormatKeyOrConfig?: DateFormat | string | Partial<FormatDateConfig>\n) => string = (value, dateFormatKeyOrConfig = 'dateTime') => {\n  if (isString(dateFormatKeyOrConfig)) {\n    if (isNil(value)) {\n      return '';\n    }\n\n    const dateFormatStrOrFunc = isStringADateFormat(dateFormatKeyOrConfig)\n      ? dateFormatAliases[dateFormatKeyOrConfig]\n      : dateFormatKeyOrConfig;\n\n    if (isFunction(dateFormatStrOrFunc)) {\n      return dateFormatStrOrFunc(value, {});\n    }\n\n    if (isString(dateFormatStrOrFunc)) {\n      return moment(value).format(dateFormatStrOrFunc);\n    }\n  }\n\n  if (instanceOfFormatDateConfig(dateFormatKeyOrConfig)) {\n    const { format = 'dateTime', nil = '', options } = dateFormatKeyOrConfig;\n\n    const dateFormat = dateFormatAliases[format] || format;\n\n    if (isNil(value)) {\n      return nil;\n    }\n\n    if (isFunction(dateFormat)) {\n      return dateFormat(value, options);\n    }\n\n    if (isString(dateFormat)) {\n      return moment(value).format(dateFormat);\n    }\n  }\n\n  throw new Error(\n    `Failed to format value using dateFormatKeyOrConfig: ${dateFormatKeyOrConfig}`\n  );\n};\n"]}]}