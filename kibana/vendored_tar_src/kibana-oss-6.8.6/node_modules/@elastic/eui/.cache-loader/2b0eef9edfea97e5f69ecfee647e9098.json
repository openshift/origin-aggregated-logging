{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/pagination/pagination.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/pagination/pagination.js","mtime":1567534071281},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiPagination = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _pagination_button = require(\"./pagination_button\");\n\nvar _button = require(\"../button\");\n\nvar _i18n = require(\"../i18n\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar MAX_VISIBLE_PAGES = 5;\nvar NUMBER_SURROUNDING_PAGES = Math.floor(MAX_VISIBLE_PAGES * 0.5);\n\nvar EuiPagination = function EuiPagination(_ref) {\n  var className = _ref.className,\n      pageCount = _ref.pageCount,\n      activePage = _ref.activePage,\n      onPageClick = _ref.onPageClick,\n      compressed = _ref.compressed,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"pageCount\", \"activePage\", \"onPageClick\", \"compressed\"]);\n\n  var classes = (0, _classnames.default)('euiPagination', className);\n  var pages = [];\n  var firstPageInRange = Math.max(0, Math.min(activePage - NUMBER_SURROUNDING_PAGES, pageCount - MAX_VISIBLE_PAGES));\n  var lastPageInRange = Math.min(pageCount, firstPageInRange + MAX_VISIBLE_PAGES);\n\n  var _loop = function _loop(i, index) {\n    pages.push(_react.default.createElement(_i18n.EuiI18n, {\n      key: index,\n      token: \"euiPagination.pageOfTotal\",\n      default: \"Page {page} of {total}\",\n      values: {\n        page: i + 1,\n        total: lastPageInRange\n      }\n    }, function (pageOfTotal) {\n      return _react.default.createElement(_pagination_button.EuiPaginationButton, {\n        isActive: i === activePage,\n        onClick: onPageClick.bind(null, i),\n        hideOnMobile: true,\n        \"aria-label\": pageOfTotal,\n        \"data-test-subj\": \"pagination-button-\".concat(i)\n      }, i + 1);\n    }));\n  };\n\n  for (var i = firstPageInRange, index = 0; i < lastPageInRange; i++, index++) {\n    _loop(i, index);\n  }\n\n  var previousButton = _react.default.createElement(_i18n.EuiI18n, {\n    token: \"euiPagination.previousPage\",\n    default: \"Previous page\"\n  }, function (previousPage) {\n    return _react.default.createElement(_button.EuiButtonIcon, {\n      onClick: onPageClick.bind(null, activePage - 1),\n      iconType: \"arrowLeft\",\n      disabled: activePage === 0,\n      color: \"text\",\n      \"aria-label\": previousPage,\n      \"data-test-subj\": \"pagination-button-previous\"\n    });\n  });\n\n  var firstPageButtons = [];\n\n  if (firstPageInRange > 0) {\n    firstPageButtons.push(_react.default.createElement(_i18n.EuiI18n, {\n      key: \"0\",\n      token: \"euiPagination.pageOfTotal\",\n      default: \"Page {page} of {total}\",\n      values: {\n        page: 1,\n        total: lastPageInRange\n      }\n    }, function (pageOfTotal) {\n      return _react.default.createElement(_pagination_button.EuiPaginationButton, {\n        onClick: onPageClick.bind(null, 0),\n        hideOnMobile: true,\n        \"aria-label\": pageOfTotal\n      }, \"1\");\n    }));\n\n    if (firstPageInRange > 1) {\n      firstPageButtons.push(_react.default.createElement(_pagination_button.EuiPaginationButton, {\n        key: \"beginningEllipsis\",\n        isPlaceholder: true,\n        hideOnMobile: true,\n        \"aria-hidden\": true\n      }, _react.default.createElement(\"span\", null, \"\\u2026\")));\n    }\n  }\n\n  var lastPageButtons = [];\n\n  if (lastPageInRange < pageCount) {\n    if (lastPageInRange < pageCount - 1) {\n      lastPageButtons.push(_react.default.createElement(_pagination_button.EuiPaginationButton, {\n        key: \"endingEllipsis\",\n        isPlaceholder: true,\n        hideOnMobile: true,\n        \"aria-hidden\": true\n      }, _react.default.createElement(\"span\", null, \"\\u2026\")));\n    }\n\n    lastPageButtons.push(_react.default.createElement(_i18n.EuiI18n, {\n      key: pageCount - 1,\n      token: \"euiPagination.jumpToLastPage\",\n      default: \"Jump to the last page, number {pageCount}\",\n      values: {\n        pageCount: pageCount\n      }\n    }, function (jumpToLastPage) {\n      return _react.default.createElement(_pagination_button.EuiPaginationButton, {\n        onClick: onPageClick.bind(null, pageCount - 1),\n        hideOnMobile: true,\n        \"aria-label\": jumpToLastPage\n      }, pageCount);\n    }));\n  }\n\n  var nextButton = _react.default.createElement(_i18n.EuiI18n, {\n    token: \"euiPagination.nextPage\",\n    default: \"Next page\"\n  }, function (nextPage) {\n    return _react.default.createElement(_button.EuiButtonIcon, {\n      onClick: onPageClick.bind(null, activePage + 1),\n      iconType: \"arrowRight\",\n      \"aria-label\": nextPage,\n      disabled: activePage === pageCount - 1,\n      color: \"text\",\n      \"data-test-subj\": \"pagination-button-next\"\n    });\n  });\n\n  if (pages.length > 1) {\n    var selectablePages = pages;\n\n    if (compressed) {\n      return _react.default.createElement(\"div\", _extends({\n        className: classes\n      }, rest), previousButton, nextButton);\n    } else {\n      return _react.default.createElement(\"div\", _extends({\n        className: classes,\n        role: \"group\"\n      }, rest), previousButton, firstPageButtons, selectablePages, lastPageButtons, nextButton);\n    }\n  } else {\n    // Don't render pagination if it isn't needed. Then span is here for a docs bug.\n    return _react.default.createElement(\"span\", null);\n  }\n};\n\nexports.EuiPagination = EuiPagination;\nEuiPagination.propTypes = {\n  className: _propTypes.default.string,\n\n  /**\n   * The total number of pages.\n   */\n  pageCount: _propTypes.default.number,\n\n  /**\n   * The current page using a zero based index.\n   * So if you set the activePage to 1, it will activate the second page.\n   */\n  activePage: _propTypes.default.number,\n  onPageClick: _propTypes.default.func,\n\n  /**\n   * If true, will only show next/prev arrows instead of page numbers.\n   */\n  compressed: _propTypes.default.bool\n};\nEuiPagination.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiPagination\",\n  \"props\": {\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"pageCount\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"The total number of pages.\"\n    },\n    \"activePage\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"The current page using a zero based index.\\nSo if you set the activePage to 1, it will activate the second page.\"\n    },\n    \"onPageClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"If true, will only show next/prev arrows instead of page numbers.\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/pagination/pagination.js"],"names":["MAX_VISIBLE_PAGES","NUMBER_SURROUNDING_PAGES","Math","floor","EuiPagination","className","pageCount","activePage","onPageClick","compressed","rest","classes","pages","firstPageInRange","max","min","lastPageInRange","i","index","push","page","total","pageOfTotal","bind","previousButton","previousPage","firstPageButtons","lastPageButtons","jumpToLastPage","nextButton","nextPage","length","selectablePages","propTypes","PropTypes","string","number","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiPaginationButton } from './pagination_button';\nimport { EuiButtonIcon } from '../button';\nimport { EuiI18n } from '../i18n';\n\nconst MAX_VISIBLE_PAGES = 5;\nconst NUMBER_SURROUNDING_PAGES = Math.floor(MAX_VISIBLE_PAGES * 0.5);\n\nexport const EuiPagination = ({\n  className,\n  pageCount,\n  activePage,\n  onPageClick,\n  compressed,\n  ...rest\n}) => {\n  const classes = classNames('euiPagination', className);\n\n  const pages = [];\n  const firstPageInRange = Math.max(\n    0,\n    Math.min(\n      activePage - NUMBER_SURROUNDING_PAGES,\n      pageCount - MAX_VISIBLE_PAGES\n    )\n  );\n  const lastPageInRange = Math.min(\n    pageCount,\n    firstPageInRange + MAX_VISIBLE_PAGES\n  );\n\n  for (let i = firstPageInRange, index = 0; i < lastPageInRange; i++, index++) {\n    pages.push(\n      <EuiI18n\n        key={index}\n        token=\"euiPagination.pageOfTotal\"\n        default=\"Page {page} of {total}\"\n        values={{ page: i + 1, total: lastPageInRange }}>\n        {pageOfTotal => (\n          <EuiPaginationButton\n            isActive={i === activePage}\n            onClick={onPageClick.bind(null, i)}\n            hideOnMobile\n            aria-label={pageOfTotal}\n            data-test-subj={`pagination-button-${i}`}>\n            {i + 1}\n          </EuiPaginationButton>\n        )}\n      </EuiI18n>\n    );\n  }\n\n  const previousButton = (\n    <EuiI18n token=\"euiPagination.previousPage\" default=\"Previous page\">\n      {previousPage => (\n        <EuiButtonIcon\n          onClick={onPageClick.bind(null, activePage - 1)}\n          iconType=\"arrowLeft\"\n          disabled={activePage === 0}\n          color=\"text\"\n          aria-label={previousPage}\n          data-test-subj=\"pagination-button-previous\"\n        />\n      )}\n    </EuiI18n>\n  );\n\n  const firstPageButtons = [];\n\n  if (firstPageInRange > 0) {\n    firstPageButtons.push(\n      <EuiI18n\n        key=\"0\"\n        token=\"euiPagination.pageOfTotal\"\n        default=\"Page {page} of {total}\"\n        values={{ page: 1, total: lastPageInRange }}>\n        {pageOfTotal => (\n          <EuiPaginationButton\n            onClick={onPageClick.bind(null, 0)}\n            hideOnMobile\n            aria-label={pageOfTotal}>\n            1\n          </EuiPaginationButton>\n        )}\n      </EuiI18n>\n    );\n\n    if (firstPageInRange > 1) {\n      firstPageButtons.push(\n        <EuiPaginationButton\n          key=\"beginningEllipsis\"\n          isPlaceholder\n          hideOnMobile\n          aria-hidden>\n          <span>&hellip;</span>\n        </EuiPaginationButton>\n      );\n    }\n  }\n\n  const lastPageButtons = [];\n\n  if (lastPageInRange < pageCount) {\n    if (lastPageInRange < pageCount - 1) {\n      lastPageButtons.push(\n        <EuiPaginationButton\n          key=\"endingEllipsis\"\n          isPlaceholder\n          hideOnMobile\n          aria-hidden>\n          <span>&hellip;</span>\n        </EuiPaginationButton>\n      );\n    }\n\n    lastPageButtons.push(\n      <EuiI18n\n        key={pageCount - 1}\n        token=\"euiPagination.jumpToLastPage\"\n        default=\"Jump to the last page, number {pageCount}\"\n        values={{ pageCount }}>\n        {jumpToLastPage => (\n          <EuiPaginationButton\n            onClick={onPageClick.bind(null, pageCount - 1)}\n            hideOnMobile\n            aria-label={jumpToLastPage}>\n            {pageCount}\n          </EuiPaginationButton>\n        )}\n      </EuiI18n>\n    );\n  }\n\n  const nextButton = (\n    <EuiI18n token=\"euiPagination.nextPage\" default=\"Next page\">\n      {nextPage => (\n        <EuiButtonIcon\n          onClick={onPageClick.bind(null, activePage + 1)}\n          iconType=\"arrowRight\"\n          aria-label={nextPage}\n          disabled={activePage === pageCount - 1}\n          color=\"text\"\n          data-test-subj=\"pagination-button-next\"\n        />\n      )}\n    </EuiI18n>\n  );\n\n  if (pages.length > 1) {\n    const selectablePages = pages;\n    if (compressed) {\n      return (\n        <div className={classes} {...rest}>\n          {previousButton}\n          {nextButton}\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes} role=\"group\" {...rest}>\n          {previousButton}\n          {firstPageButtons}\n          {selectablePages}\n          {lastPageButtons}\n          {nextButton}\n        </div>\n      );\n    }\n  } else {\n    // Don't render pagination if it isn't needed. Then span is here for a docs bug.\n    return <span />;\n  }\n};\n\nEuiPagination.propTypes = {\n  className: PropTypes.string,\n\n  /**\n   * The total number of pages.\n   */\n  pageCount: PropTypes.number,\n\n  /**\n   * The current page using a zero based index.\n   * So if you set the activePage to 1, it will activate the second page.\n   */\n  activePage: PropTypes.number,\n  onPageClick: PropTypes.func,\n\n  /**\n   * If true, will only show next/prev arrows instead of page numbers.\n   */\n  compressed: PropTypes.bool,\n};\n"]}]}