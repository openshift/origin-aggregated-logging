{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/observer/mutation_observer/mutation_observer.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/observer/mutation_observer/mutation_observer.ts","mtime":1565204169947},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiMutationObserver = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _observer = require(\"../observer\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiMutationObserver =\n/*#__PURE__*/\nfunction (_EuiObserver) {\n  _inherits(EuiMutationObserver, _EuiObserver);\n\n  function EuiMutationObserver() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiMutationObserver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiMutationObserver)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"name\", 'EuiMutationObserver');\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"beginObserve\", function () {\n      // IE11 and the MutationObserver polyfill used in Kibana (for Jest) implement\n      // an older spec in which specifying `attributeOldValue` or `attributeFilter`\n      // without specifying `attributes` results in a `SyntaxError`.\n      // The following logic patches the newer spec in which `attributes: true` can be\n      var observerOptions = _objectSpread({}, _this.props.observerOptions);\n\n      var needsAttributes = observerOptions.hasOwnProperty('attributeOldValue') || observerOptions.hasOwnProperty('attributeFilter');\n\n      if (needsAttributes && !observerOptions.hasOwnProperty('attributes')) {\n        observerOptions.attributes = true;\n      }\n\n      _this.observer = new MutationObserver(_this.props.onMutation);\n\n      _this.observer.observe(_this.childNode, observerOptions);\n    });\n\n    return _this;\n  }\n\n  return EuiMutationObserver;\n}(_observer.EuiObserver);\n\nexports.EuiMutationObserver = EuiMutationObserver;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/observer/mutation_observer/mutation_observer.ts"],"names":["EuiMutationObserver","observerOptions","props","needsAttributes","hasOwnProperty","attributes","observer","MutationObserver","onMutation","observe","childNode","EuiObserver"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;IAQaA,mB;;;;;;;;;;;;;;;;;;mFACJ,qB;;2FAEQ,YAAM;AACnB;AACA;AACA;AACA;AAEA,UAAMC,eAAqC,qBACtC,MAAKC,KAAL,CAAWD,eAD2B,CAA3C;;AAGA,UAAME,eAAe,GACnBF,eAAe,CAACG,cAAhB,CAA+B,mBAA/B,KACAH,eAAe,CAACG,cAAhB,CAA+B,iBAA/B,CAFF;;AAGA,UAAID,eAAe,IAAI,CAACF,eAAe,CAACG,cAAhB,CAA+B,YAA/B,CAAxB,EAAsE;AACpEH,QAAAA,eAAe,CAACI,UAAhB,GAA6B,IAA7B;AACD;;AAED,YAAKC,QAAL,GAAgB,IAAIC,gBAAJ,CAAqB,MAAKL,KAAL,CAAWM,UAAhC,CAAhB;;AACA,YAAKF,QAAL,CAAcG,OAAd,CAAsB,MAAKC,SAA3B,EAAuCT,eAAvC;AACD,K;;;;;;EArBsCU,qB","sourcesContent":["import { ReactNode } from 'react';\n\nimport { EuiObserver } from '../observer';\n\ninterface Props {\n  children: (ref: (e: HTMLElement | null) => void) => ReactNode;\n  onMutation: MutationCallback;\n  observerOptions?: MutationObserverInit;\n}\n\nexport class EuiMutationObserver extends EuiObserver<Props> {\n  name = 'EuiMutationObserver';\n\n  beginObserve = () => {\n    // IE11 and the MutationObserver polyfill used in Kibana (for Jest) implement\n    // an older spec in which specifying `attributeOldValue` or `attributeFilter`\n    // without specifying `attributes` results in a `SyntaxError`.\n    // The following logic patches the newer spec in which `attributes: true` can be\n    // implied when appropriate (`attributeOldValue` or `attributeFilter` is specified).\n    const observerOptions: MutationObserverInit = {\n      ...this.props.observerOptions,\n    };\n    const needsAttributes =\n      observerOptions.hasOwnProperty('attributeOldValue') ||\n      observerOptions.hasOwnProperty('attributeFilter');\n    if (needsAttributes && !observerOptions.hasOwnProperty('attributes')) {\n      observerOptions.attributes = true;\n    }\n\n    this.observer = new MutationObserver(this.props.onMutation);\n    this.observer.observe(this.childNode!, observerOptions);\n  };\n}\n"]}]}