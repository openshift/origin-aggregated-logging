{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/utils/prop_types/with_required_prop.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/utils/prop_types/with_required_prop.ts","mtime":1565204170087},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withRequiredProp = void 0;\n\n/**\n * PropType validation that, if the property is present,\n * validates against a proptype and verifies that another property exists\n *\n * example:\n * ExampleComponent.propTypes = {\n *   items: PropTypes.array,\n *   itemId: withRequiredProp(PropTypes.string, 'items', 'itemId is required to extract the ID from an item')\n * }\n *\n * this validator warns if ExampleComponent is passed an `items` prop but not `itemId`\n */\nvar withRequiredProp = function withRequiredProp(proptype, requiredPropName, messageDescription) {\n  var validator = function validator() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var props = args[0],\n        propName = args[1]; // run the proptype for this property\n\n    var result = proptype.apply(void 0, args); // if the property type checking passed then check for the required prop\n\n    if (result == null) {\n      // if this property was passed, check that the required property also exists\n      if (props[propName] != null && props[requiredPropName] == null) {\n        result = new Error(\"Property \\\"\".concat(propName, \"\\\" was passed without corresponding property \\\"\").concat(requiredPropName, \"\\\"\").concat(messageDescription ? \"; \".concat(messageDescription) : ''));\n      }\n    }\n\n    return result;\n  };\n\n  return validator;\n};\n\nexports.withRequiredProp = withRequiredProp;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/utils/prop_types/with_required_prop.ts"],"names":["withRequiredProp","proptype","requiredPropName","messageDescription","validator","args","props","propName","result","Error"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAYO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,QAD8B,EAE9BC,gBAF8B,EAG9BC,kBAH8B,EAI3B;AACH,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAoB;AAAA,sCAAhBC,IAAgB;AAAhBA,MAAAA,IAAgB;AAAA;;AAAA,QAC7BC,KAD6B,GACVD,IADU;AAAA,QACtBE,QADsB,GACVF,IADU,KAGpC;;AACA,QAAIG,MAAM,GAAGP,QAAQ,MAAR,SAAYI,IAAZ,CAAb,CAJoC,CAMpC;;AACA,QAAIG,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,UAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAnB,IAA2BD,KAAK,CAACJ,gBAAD,CAAL,IAA2B,IAA1D,EAAgE;AAC9DM,QAAAA,MAAM,GAAG,IAAIC,KAAJ,sBACMF,QADN,4DAC8DL,gBAD9D,eAELC,kBAAkB,eAAQA,kBAAR,IAA+B,EAF5C,EAAT;AAKD;AACF;;AAED,WAAOK,MAAP;AACD,GAnBD;;AAqBA,SAAOJ,SAAP;AACD,CA3BM","sourcesContent":["/**\n * PropType validation that, if the property is present,\n * validates against a proptype and verifies that another property exists\n *\n * example:\n * ExampleComponent.propTypes = {\n *   items: PropTypes.array,\n *   itemId: withRequiredProp(PropTypes.string, 'items', 'itemId is required to extract the ID from an item')\n * }\n *\n * this validator warns if ExampleComponent is passed an `items` prop but not `itemId`\n */\nexport const withRequiredProp = (\n  proptype: any,\n  requiredPropName: string,\n  messageDescription?: string\n) => {\n  const validator = (...args: any[]) => {\n    const [props, propName] = args;\n\n    // run the proptype for this property\n    let result = proptype(...args);\n\n    // if the property type checking passed then check for the required prop\n    if (result == null) {\n      // if this property was passed, check that the required property also exists\n      if (props[propName] != null && props[requiredPropName] == null) {\n        result = new Error(\n          `Property \"${propName}\" was passed without corresponding property \"${requiredPropName}\"${\n            messageDescription ? `; ${messageDescription}` : ''\n          }`\n        );\n      }\n    }\n\n    return result;\n  };\n\n  return validator;\n};\n"]}]}