{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/flex/flex_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/flex/flex_example.js","mtime":1565204169471},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlexExample = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _flex_group = _interopRequireDefault(require(\"./flex_group\"));\n\nvar _flex_group_wrap = _interopRequireDefault(require(\"./flex_group_wrap\"));\n\nvar _flex_items = _interopRequireDefault(require(\"./flex_items\"));\n\nvar _component_span = _interopRequireDefault(require(\"./component_span\"));\n\nvar _flex_gutter = _interopRequireDefault(require(\"./flex_gutter\"));\n\nvar _flex_grow_zero = _interopRequireDefault(require(\"./flex_grow_zero\"));\n\nvar _flex_grow_numeric = _interopRequireDefault(require(\"./flex_grow_numeric\"));\n\nvar _flex_justify = _interopRequireDefault(require(\"./flex_justify\"));\n\nvar _direction = _interopRequireDefault(require(\"./direction\"));\n\nvar _flex_grid = _interopRequireDefault(require(\"./flex_grid\"));\n\nvar _flex_grid_columns = _interopRequireDefault(require(\"./flex_grid_columns\"));\n\nvar _flex_grid_column_first = _interopRequireDefault(require(\"./flex_grid_column_first\"));\n\nvar _flex_nest = _interopRequireDefault(require(\"./flex_nest\"));\n\nvar _flex_item_panel = _interopRequireDefault(require(\"./flex_item_panel\"));\n\nvar _flex_responsive = _interopRequireDefault(require(\"./flex_responsive\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar flexGroupSource = require('!!raw-loader!./flex_group');\n\nvar flexGroupHtml = (0, _services.renderToHtml)(_flex_group.default);\n\nvar flexGroupWrapSource = require('!!raw-loader!./flex_group_wrap');\n\nvar flexGroupWrapHtml = (0, _services.renderToHtml)(_flex_group_wrap.default);\n\nvar flexItemsSource = require('!!raw-loader!./flex_items');\n\nvar flexItemsHtml = (0, _services.renderToHtml)(_flex_items.default);\n\nvar componentSpanSource = require('!!raw-loader!./component_span');\n\nvar componentSpanHtml = (0, _services.renderToHtml)(_component_span.default);\n\nvar flexGutterSource = require('!!raw-loader!./flex_gutter');\n\nvar flexGutterHtml = (0, _services.renderToHtml)(_flex_gutter.default);\n\nvar flexGrowZeroSource = require('!!raw-loader!./flex_grow_zero');\n\nvar flexGrowZeroHtml = (0, _services.renderToHtml)(_flex_grow_zero.default);\n\nvar flexGrowNumericSource = require('!!raw-loader!./flex_grow_numeric');\n\nvar flexGrowNumericHtml = (0, _services.renderToHtml)(_flex_grow_numeric.default);\n\nvar flexJustifySource = require('!!raw-loader!./flex_justify');\n\nvar flexJustifyHtml = (0, _services.renderToHtml)(_flex_justify.default);\n\nvar directionSource = require('!!raw-loader!./direction');\n\nvar directionHtml = (0, _services.renderToHtml)(_direction.default);\n\nvar flexGridSource = require('!!raw-loader!./flex_grid');\n\nvar flexGridHtml = (0, _services.renderToHtml)(_flex_grid.default);\n\nvar flexGridColumnsSource = require('!!raw-loader!./flex_grid_columns');\n\nvar flexGridColumnsHtml = (0, _services.renderToHtml)(_flex_grid_columns.default);\n\nvar flexGridColumnFirstSource = require('!!raw-loader!./flex_grid_column_first');\n\nvar flexGridColumnFirstHtml = (0, _services.renderToHtml)(_flex_grid_column_first.default);\n\nvar flexNestSource = require('!!raw-loader!./flex_nest');\n\nvar flexNestHtml = (0, _services.renderToHtml)(_flex_nest.default);\n\nvar flexItemPanelSource = require('!!raw-loader!./flex_item_panel');\n\nvar flexItemPanelHtml = (0, _services.renderToHtml)(_flex_item_panel.default);\n\nvar flexGroupResponsiveSource = require('!!raw-loader!./flex_responsive');\n\nvar flexGroupResponsiveHtml = (0, _services.renderToHtml)(_flex_responsive.default);\nvar flexSnippet = \"<EuiFlexGroup>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGroupWrap = \"<EuiFlexGroup wrap>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar componentSpanSnippet = \"<EuiFlexGroup component=\\\"span\\\">\\n  <EuiFlexItem component=\\\"span\\\"><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem component=\\\"span\\\"><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexItemPanelSnippet = \"<EuiFlexGroup>\\n  <EuiFlexItem>\\n    <EuiPanel><!-- Panel content --></EuiPanel>\\n  </EuiFlexItem>\\n\\n  <EuiFlexItem>\\n    <EuiPanel grow={false}><!-- Panel content --></EuiPanel>\\n  </EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGrowZeroSnippet = \"<EuiFlexGroup>\\n  <EuiFlexItem grow={false}><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGrowNumericSnippet = \"<EuiFlexGroup>\\n  <EuiFlexItem grow={1}><!-- FlexItem with flew-grow 1 --></EuiFlexItem>\\n  <EuiFlexItem grow={2}><!-- FlexItem with flew-grow 2 --></EuiFlexItem>\\n  ...\\n  <EuiFlexItem grow={10}><!-- FlexItem with flew-grow 10 --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexJustifySnippet = \"<EuiFlexGroup justifyContent=\\\"spaceBetween\\\">\\n  <EuiFlexItem><!-- FlexItem with space-between --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem with space-between --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar directionSnippet = \"<EuiFlexGroup direction=\\\"column\\\">\\n  <EuiFlexItem><!-- FlexItem in column FlexGroup --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem in column FlexGroup --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGridSnippet = \"<EuiFlexGrid>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGrid>\";\nvar flexGridColumnsSnippet = \"<EuiFlexGrid columns={3}>\\n  <EuiFlexItem>\\n    <!-- Item in 3-column FlexGrid-->\\n  </EuiFlexItem>\\n  <EuiFlexItem>\\n    <!-- Item in 3-column FlexGrid-->\\n  </EuiFlexItem>\\n  <EuiFlexItem>\\n    <!-- Item in 3-column FlexGrid-->\\n  </EuiFlexItem>\\n</EuiFlexGrid>\";\nvar flexGridColumnFirstSnippet = \"<EuiFlexGrid columns={2} direction=\\\"column\\\">\\n  <EuiFlexItem>\\n    <!-- Item in FlexGrid-->\\n  </EuiFlexItem>\\n  <EuiFlexItem>\\n    <!-- Item in FlexGrid-->\\n  </EuiFlexItem>\\n</EuiFlexGrid>\";\nvar flexNestSnippet = \"<EuiFlexGroup>\\n  <EuiFlexItem>\\n    <EuiFlexGroup>\\n      <EuiFlexItem><!-- FlexGroup inside FlexGroup --></EuiFlexItem>\\n      <EuiFlexItem><!-- FlexGroup inside FlexGroup --></EuiFlexItem>\\n    </EuiFlexGroup>\\n  </EuiFlexItem>\\n  <EuiFlexItem>\\n    <EuiFlexGrid>\\n      <EuiFlexItem><!-- FlexGrid inside FlexGroup --></EuiFlexItem>\\n      <EuiFlexItem><!-- FlexGrid inside FlexGroup --></EuiFlexItem>\\n    </EuiFlexGrid>\\n  </EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGutterSnippet = \"<EuiFlexGroup gutterSize=\\\"none\\\">\\n  <EuiFlexItem><!-- FlexItem without gutter --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem without gutter --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar flexGroupResponsiveSnippet = \"<EuiFlexGroup responsive={false}>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\\n</EuiFlexGroup>\";\nvar FlexExample = {\n  title: 'Flex',\n  intro: _react.default.createElement(_react.Fragment, null, _react.default.createElement(_components2.EuiCallOut, {\n    title: \"Coloring and padding exist for examples only\",\n    color: \"warning\"\n  }, _react.default.createElement(\"p\", null, \"Padding and background-color are added to all the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" components on this documentation page for illustrative purposes only. You will need to add padding through additional components or classes if you need it.\")), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"l\"\n  })),\n  sections: [{\n    title: 'FlexGroup is for a single row layout',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGroupSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGroupHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" is useful for setting up layouts for a\", ' ', _react.default.createElement(\"strong\", null, \"single row\"), \" of content. By default any\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" within \", _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" will stretch and grow to match their siblings.\")),\n    props: {\n      EuiFlexGroup: _components2.EuiFlexGroup,\n      EuiFlexItem: _components2.EuiFlexItem,\n      EuiFlexGrid: _components2.EuiFlexGrid\n    },\n    snippet: flexSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_group.default, null))\n  }, {\n    title: 'FlexGroup can wrap its items',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGroupWrapSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGroupWrapHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"You can set \", _react.default.createElement(_components2.EuiCode, null, \"wrap\"), \" on \", _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), ' ', \"if it contains \", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \"s with minimum widths, which you want to wrap as the container becomes narrower.\"), _react.default.createElement(_components2.EuiCallOut, {\n      color: \"warning\",\n      title: \"IE Warning\"\n    }, _react.default.createElement(\"p\", null, \"IE11 does not properly wrap flex items if the\", ' ', _react.default.createElement(\"strong\", null, \"group\"), \" is also within a flex item. To fix this rendering issue, you need to add a class of\", ' ', _react.default.createElement(_components2.EuiCode, null, \".euiIEFlexWrapFix\"), \" to the flex-item that\", ' ', _react.default.createElement(\"strong\", null, \"contains\"), \" the wrapping group.\"))),\n    snippet: flexGroupWrap,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_group_wrap.default, null))\n  }, {\n    title: 'FlexGroup accepts infinite items',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexItemsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexItemsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Same code as above. Notice that \", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" creates equal width items no matter the number of siblings.\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" never wraps.\"),\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_items.default, null))\n  }, {\n    title: 'You can specify spans instead of divs',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: componentSpanSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: componentSpanHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"component=\\u201Cspan\\u201D\"), \" can be set on\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" and/or \", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \".\"),\n    snippet: componentSpanSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_component_span.default, null))\n  }, {\n    title: 'FlexPanels grow to fill FlexItems',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexItemPanelSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexItemPanelHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"The \", _react.default.createElement(_reactRouter.Link, {\n      to: \"/layout/panel\"\n    }, \"Panel\"), \" component will naturally grow to fill the\", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" which contains it.\"),\n    snippet: flexItemPanelSnippet,\n    demo: _react.default.createElement(_flex_item_panel.default, null)\n  }, {\n    title: 'FlexItem can individually turn off stretching',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGrowZeroSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGrowZeroHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Sometimes you do not want a \", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" to grow. It can be turned off on each item individually.\"),\n    snippet: flexGrowZeroSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_grow_zero.default, null))\n  }, {\n    title: 'FlexItem can specify a proportional width',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGrowNumericSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGrowNumericHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can specify a number between 1 and 10 for a\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \" to try to take up a proportional part of the flex box it is in.\"),\n    snippet: flexGrowNumericSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_grow_numeric.default, null))\n  }, {\n    title: 'FlexGroup can justify and align',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexJustifySource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexJustifyHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \"s can also use\", ' ', _react.default.createElement(_components2.EuiCode, null, \"justifyContent\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"alignItems\"), ' ', \"props that accept normal flex-box parameters. Below are some common scenarios, where you need to separate two items, center justify a single one, or center an item vertically. Note the usage of\", ' ', _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \"s with \", _react.default.createElement(_components2.EuiCode, null, \"grow=false\"), \" so that they do not stretch.\"),\n    snippet: flexJustifySnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_justify.default, null))\n  }, {\n    title: 'FlexGroup can change direction',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: directionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: directionHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"You can change direction using the \", _react.default.createElement(_components2.EuiCode, null, \"direction\"), ' ', \"prop.\"), _react.default.createElement(_components2.EuiCallOut, {\n      color: \"warning\",\n      title: \"IE11 Warning\"\n    }, _react.default.createElement(\"p\", null, \"Depending on the nested structure of your flex groups, it is possible that flex-items inside a column directed flex group will not show. To counter this, add the \", _react.default.createElement(\"code\", null, \"grow\"), \" prop and set to either \", _react.default.createElement(\"code\", null, \"false\"), \" or a number. Setting\", ' ', _react.default.createElement(\"code\", null, \"grow\"), \" to \", _react.default.createElement(\"code\", null, \"true\"), \" will not suffice. You may also need to adjust the \", _react.default.createElement(\"code\", null, \"flex-basis\"), \" value.\"))),\n    snippet: directionSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_direction.default, null))\n  }, {\n    title: 'FlexGrids are for repeatable grids',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGridSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGridHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"FlexGrid\"), \" is a more rigid component that sets multiple, wrapping rows of same width items.\"),\n    props: {\n      EuiFlexGrid: _components2.EuiFlexGrid\n    },\n    snippet: flexGridSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGridWrap\"\n    }, _react.default.createElement(_flex_grid.default, null))\n  }, {\n    title: 'FlexGrids can have set column widths',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGridColumnsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGridColumnsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can set a \", _react.default.createElement(_components2.EuiCode, null, \"columns\"), \" prop to specify anywhere between 1-4 columns. Any more would likely break on laptop screens.\"),\n    snippet: flexGridColumnsSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGridWrap\"\n    }, _react.default.createElement(_flex_grid_columns.default, null))\n  }, {\n    title: 'FlexGrids can change direction',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGridColumnFirstSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGridColumnFirstHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Adding \", _react.default.createElement(_components2.EuiCode, null, \"direction=\\\"column\\\"\"), \" will re-orient the flex items so they display top-down \", _react.default.createElement(\"strong\", null, \"then\"), \" left to right.\"),\n    snippet: flexGridColumnFirstSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGridWrap\"\n    }, _react.default.createElement(_flex_grid_column_first.default, null))\n  }, {\n    title: 'FlexGrids and FlexGroups can nest',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexNestSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexNestHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"FlexGrid\"), \" can nest within themselves indefinitely. For example, here we turn off the growth on a\", _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \", then nest a grid inside of it.\"), _react.default.createElement(_components2.EuiCallOut, {\n      color: \"warning\",\n      title: \"IE11 Warning\"\n    }, _react.default.createElement(\"p\", null, \"Nesting can cause some nasty bugs in IE11. There is no generalized way to fix IE without knowing the exact intention of the layout. Please refer to\", ' ', _react.default.createElement(_components2.EuiLink, {\n      href: \"https://github.com/philipwalton/flexbugs\"\n    }, \"Flexbugs\"), ' ', \"if you see rendering issues in IE.\"))),\n    snippet: flexNestSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_nest.default, null))\n  }, {\n    title: 'Gutter sizing can be used on either FlexGroups or FlexGrids',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGutterSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGutterHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"The \", _react.default.createElement(_components2.EuiCode, null, \"gutterSize\"), \" prop can be applied to either a\", _react.default.createElement(_components2.EuiCode, null, \"FlexGroup\"), \" or a \", _react.default.createElement(_components2.EuiCode, null, \"FlexGrid\"), \" to adjust the spacing between \", _react.default.createElement(_components2.EuiCode, null, \"FlexItem\"), \"s.\"),\n    snippet: flexGutterSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_gutter.default, null))\n  }, {\n    title: 'FlexGroups can turn off responsive layouts',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: flexGroupResponsiveSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: flexGroupResponsiveHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"By default \", _react.default.createElement(_components2.EuiCode, null, \"EuiFlexGroup\"), \" is responsive. However, often you only want to use groups for alignment and margins, rather than layouts. Simply apply the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"responsive=\", '{false}'), \" prop to retain a single row layout for the group.\"),\n    snippet: flexGroupResponsiveSnippet,\n    demo: _react.default.createElement(\"div\", {\n      className: \"guideDemo__highlightGrid\"\n    }, _react.default.createElement(_flex_responsive.default, null))\n  }]\n};\nexports.FlexExample = FlexExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/flex/flex_example.js"],"names":["flexGroupSource","require","flexGroupHtml","FlexGroup","flexGroupWrapSource","flexGroupWrapHtml","FlexGroupWrap","flexItemsSource","flexItemsHtml","FlexItems","componentSpanSource","componentSpanHtml","ComponentSpan","flexGutterSource","flexGutterHtml","FlexGutter","flexGrowZeroSource","flexGrowZeroHtml","FlexGrowZero","flexGrowNumericSource","flexGrowNumericHtml","FlexGrowNumeric","flexJustifySource","flexJustifyHtml","FlexJustify","directionSource","directionHtml","Direction","flexGridSource","flexGridHtml","FlexGrid","flexGridColumnsSource","flexGridColumnsHtml","FlexGridColumns","flexGridColumnFirstSource","flexGridColumnFirstHtml","FlexGridColumnFirst","flexNestSource","flexNestHtml","FlexNest","flexItemPanelSource","flexItemPanelHtml","FlexItemPanel","flexGroupResponsiveSource","flexGroupResponsiveHtml","FlexGroupResponsive","flexSnippet","flexGroupWrap","componentSpanSnippet","flexItemPanelSnippet","flexGrowZeroSnippet","flexGrowNumericSnippet","flexJustifySnippet","directionSnippet","flexGridSnippet","flexGridColumnsSnippet","flexGridColumnFirstSnippet","flexNestSnippet","flexGutterSnippet","flexGroupResponsiveSnippet","FlexExample","title","intro","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiFlexGroup","EuiFlexItem","EuiFlexGrid","snippet","demo"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { Link } from 'react-router';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCallOut,\n  EuiSpacer,\n  EuiCode,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlexGrid,\n  EuiLink,\n} from '../../../../src/components';\n\nimport FlexGroup from './flex_group';\nconst flexGroupSource = require('!!raw-loader!./flex_group');\nconst flexGroupHtml = renderToHtml(FlexGroup);\n\nimport FlexGroupWrap from './flex_group_wrap';\nconst flexGroupWrapSource = require('!!raw-loader!./flex_group_wrap');\nconst flexGroupWrapHtml = renderToHtml(FlexGroupWrap);\n\nimport FlexItems from './flex_items';\nconst flexItemsSource = require('!!raw-loader!./flex_items');\nconst flexItemsHtml = renderToHtml(FlexItems);\n\nimport ComponentSpan from './component_span';\nconst componentSpanSource = require('!!raw-loader!./component_span');\nconst componentSpanHtml = renderToHtml(ComponentSpan);\n\nimport FlexGutter from './flex_gutter';\nconst flexGutterSource = require('!!raw-loader!./flex_gutter');\nconst flexGutterHtml = renderToHtml(FlexGutter);\n\nimport FlexGrowZero from './flex_grow_zero';\nconst flexGrowZeroSource = require('!!raw-loader!./flex_grow_zero');\nconst flexGrowZeroHtml = renderToHtml(FlexGrowZero);\n\nimport FlexGrowNumeric from './flex_grow_numeric';\nconst flexGrowNumericSource = require('!!raw-loader!./flex_grow_numeric');\nconst flexGrowNumericHtml = renderToHtml(FlexGrowNumeric);\n\nimport FlexJustify from './flex_justify';\nconst flexJustifySource = require('!!raw-loader!./flex_justify');\nconst flexJustifyHtml = renderToHtml(FlexJustify);\n\nimport Direction from './direction';\nconst directionSource = require('!!raw-loader!./direction');\nconst directionHtml = renderToHtml(Direction);\n\nimport FlexGrid from './flex_grid';\nconst flexGridSource = require('!!raw-loader!./flex_grid');\nconst flexGridHtml = renderToHtml(FlexGrid);\n\nimport FlexGridColumns from './flex_grid_columns';\nconst flexGridColumnsSource = require('!!raw-loader!./flex_grid_columns');\nconst flexGridColumnsHtml = renderToHtml(FlexGridColumns);\n\nimport FlexGridColumnFirst from './flex_grid_column_first';\nconst flexGridColumnFirstSource = require('!!raw-loader!./flex_grid_column_first');\nconst flexGridColumnFirstHtml = renderToHtml(FlexGridColumnFirst);\n\nimport FlexNest from './flex_nest';\nconst flexNestSource = require('!!raw-loader!./flex_nest');\nconst flexNestHtml = renderToHtml(FlexNest);\n\nimport FlexItemPanel from './flex_item_panel';\nconst flexItemPanelSource = require('!!raw-loader!./flex_item_panel');\nconst flexItemPanelHtml = renderToHtml(FlexItemPanel);\n\nimport FlexGroupResponsive from './flex_responsive';\nconst flexGroupResponsiveSource = require('!!raw-loader!./flex_responsive');\nconst flexGroupResponsiveHtml = renderToHtml(FlexGroupResponsive);\n\nconst flexSnippet = `<EuiFlexGroup>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGroupWrap = `<EuiFlexGroup wrap>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst componentSpanSnippet = `<EuiFlexGroup component=\"span\">\n  <EuiFlexItem component=\"span\"><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem component=\"span\"><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexItemPanelSnippet = `<EuiFlexGroup>\n  <EuiFlexItem>\n    <EuiPanel><!-- Panel content --></EuiPanel>\n  </EuiFlexItem>\n\n  <EuiFlexItem>\n    <EuiPanel grow={false}><!-- Panel content --></EuiPanel>\n  </EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGrowZeroSnippet = `<EuiFlexGroup>\n  <EuiFlexItem grow={false}><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGrowNumericSnippet = `<EuiFlexGroup>\n  <EuiFlexItem grow={1}><!-- FlexItem with flew-grow 1 --></EuiFlexItem>\n  <EuiFlexItem grow={2}><!-- FlexItem with flew-grow 2 --></EuiFlexItem>\n  ...\n  <EuiFlexItem grow={10}><!-- FlexItem with flew-grow 10 --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexJustifySnippet = `<EuiFlexGroup justifyContent=\"spaceBetween\">\n  <EuiFlexItem><!-- FlexItem with space-between --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem with space-between --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst directionSnippet = `<EuiFlexGroup direction=\"column\">\n  <EuiFlexItem><!-- FlexItem in column FlexGroup --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem in column FlexGroup --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGridSnippet = `<EuiFlexGrid>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGrid>`;\n\nconst flexGridColumnsSnippet = `<EuiFlexGrid columns={3}>\n  <EuiFlexItem>\n    <!-- Item in 3-column FlexGrid-->\n  </EuiFlexItem>\n  <EuiFlexItem>\n    <!-- Item in 3-column FlexGrid-->\n  </EuiFlexItem>\n  <EuiFlexItem>\n    <!-- Item in 3-column FlexGrid-->\n  </EuiFlexItem>\n</EuiFlexGrid>`;\n\nconst flexGridColumnFirstSnippet = `<EuiFlexGrid columns={2} direction=\"column\">\n  <EuiFlexItem>\n    <!-- Item in FlexGrid-->\n  </EuiFlexItem>\n  <EuiFlexItem>\n    <!-- Item in FlexGrid-->\n  </EuiFlexItem>\n</EuiFlexGrid>`;\n\nconst flexNestSnippet = `<EuiFlexGroup>\n  <EuiFlexItem>\n    <EuiFlexGroup>\n      <EuiFlexItem><!-- FlexGroup inside FlexGroup --></EuiFlexItem>\n      <EuiFlexItem><!-- FlexGroup inside FlexGroup --></EuiFlexItem>\n    </EuiFlexGroup>\n  </EuiFlexItem>\n  <EuiFlexItem>\n    <EuiFlexGrid>\n      <EuiFlexItem><!-- FlexGrid inside FlexGroup --></EuiFlexItem>\n      <EuiFlexItem><!-- FlexGrid inside FlexGroup --></EuiFlexItem>\n    </EuiFlexGrid>\n  </EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGutterSnippet = `<EuiFlexGroup gutterSize=\"none\">\n  <EuiFlexItem><!-- FlexItem without gutter --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem without gutter --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nconst flexGroupResponsiveSnippet = `<EuiFlexGroup responsive={false}>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n  <EuiFlexItem><!-- FlexItem content --></EuiFlexItem>\n</EuiFlexGroup>`;\n\nexport const FlexExample = {\n  title: 'Flex',\n  intro: (\n    <Fragment>\n      <EuiCallOut\n        title=\"Coloring and padding exist for examples only\"\n        color=\"warning\">\n        <p>\n          Padding and background-color are added to all the{' '}\n          <EuiCode>FlexItem</EuiCode> components on this documentation page for\n          illustrative purposes only. You will need to add padding through\n          additional components or classes if you need it.\n        </p>\n      </EuiCallOut>\n\n      <EuiSpacer size=\"l\" />\n    </Fragment>\n  ),\n  sections: [\n    {\n      title: 'FlexGroup is for a single row layout',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGroupSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGroupHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <EuiCode>FlexGroup</EuiCode> is useful for setting up layouts for a{' '}\n            <strong>single row</strong> of content. By default any{' '}\n            <EuiCode>FlexItem</EuiCode> within <EuiCode>FlexGroup</EuiCode> will\n            stretch and grow to match their siblings.\n          </p>\n        </div>\n      ),\n      props: { EuiFlexGroup, EuiFlexItem, EuiFlexGrid },\n      snippet: flexSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGroup />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGroup can wrap its items',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGroupWrapSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGroupWrapHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            You can set <EuiCode>wrap</EuiCode> on <EuiCode>FlexGroup</EuiCode>{' '}\n            if it contains <EuiCode>FlexItem</EuiCode>s with minimum widths,\n            which you want to wrap as the container becomes narrower.\n          </p>\n          <EuiCallOut color=\"warning\" title=\"IE Warning\">\n            <p>\n              IE11 does not properly wrap flex items if the{' '}\n              <strong>group</strong> is also within a flex item. To fix this\n              rendering issue, you need to add a class of{' '}\n              <EuiCode>.euiIEFlexWrapFix</EuiCode> to the flex-item that{' '}\n              <strong>contains</strong> the wrapping group.\n            </p>\n          </EuiCallOut>\n        </Fragment>\n      ),\n      snippet: flexGroupWrap,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGroupWrap />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGroup accepts infinite items',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexItemsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexItemsHtml,\n        },\n      ],\n      text: (\n        <p>\n          Same code as above. Notice that <EuiCode>FlexItem</EuiCode> creates\n          equal width items no matter the number of siblings.{' '}\n          <EuiCode>FlexGroup</EuiCode> never wraps.\n        </p>\n      ),\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexItems />\n        </div>\n      ),\n    },\n    {\n      title: 'You can specify spans instead of divs',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: componentSpanSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: componentSpanHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>component=&ldquo;span&rdquo;</EuiCode> can be set on{' '}\n          <EuiCode>FlexGroup</EuiCode> and/or <EuiCode>FlexItem</EuiCode>.\n        </p>\n      ),\n      snippet: componentSpanSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <ComponentSpan />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexPanels grow to fill FlexItems',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexItemPanelSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexItemPanelHtml,\n        },\n      ],\n      text: (\n        <p>\n          The <Link to=\"/layout/panel\">Panel</Link> component will naturally\n          grow to fill the\n          <EuiCode>FlexItem</EuiCode> which contains it.\n        </p>\n      ),\n      snippet: flexItemPanelSnippet,\n      demo: <FlexItemPanel />,\n    },\n    {\n      title: 'FlexItem can individually turn off stretching',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGrowZeroSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGrowZeroHtml,\n        },\n      ],\n      text: (\n        <p>\n          Sometimes you do not want a <EuiCode>FlexItem</EuiCode> to grow. It\n          can be turned off on each item individually.\n        </p>\n      ),\n      snippet: flexGrowZeroSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGrowZero />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexItem can specify a proportional width',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGrowNumericSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGrowNumericHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can specify a number between 1 and 10 for a{' '}\n          <EuiCode>FlexItem</EuiCode> to try to take up a proportional part of\n          the flex box it is in.\n        </p>\n      ),\n      snippet: flexGrowNumericSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGrowNumeric />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGroup can justify and align',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexJustifySource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexJustifyHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>FlexGroup</EuiCode>s can also use{' '}\n          <EuiCode>justifyContent</EuiCode> and <EuiCode>alignItems</EuiCode>{' '}\n          props that accept normal flex-box parameters. Below are some common\n          scenarios, where you need to separate two items, center justify a\n          single one, or center an item vertically. Note the usage of{' '}\n          <EuiCode>FlexItem</EuiCode>s with <EuiCode>grow=false</EuiCode> so\n          that they do not stretch.\n        </p>\n      ),\n      snippet: flexJustifySnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexJustify />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGroup can change direction',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: directionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: directionHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            You can change direction using the <EuiCode>direction</EuiCode>{' '}\n            prop.\n          </p>\n          <EuiCallOut color=\"warning\" title=\"IE11 Warning\">\n            <p>\n              Depending on the nested structure of your flex groups, it is\n              possible that flex-items inside a column directed flex group will\n              not show. To counter this, add the <code>grow</code> prop and set\n              to either <code>false</code> or a number. Setting{' '}\n              <code>grow</code> to <code>true</code> will not suffice. You may\n              also need to adjust the <code>flex-basis</code> value.\n            </p>\n          </EuiCallOut>\n        </div>\n      ),\n      snippet: directionSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <Direction />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGrids are for repeatable grids',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGridSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGridHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>FlexGrid</EuiCode> is a more rigid component that sets\n          multiple, wrapping rows of same width items.\n        </p>\n      ),\n      props: { EuiFlexGrid },\n      snippet: flexGridSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGridWrap\">\n          <FlexGrid />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGrids can have set column widths',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGridColumnsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGridColumnsHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can set a <EuiCode>columns</EuiCode> prop to specify anywhere\n          between 1-4 columns. Any more would likely break on laptop screens.\n        </p>\n      ),\n      snippet: flexGridColumnsSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGridWrap\">\n          <FlexGridColumns />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGrids can change direction',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGridColumnFirstSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGridColumnFirstHtml,\n        },\n      ],\n      text: (\n        <p>\n          Adding <EuiCode>direction=&quot;column&quot;</EuiCode> will re-orient\n          the flex items so they display top-down <strong>then</strong> left to\n          right.\n        </p>\n      ),\n      snippet: flexGridColumnFirstSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGridWrap\">\n          <FlexGridColumnFirst />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGrids and FlexGroups can nest',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexNestSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexNestHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            <EuiCode>FlexGroup</EuiCode> and <EuiCode>FlexGrid</EuiCode> can\n            nest within themselves indefinitely. For example, here we turn off\n            the growth on a<EuiCode>FlexGroup</EuiCode>, then nest a grid inside\n            of it.\n          </p>\n          <EuiCallOut color=\"warning\" title=\"IE11 Warning\">\n            <p>\n              Nesting can cause some nasty bugs in IE11. There is no generalized\n              way to fix IE without knowing the exact intention of the layout.\n              Please refer to{' '}\n              <EuiLink href=\"https://github.com/philipwalton/flexbugs\">\n                Flexbugs\n              </EuiLink>{' '}\n              if you see rendering issues in IE.\n            </p>\n          </EuiCallOut>\n        </Fragment>\n      ),\n      snippet: flexNestSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexNest />\n        </div>\n      ),\n    },\n    {\n      title: 'Gutter sizing can be used on either FlexGroups or FlexGrids',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGutterSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGutterHtml,\n        },\n      ],\n      text: (\n        <p>\n          The <EuiCode>gutterSize</EuiCode> prop can be applied to either a\n          <EuiCode>FlexGroup</EuiCode> or a <EuiCode>FlexGrid</EuiCode> to\n          adjust the spacing between <EuiCode>FlexItem</EuiCode>s.\n        </p>\n      ),\n      snippet: flexGutterSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGutter />\n        </div>\n      ),\n    },\n    {\n      title: 'FlexGroups can turn off responsive layouts',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: flexGroupResponsiveSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: flexGroupResponsiveHtml,\n        },\n      ],\n      text: (\n        <p>\n          By default <EuiCode>EuiFlexGroup</EuiCode> is responsive. However,\n          often you only want to use groups for alignment and margins, rather\n          than layouts. Simply apply the{' '}\n          <EuiCode>responsive={'{false}'}</EuiCode> prop to retain a single row\n          layout for the group.\n        </p>\n      ),\n      snippet: flexGroupResponsiveSnippet,\n      demo: (\n        <div className=\"guideDemo__highlightGrid\">\n          <FlexGroupResponsive />\n        </div>\n      ),\n    },\n  ],\n};\n"]}]}