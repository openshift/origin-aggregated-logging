{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/file_picker/file_picker.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/file_picker/file_picker.js","mtime":1565204169716},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiFilePicker = exports.DISPLAYS = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _validatable_control = require(\"../validatable_control\");\n\nvar _button = require(\"../../button\");\n\nvar _progress = require(\"../../progress\");\n\nvar _icon = require(\"../../icon\");\n\nvar _i18n = require(\"../../i18n\");\n\nvar _loading = require(\"../../loading\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar displayToClassNameMap = {\n  default: null,\n  large: 'euiFilePicker--large'\n};\nvar DISPLAYS = Object.keys(displayToClassNameMap);\nexports.DISPLAYS = DISPLAYS;\n\nvar EuiFilePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiFilePicker, _Component);\n\n  function EuiFilePicker(props) {\n    var _this;\n\n    _classCallCheck(this, EuiFilePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiFilePicker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (filesSelected) {\n      if (_this.fileInput.files && _this.fileInput.files.length > 1) {\n        _this.setState({\n          promptText: \"\".concat(_this.fileInput.files.length, \" \").concat(filesSelected)\n        });\n      } else if (_this.fileInput.files.length === 0) {\n        _this.setState({\n          promptText: null\n        });\n      } else {\n        _this.setState({\n          promptText: _this.fileInput.value.split('\\\\').pop()\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(_this.fileInput.files);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"removeFiles\", function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      _this.fileInput.value = null;\n\n      _this.handleChange();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showDrop\", function () {\n      if (!_this.props.disabled) {\n        _this.setState({\n          isHoveringDrop: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hideDrop\", function () {\n      _this.setState({\n        isHoveringDrop: false\n      });\n    });\n\n    _this.state = {\n      promptText: null,\n      isHoveringDrop: false\n    };\n    return _this;\n  }\n\n  _createClass(EuiFilePicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_i18n.EuiI18n, {\n        tokens: ['euiFilePicker.clearSelectedFiles', 'euiFilePicker.filesSelected'],\n        defaults: ['Clear selected files', 'files selected']\n      }, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            clearSelectedFiles = _ref2[0],\n            filesSelected = _ref2[1];\n\n        var _this2$props = _this2.props,\n            id = _this2$props.id,\n            name = _this2$props.name,\n            initialPromptText = _this2$props.initialPromptText,\n            className = _this2$props.className,\n            disabled = _this2$props.disabled,\n            compressed = _this2$props.compressed,\n            onChange = _this2$props.onChange,\n            isInvalid = _this2$props.isInvalid,\n            fullWidth = _this2$props.fullWidth,\n            isLoading = _this2$props.isLoading,\n            display = _this2$props.display,\n            rest = _objectWithoutProperties(_this2$props, [\"id\", \"name\", \"initialPromptText\", \"className\", \"disabled\", \"compressed\", \"onChange\", \"isInvalid\", \"fullWidth\", \"isLoading\", \"display\"]);\n\n        var isOverridingInitialPrompt = _this2.state.promptText != null;\n        /**\n         * BWC: Force display to be default in case compressed is passed,\n         *      but `display: default` is not. This can be removed once\n         *      we support the new compressed styles and make this breaking change.\n         */\n\n        var calculatedDisplay = compressed ? 'default' : display;\n        var normalFormControl = calculatedDisplay === 'default';\n        var classes = (0, _classnames.default)('euiFilePicker', displayToClassNameMap[calculatedDisplay], {\n          euiFilePicker__showDrop: _this2.state.isHoveringDrop,\n          'euiFilePicker--compressed': compressed,\n          'euiFilePicker--fullWidth': fullWidth,\n          'euiFilePicker-isInvalid': isInvalid,\n          'euiFilePicker-isLoading': isLoading,\n          'euiFilePicker-hasFiles': isOverridingInitialPrompt\n        }, className);\n        var clearButton;\n\n        if (isLoading && normalFormControl) {\n          // Override clear button with loading spinner if it is in loading state\n          clearButton = _react.default.createElement(_loading.EuiLoadingSpinner, {\n            className: \"euiFilePicker__loadingSpinner\"\n          });\n        } else if (isOverridingInitialPrompt) {\n          if (normalFormControl) {\n            clearButton = _react.default.createElement(\"button\", {\n              type: \"button\",\n              \"aria-label\": clearSelectedFiles,\n              className: \"euiFilePicker__clearButton\",\n              onClick: _this2.removeFiles\n            }, _react.default.createElement(_icon.EuiIcon, {\n              className: \"euiFilePicker__clearIcon\",\n              type: \"cross\"\n            }));\n          } else {\n            clearButton = _react.default.createElement(_button.EuiButtonEmpty, {\n              \"aria-label\": clearSelectedFiles,\n              className: \"euiFilePicker__clearButton\",\n              size: \"xs\",\n              onClick: _this2.removeFiles\n            }, \"Remove\");\n          }\n        } else {\n          clearButton = null;\n        }\n\n        var loader = !normalFormControl && isLoading && _react.default.createElement(_progress.EuiProgress, {\n          size: \"xs\",\n          color: \"accent\",\n          position: \"absolute\"\n        });\n\n        return _react.default.createElement(\"div\", {\n          className: classes\n        }, _react.default.createElement(\"div\", {\n          className: \"euiFilePicker__wrap\"\n        }, _react.default.createElement(_validatable_control.EuiValidatableControl, {\n          isInvalid: isInvalid\n        }, _react.default.createElement(\"input\", _extends({\n          type: \"file\",\n          id: id,\n          name: name,\n          className: \"euiFilePicker__input\",\n          onChange: function onChange() {\n            return _this2.handleChange(filesSelected);\n          },\n          ref: function ref(input) {\n            _this2.fileInput = input;\n          },\n          onDragOver: _this2.showDrop,\n          onDragLeave: _this2.hideDrop,\n          onDrop: _this2.hideDrop,\n          disabled: disabled\n        }, rest))), _react.default.createElement(\"div\", {\n          className: \"euiFilePicker__prompt\"\n        }, _react.default.createElement(_icon.EuiIcon, {\n          className: \"euiFilePicker__icon\",\n          type: \"importAction\",\n          size: normalFormControl ? 'm' : 'l',\n          \"aria-hidden\": \"true\"\n        }), _react.default.createElement(\"div\", {\n          className: \"euiFilePicker__promptText\"\n        }, _this2.state.promptText || initialPromptText), clearButton, loader)));\n      });\n    }\n  }]);\n\n  return EuiFilePicker;\n}(_react.Component);\n\nexports.EuiFilePicker = EuiFilePicker;\n\n_defineProperty(EuiFilePicker, \"propTypes\", {\n  id: _propTypes.default.string,\n  name: _propTypes.default.string,\n  className: _propTypes.default.string,\n\n  /**\n   * The content that appears in the dropzone if no file is attached\n   */\n  initialPromptText: _propTypes.default.node,\n\n  /**\n   * Use as a callback to access the HTML FileList API\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Reduces the size to a typical (compressed) input\n   */\n  compressed: _propTypes.default.bool,\n\n  /**\n   * Size or type of display;\n   * `default` for normal height, similar to other controls;\n   * `large` for taller size\n   */\n  display: _propTypes.default.oneOf(DISPLAYS),\n  fullWidth: _propTypes.default.bool,\n  isInvalid: _propTypes.default.bool,\n  isLoading: _propTypes.default.bool\n});\n\n_defineProperty(EuiFilePicker, \"defaultProps\", {\n  initialPromptText: 'Select or drag and drop a file',\n  compressed: false,\n  display: 'large'\n});\n\nEuiFilePicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"filesSelected\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"removeFiles\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"showDrop\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"hideDrop\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiFilePicker\",\n  \"props\": {\n    \"initialPromptText\": {\n      \"defaultValue\": {\n        \"value\": \"'Select or drag and drop a file'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"The content that appears in the dropzone if no file is attached\"\n    },\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Reduces the size to a typical (compressed) input\"\n    },\n    \"display\": {\n      \"defaultValue\": {\n        \"value\": \"'large'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"default\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"large\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Size or type of display;\\n`default` for normal height, similar to other controls;\\n`large` for taller size\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Use as a callback to access the HTML FileList API\"\n    },\n    \"fullWidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/file_picker/file_picker.js"],"names":["displayToClassNameMap","default","large","DISPLAYS","Object","keys","EuiFilePicker","props","filesSelected","fileInput","files","length","setState","promptText","value","split","pop","onChange","e","stopPropagation","preventDefault","handleChange","disabled","isHoveringDrop","state","clearSelectedFiles","id","name","initialPromptText","className","compressed","isInvalid","fullWidth","isLoading","display","rest","isOverridingInitialPrompt","calculatedDisplay","normalFormControl","classes","euiFilePicker__showDrop","clearButton","removeFiles","loader","input","showDrop","hideDrop","Component","PropTypes","string","node","func","bool","oneOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiValidatableControl } from '../validatable_control';\nimport { EuiButtonEmpty } from '../../button';\nimport { EuiProgress } from '../../progress';\nimport { EuiIcon } from '../../icon';\nimport { EuiI18n } from '../../i18n';\nimport { EuiLoadingSpinner } from '../../loading';\n\nconst displayToClassNameMap = {\n  default: null,\n  large: 'euiFilePicker--large',\n};\n\nexport const DISPLAYS = Object.keys(displayToClassNameMap);\n\nexport class EuiFilePicker extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    /**\n     * The content that appears in the dropzone if no file is attached\n     */\n    initialPromptText: PropTypes.node,\n    /**\n     * Use as a callback to access the HTML FileList API\n     */\n    onChange: PropTypes.func,\n    /**\n     * Reduces the size to a typical (compressed) input\n     */\n    compressed: PropTypes.bool,\n    /**\n     * Size or type of display;\n     * `default` for normal height, similar to other controls;\n     * `large` for taller size\n     */\n    display: PropTypes.oneOf(DISPLAYS),\n    fullWidth: PropTypes.bool,\n    isInvalid: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    initialPromptText: 'Select or drag and drop a file',\n    compressed: false,\n    display: 'large',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      promptText: null,\n      isHoveringDrop: false,\n    };\n  }\n\n  handleChange = filesSelected => {\n    if (this.fileInput.files && this.fileInput.files.length > 1) {\n      this.setState({\n        promptText: `${this.fileInput.files.length} ${filesSelected}`,\n      });\n    } else if (this.fileInput.files.length === 0) {\n      this.setState({ promptText: null });\n    } else {\n      this.setState({ promptText: this.fileInput.value.split('\\\\').pop() });\n    }\n\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(this.fileInput.files);\n    }\n  };\n\n  removeFiles = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.fileInput.value = null;\n    this.handleChange();\n  };\n\n  showDrop = () => {\n    if (!this.props.disabled) {\n      this.setState({ isHoveringDrop: true });\n    }\n  };\n\n  hideDrop = () => {\n    this.setState({ isHoveringDrop: false });\n  };\n\n  render() {\n    return (\n      <EuiI18n\n        tokens={[\n          'euiFilePicker.clearSelectedFiles',\n          'euiFilePicker.filesSelected',\n        ]}\n        defaults={['Clear selected files', 'files selected']}>\n        {([clearSelectedFiles, filesSelected]) => {\n          const {\n            id,\n            name,\n            initialPromptText,\n            className,\n            disabled,\n            compressed,\n            onChange,\n            isInvalid,\n            fullWidth,\n            isLoading,\n            display,\n            ...rest\n          } = this.props;\n\n          const isOverridingInitialPrompt = this.state.promptText != null;\n\n          /**\n           * BWC: Force display to be default in case compressed is passed,\n           *      but `display: default` is not. This can be removed once\n           *      we support the new compressed styles and make this breaking change.\n           */\n          const calculatedDisplay = compressed ? 'default' : display;\n          const normalFormControl = calculatedDisplay === 'default';\n\n          const classes = classNames(\n            'euiFilePicker',\n            displayToClassNameMap[calculatedDisplay],\n            {\n              euiFilePicker__showDrop: this.state.isHoveringDrop,\n              'euiFilePicker--compressed': compressed,\n              'euiFilePicker--fullWidth': fullWidth,\n              'euiFilePicker-isInvalid': isInvalid,\n              'euiFilePicker-isLoading': isLoading,\n              'euiFilePicker-hasFiles': isOverridingInitialPrompt,\n            },\n            className\n          );\n\n          let clearButton;\n          if (isLoading && normalFormControl) {\n            // Override clear button with loading spinner if it is in loading state\n            clearButton = (\n              <EuiLoadingSpinner className=\"euiFilePicker__loadingSpinner\" />\n            );\n          } else if (isOverridingInitialPrompt) {\n            if (normalFormControl) {\n              clearButton = (\n                <button\n                  type=\"button\"\n                  aria-label={clearSelectedFiles}\n                  className=\"euiFilePicker__clearButton\"\n                  onClick={this.removeFiles}>\n                  <EuiIcon className=\"euiFilePicker__clearIcon\" type=\"cross\" />\n                </button>\n              );\n            } else {\n              clearButton = (\n                <EuiButtonEmpty\n                  aria-label={clearSelectedFiles}\n                  className=\"euiFilePicker__clearButton\"\n                  size=\"xs\"\n                  onClick={this.removeFiles}>\n                  Remove\n                </EuiButtonEmpty>\n              );\n            }\n          } else {\n            clearButton = null;\n          }\n\n          const loader = !normalFormControl && isLoading && (\n            <EuiProgress size=\"xs\" color=\"accent\" position=\"absolute\" />\n          );\n\n          return (\n            <div className={classes}>\n              <div className=\"euiFilePicker__wrap\">\n                <EuiValidatableControl isInvalid={isInvalid}>\n                  <input\n                    type=\"file\"\n                    id={id}\n                    name={name}\n                    className=\"euiFilePicker__input\"\n                    onChange={() => this.handleChange(filesSelected)}\n                    ref={input => {\n                      this.fileInput = input;\n                    }}\n                    onDragOver={this.showDrop}\n                    onDragLeave={this.hideDrop}\n                    onDrop={this.hideDrop}\n                    disabled={disabled}\n                    {...rest}\n                  />\n                </EuiValidatableControl>\n                <div className=\"euiFilePicker__prompt\">\n                  <EuiIcon\n                    className=\"euiFilePicker__icon\"\n                    type=\"importAction\"\n                    size={normalFormControl ? 'm' : 'l'}\n                    aria-hidden=\"true\"\n                  />\n                  <div className=\"euiFilePicker__promptText\">\n                    {this.state.promptText || initialPromptText}\n                  </div>\n                  {clearButton}\n                  {loader}\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </EuiI18n>\n    );\n  }\n}\n"]}]}