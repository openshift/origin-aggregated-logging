{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/delay_render/delay_render_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/delay_render/delay_render_example.js","mtime":1565204169460},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DelayRenderExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _delay_render = _interopRequireDefault(require(\"./delay_render\"));\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar delayRenderSource = require('!!raw-loader!./delay_render');\n\nvar delayRenderHtml = (0, _services.renderToHtml)(_delay_render.default);\nvar DelayRenderExample = {\n  title: 'Delay Render',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: delayRenderSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: delayRenderHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDelayRender\"), \" is a component for conditionally toggling the visibility of a child component. It will ensure that the child is hidden for at least 500ms (default). This allows delay UI rendering. That is helpful when you need to update aria live region(s) repeatedly.\"),\n    props: {\n      EuiDelayRender: _components2.EuiDelayRender\n    },\n    demo: _react.default.createElement(_delay_render.default, null)\n  }]\n};\nexports.DelayRenderExample = DelayRenderExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/delay_render/delay_render_example.js"],"names":["delayRenderSource","require","delayRenderHtml","DelayRender","DelayRenderExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiDelayRender","demo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMC,eAAe,GAAG,4BAAaC,qBAAb,CAAxB;AAEO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,KAAK,EAAE,cADyB;AAEhCC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CADV;AAWEW,IAAAA,IAAI,EACF,wCACE,6BAAC,oBAAD,yBADF,kQAZJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KApBT;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AArBR,GADQ;AAFsB,CAA3B","sourcesContent":["import React from 'react';\nimport DelayRender from './delay_render';\nimport { GuideSectionTypes } from '../../components';\nimport { EuiCode, EuiDelayRender } from '../../../../src/components';\nimport { renderToHtml } from '../../services';\n\nconst delayRenderSource = require('!!raw-loader!./delay_render');\nconst delayRenderHtml = renderToHtml(DelayRender);\n\nexport const DelayRenderExample = {\n  title: 'Delay Render',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: delayRenderSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: delayRenderHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiDelayRender</EuiCode> is a component for conditionally\n          toggling the visibility of a child component. It will ensure that the\n          child is hidden for at least 500ms (default). This allows delay UI\n          rendering. That is helpful when you need to update aria live region(s)\n          repeatedly.\n        </p>\n      ),\n      props: { EuiDelayRender },\n      demo: <DelayRender />,\n    },\n  ],\n};\n"]}]}