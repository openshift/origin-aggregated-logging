{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer_group.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer_group.js","mtime":1565204169946},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiNavDrawerGroup = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _list_group = require(\"../list_group/list_group\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar EuiNavDrawerGroup = function EuiNavDrawerGroup(_ref) {\n  var className = _ref.className,\n      listItems = _ref.listItems,\n      flyoutMenuButtonClick = _ref.flyoutMenuButtonClick,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"listItems\", \"flyoutMenuButtonClick\"]);\n\n  var classes = (0, _classnames.default)('euiNavDrawerGroup', className);\n  var listItemsExists = listItems && !!listItems.length; // Alter listItems object with prop flyoutMenu and extra props\n\n  var newListItems = !listItemsExists ? undefined : listItems.map(function (item) {\n    // If the flyout menu exists, pass back the list of times and the title with the onClick handler of the item\n    var flyoutMenu = item.flyoutMenu,\n        itemProps = _objectWithoutProperties(item, [\"flyoutMenu\"]);\n\n    if (flyoutMenu && flyoutMenuButtonClick) {\n      var items = _toConsumableArray(flyoutMenu.listItems);\n\n      var title = \"\".concat(flyoutMenu.title);\n\n      itemProps.onClick = function () {\n        return flyoutMenuButtonClick(items, title);\n      };\n    } // Make some declarations of props for the side nav implementation\n\n\n    itemProps.className = (0, _classnames.default)('euiNavDrawerGroup__item', item.className);\n    itemProps.size = item.size || 's';\n    itemProps['aria-label'] = item['aria-label'] || item.label; // Add an avatar in place of non-existent icons\n\n    var itemProvidesIcon = !!item.iconType || !!item.icon;\n\n    if (!itemProvidesIcon) {\n      itemProps.icon = _react.default.createElement(\"span\", {\n        className: \"euiNavDrawerGroup__itemDefaultIcon\"\n      }, (0, _services.toInitials)(item.label));\n    } // And return the item with conditional `onClick` and without `flyoutMenu`\n\n\n    return _objectSpread({}, itemProps);\n  });\n  return _react.default.createElement(_list_group.EuiListGroup, _extends({\n    className: classes,\n    listItems: newListItems\n  }, rest));\n};\n\nexports.EuiNavDrawerGroup = EuiNavDrawerGroup;\nEuiNavDrawerGroup.propTypes = {\n  listItems: _propTypes.default.arrayOf(_propTypes.default.shape(_objectSpread({}, _list_group.EuiListGroup.propTypes.listItems[0], {\n    flyoutMenu: _propTypes.default.shape({\n      title: _propTypes.default.string.isRequired,\n      listItems: _list_group.EuiListGroup.propTypes.listItems.isRequired\n    })\n  }))),\n\n  /**\n   * While not normally required, it is required to pass a function for handling\n   * of the flyout menu button click\n   */\n  flyoutMenuButtonClick: _propTypes.default.func\n};\nEuiNavDrawerGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiNavDrawerGroup\",\n  \"props\": {\n    \"listItems\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"flyoutMenu\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"title\": {\n                  \"name\": \"string\",\n                  \"required\": true\n                },\n                \"listItems\": {\n                  \"name\": \"custom\",\n                  \"raw\": \"EuiListGroup.propTypes.listItems.isRequired\",\n                  \"required\": true\n                }\n              },\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"flyoutMenuButtonClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"While not normally required, it is required to pass a function for handling\\nof the flyout menu button click\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer_group.js"],"names":["EuiNavDrawerGroup","className","listItems","flyoutMenuButtonClick","rest","classes","listItemsExists","length","newListItems","undefined","map","item","flyoutMenu","itemProps","items","title","onClick","size","label","itemProvidesIcon","iconType","icon","propTypes","PropTypes","arrayOf","shape","EuiListGroup","string","isRequired","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAK3B;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,qBAEI,QAFJA,qBAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAG,yBAAW,mBAAX,EAAgCJ,SAAhC,CAAhB;AAEA,MAAMK,eAAe,GAAGJ,SAAS,IAAI,CAAC,CAACA,SAAS,CAACK,MAAjD,CAHI,CAKJ;;AACA,MAAMC,YAAY,GAAG,CAACF,eAAD,GACjBG,SADiB,GAEjBP,SAAS,CAACQ,GAAV,CAAc,UAAAC,IAAI,EAAI;AACpB;AADoB,QAEZC,UAFY,GAEiBD,IAFjB,CAEZC,UAFY;AAAA,QAEGC,SAFH,4BAEiBF,IAFjB;;AAGpB,QAAIC,UAAU,IAAIT,qBAAlB,EAAyC;AACvC,UAAMW,KAAK,sBAAOF,UAAU,CAACV,SAAlB,CAAX;;AACA,UAAMa,KAAK,aAAMH,UAAU,CAACG,KAAjB,CAAX;;AACAF,MAAAA,SAAS,CAACG,OAAV,GAAoB;AAAA,eAAMb,qBAAqB,CAACW,KAAD,EAAQC,KAAR,CAA3B;AAAA,OAApB;AACD,KAPmB,CASpB;;;AACAF,IAAAA,SAAS,CAACZ,SAAV,GAAsB,yBACpB,yBADoB,EAEpBU,IAAI,CAACV,SAFe,CAAtB;AAIAY,IAAAA,SAAS,CAACI,IAAV,GAAiBN,IAAI,CAACM,IAAL,IAAa,GAA9B;AACAJ,IAAAA,SAAS,CAAC,YAAD,CAAT,GAA0BF,IAAI,CAAC,YAAD,CAAJ,IAAsBA,IAAI,CAACO,KAArD,CAfoB,CAiBpB;;AACA,QAAMC,gBAAgB,GAAG,CAAC,CAACR,IAAI,CAACS,QAAP,IAAmB,CAAC,CAACT,IAAI,CAACU,IAAnD;;AACA,QAAI,CAACF,gBAAL,EAAuB;AACrBN,MAAAA,SAAS,CAACQ,IAAV,GACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACG,0BAAWV,IAAI,CAACO,KAAhB,CADH,CADF;AAKD,KAzBmB,CA2BpB;;;AACA,6BAAYL,SAAZ;AACD,GA7BD,CAFJ;AAiCA,SACE,6BAAC,wBAAD;AAAc,IAAA,SAAS,EAAER,OAAzB;AAAkC,IAAA,SAAS,EAAEG;AAA7C,KAA+DJ,IAA/D,EADF;AAGD,CA/CM;;;AAiDPJ,iBAAiB,CAACsB,SAAlB,GAA8B;AAC5BpB,EAAAA,SAAS,EAAEqB,mBAAUC,OAAV,CACTD,mBAAUE,KAAV,mBACKC,yBAAaJ,SAAb,CAAuBpB,SAAvB,CAAiC,CAAjC,CADL;AAEEU,IAAAA,UAAU,EAAEW,mBAAUE,KAAV,CAAgB;AAC1BV,MAAAA,KAAK,EAAEQ,mBAAUI,MAAV,CAAiBC,UADE;AAE1B1B,MAAAA,SAAS,EAAEwB,yBAAaJ,SAAb,CAAuBpB,SAAvB,CAAiC0B;AAFlB,KAAhB;AAFd,KADS,CADiB;;AAU5B;;;;AAIAzB,EAAAA,qBAAqB,EAAEoB,mBAAUM;AAdL,CAA9B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiListGroup } from '../list_group/list_group';\nimport { toInitials } from '../../services';\n\nexport const EuiNavDrawerGroup = ({\n  className,\n  listItems,\n  flyoutMenuButtonClick,\n  ...rest\n}) => {\n  const classes = classNames('euiNavDrawerGroup', className);\n\n  const listItemsExists = listItems && !!listItems.length;\n\n  // Alter listItems object with prop flyoutMenu and extra props\n  const newListItems = !listItemsExists\n    ? undefined\n    : listItems.map(item => {\n        // If the flyout menu exists, pass back the list of times and the title with the onClick handler of the item\n        const { flyoutMenu, ...itemProps } = item;\n        if (flyoutMenu && flyoutMenuButtonClick) {\n          const items = [...flyoutMenu.listItems];\n          const title = `${flyoutMenu.title}`;\n          itemProps.onClick = () => flyoutMenuButtonClick(items, title);\n        }\n\n        // Make some declarations of props for the side nav implementation\n        itemProps.className = classNames(\n          'euiNavDrawerGroup__item',\n          item.className\n        );\n        itemProps.size = item.size || 's';\n        itemProps['aria-label'] = item['aria-label'] || item.label;\n\n        // Add an avatar in place of non-existent icons\n        const itemProvidesIcon = !!item.iconType || !!item.icon;\n        if (!itemProvidesIcon) {\n          itemProps.icon = (\n            <span className=\"euiNavDrawerGroup__itemDefaultIcon\">\n              {toInitials(item.label)}\n            </span>\n          );\n        }\n\n        // And return the item with conditional `onClick` and without `flyoutMenu`\n        return { ...itemProps };\n      });\n\n  return (\n    <EuiListGroup className={classes} listItems={newListItems} {...rest} />\n  );\n};\n\nEuiNavDrawerGroup.propTypes = {\n  listItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...EuiListGroup.propTypes.listItems[0],\n      flyoutMenu: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        listItems: EuiListGroup.propTypes.listItems.isRequired,\n      }),\n    })\n  ),\n  /**\n   * While not normally required, it is required to pass a function for handling\n   * of the flyout menu button click\n   */\n  flyoutMenuButtonClick: PropTypes.func,\n};\n"]}]}