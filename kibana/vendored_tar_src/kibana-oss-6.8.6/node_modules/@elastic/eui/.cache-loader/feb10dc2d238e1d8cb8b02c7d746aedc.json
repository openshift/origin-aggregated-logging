{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/description_list/description_list_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/description_list/description_list_example.js","mtime":1565204169461},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DescriptionListExample = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _description_list = _interopRequireDefault(require(\"./description_list\"));\n\nvar _description_list_column = _interopRequireDefault(require(\"./description_list_column\"));\n\nvar _description_list_styling = _interopRequireDefault(require(\"./description_list_styling\"));\n\nvar _description_list_inline = _interopRequireDefault(require(\"./description_list_inline\"));\n\nvar _description_list_reverse = _interopRequireDefault(require(\"./description_list_reverse\"));\n\nvar _description_list_classes = _interopRequireDefault(require(\"./description_list_classes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar descriptionListSource = require('!!raw-loader!./description_list');\n\nvar descriptionListHtml = (0, _services.renderToHtml)(_description_list.default);\n\nvar descriptionListColumnSource = require('!!raw-loader!./description_list_column');\n\nvar descriptionListColumnHtml = (0, _services.renderToHtml)(_description_list_column.default);\n\nvar descriptionListStylingSource = require('!!raw-loader!./description_list_styling');\n\nvar descriptionListStylingHtml = (0, _services.renderToHtml)(_description_list_styling.default);\n\nvar descriptionListInlineSource = require('!!raw-loader!./description_list_inline');\n\nvar descriptionListInlineHtml = (0, _services.renderToHtml)(_description_list_inline.default);\n\nvar descriptionListReverseSource = require('!!raw-loader!./description_list_reverse');\n\nvar descriptionListReverseHtml = (0, _services.renderToHtml)(_description_list_reverse.default);\n\nvar descriptionListClassesSource = require('!!raw-loader!./description_list_classes');\n\nvar descriptionListClassesHtml = (0, _services.renderToHtml)(_description_list_classes.default);\nvar DescriptionListExample = {\n  title: 'Description List',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"DescriptionList\"), \" is a component for listing pairs of information together. You can use the component on its own, passing in an object for the list, or use the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDescriptionListTitle\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDescriptionListDescription\"), \"components separately to build a list manually.\"),\n    props: {\n      EuiDescriptionList: _components2.EuiDescriptionList,\n      EuiDescriptionListTitle: _components2.EuiDescriptionListTitle,\n      EuiDescriptionListDescription: _components2.EuiDescriptionListDescription\n    },\n    demo: _react.default.createElement(_description_list.default, null)\n  }, {\n    title: 'Reverse style',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListReverseSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListReverseHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Setting the \", _react.default.createElement(_components2.EuiCode, null, \"textStyle\"), \" prop to\", ' ', _react.default.createElement(_components2.EuiCode, null, \"reverse\"), \" will reverse the text styles of the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"title\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"description\"), \" elements so that the description is more prominent. This works best for key/value type content.\"), _react.default.createElement(\"p\", null, \"Adding this property to the \", _react.default.createElement(_components2.EuiCode, null, \"inline\"), \" type will not change anything.\")),\n    demo: _react.default.createElement(_description_list_reverse.default, null)\n  }, {\n    title: 'As columns',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListColumnSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListColumnHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"Using the prop \", _react.default.createElement(_components2.EuiCode, null, \"type\"), \" set to\", ' ', _react.default.createElement(_components2.EuiCode, null, \"column\"), \" description lists can be presented in an inline, column format.\"), _react.default.createElement(\"p\", null, \"To return to the typical row format on smaller screens set\", ' ', _react.default.createElement(_components2.EuiCode, null, \"type\"), \" to \", _react.default.createElement(_components2.EuiCode, null, \"responsiveColumn\"), \".\")),\n    demo: _react.default.createElement(_description_list_column.default, null)\n  }, {\n    title: 'Inline',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListInlineSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListInlineHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Using a prop \", _react.default.createElement(_components2.EuiCode, null, \"type\"), \" set to \", _react.default.createElement(_components2.EuiCode, null, \"inline\"), ' ', \"description lists can be presented in an inline, blob format. This is useful for JSON code blocks. Inline description lists are sized smaller than normal lists due to their compact nature.\"),\n    demo: _react.default.createElement(_description_list_inline.default, null)\n  }, {\n    title: 'Centered and compressed',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListStylingSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListStylingHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Using the \", _react.default.createElement(_components2.EuiCode, null, \"align\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"compressed\"), ' ', \"props you can further tailor the look of a description list. This works with column and inline types.\"),\n    demo: _react.default.createElement(_description_list_styling.default, null)\n  }, {\n    title: 'Passing className',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: descriptionListClassesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: descriptionListClassesHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"When using the \", _react.default.createElement(_components2.EuiCode, null, \"listItems\"), \" prop to pass an object of items and you need to also add \", _react.default.createElement(_components2.EuiCode, null, \"className\"), \"s (or other available props) to the individual pieces, you can use the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"titleProps\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"descriptionProps\"), ' ', \"to do so.\"),\n    demo: _react.default.createElement(_description_list_classes.default, null)\n  }]\n};\nexports.DescriptionListExample = DescriptionListExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/description_list/description_list_example.js"],"names":["descriptionListSource","require","descriptionListHtml","DescriptionList","descriptionListColumnSource","descriptionListColumnHtml","DescriptionListColumn","descriptionListStylingSource","descriptionListStylingHtml","DescriptionListStyling","descriptionListInlineSource","descriptionListInlineHtml","DescriptionListInline","descriptionListReverseSource","descriptionListReverseHtml","DescriptionListReverse","descriptionListClassesSource","descriptionListClassesHtml","DescriptionListClasses","DescriptionListExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiDescriptionList","EuiDescriptionListTitle","EuiDescriptionListDescription","demo"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiDescriptionList,\n  EuiDescriptionListTitle,\n  EuiDescriptionListDescription,\n} from '../../../../src/components';\n\nimport DescriptionList from './description_list';\nconst descriptionListSource = require('!!raw-loader!./description_list');\nconst descriptionListHtml = renderToHtml(DescriptionList);\n\nimport DescriptionListColumn from './description_list_column';\nconst descriptionListColumnSource = require('!!raw-loader!./description_list_column');\nconst descriptionListColumnHtml = renderToHtml(DescriptionListColumn);\n\nimport DescriptionListStyling from './description_list_styling';\nconst descriptionListStylingSource = require('!!raw-loader!./description_list_styling');\nconst descriptionListStylingHtml = renderToHtml(DescriptionListStyling);\n\nimport DescriptionListInline from './description_list_inline';\nconst descriptionListInlineSource = require('!!raw-loader!./description_list_inline');\nconst descriptionListInlineHtml = renderToHtml(DescriptionListInline);\n\nimport DescriptionListReverse from './description_list_reverse';\nconst descriptionListReverseSource = require('!!raw-loader!./description_list_reverse');\nconst descriptionListReverseHtml = renderToHtml(DescriptionListReverse);\n\nimport DescriptionListClasses from './description_list_classes';\nconst descriptionListClassesSource = require('!!raw-loader!./description_list_classes');\nconst descriptionListClassesHtml = renderToHtml(DescriptionListClasses);\n\nexport const DescriptionListExample = {\n  title: 'Description List',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>DescriptionList</EuiCode> is a component for listing pairs of\n          information together. You can use the component on its own, passing in\n          an object for the list, or use the{' '}\n          <EuiCode>EuiDescriptionListTitle</EuiCode> and{' '}\n          <EuiCode>EuiDescriptionListDescription</EuiCode>\n          components separately to build a list manually.\n        </p>\n      ),\n      props: {\n        EuiDescriptionList,\n        EuiDescriptionListTitle,\n        EuiDescriptionListDescription,\n      },\n      demo: <DescriptionList />,\n    },\n    {\n      title: 'Reverse style',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListReverseSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListReverseHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Setting the <EuiCode>textStyle</EuiCode> prop to{' '}\n            <EuiCode>reverse</EuiCode> will reverse the text styles of the{' '}\n            <EuiCode>title</EuiCode> and <EuiCode>description</EuiCode> elements\n            so that the description is more prominent. This works best for\n            key/value type content.\n          </p>\n          <p>\n            Adding this property to the <EuiCode>inline</EuiCode> type will not\n            change anything.\n          </p>\n        </div>\n      ),\n      demo: <DescriptionListReverse />,\n    },\n    {\n      title: 'As columns',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListColumnSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListColumnHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Using the prop <EuiCode>type</EuiCode> set to{' '}\n            <EuiCode>column</EuiCode> description lists can be presented in an\n            inline, column format.\n          </p>\n          <p>\n            To return to the typical row format on smaller screens set{' '}\n            <EuiCode>type</EuiCode> to <EuiCode>responsiveColumn</EuiCode>.\n          </p>\n        </Fragment>\n      ),\n      demo: <DescriptionListColumn />,\n    },\n    {\n      title: 'Inline',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListInlineSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListInlineHtml,\n        },\n      ],\n      text: (\n        <p>\n          Using a prop <EuiCode>type</EuiCode> set to <EuiCode>inline</EuiCode>{' '}\n          description lists can be presented in an inline, blob format. This is\n          useful for JSON code blocks. Inline description lists are sized\n          smaller than normal lists due to their compact nature.\n        </p>\n      ),\n      demo: <DescriptionListInline />,\n    },\n    {\n      title: 'Centered and compressed',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListStylingSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListStylingHtml,\n        },\n      ],\n      text: (\n        <p>\n          Using the <EuiCode>align</EuiCode> and <EuiCode>compressed</EuiCode>{' '}\n          props you can further tailor the look of a description list. This\n          works with column and inline types.\n        </p>\n      ),\n      demo: <DescriptionListStyling />,\n    },\n    {\n      title: 'Passing className',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: descriptionListClassesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: descriptionListClassesHtml,\n        },\n      ],\n      text: (\n        <p>\n          When using the <EuiCode>listItems</EuiCode> prop to pass an object of\n          items and you need to also add <EuiCode>className</EuiCode>s (or other\n          available props) to the individual pieces, you can use the{' '}\n          <EuiCode>titleProps</EuiCode> and <EuiCode>descriptionProps</EuiCode>{' '}\n          to do so.\n        </p>\n      ),\n      demo: <DescriptionListClasses />,\n    },\n  ],\n};\n"]}]}