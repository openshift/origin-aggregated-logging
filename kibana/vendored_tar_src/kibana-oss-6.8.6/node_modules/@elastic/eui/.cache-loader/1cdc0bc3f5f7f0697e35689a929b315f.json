{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/expanding_rows/expanding_rows.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/expanding_rows/expanding_rows.js","mtime":1565204169552},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Table = void 0;\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _format = require(\"../../../../../src/services/format\");\n\nvar _data_store = require(\"../data_store\");\n\nvar _components = require(\"../../../../../src/components\");\n\nvar _services = require(\"../../../../../src/services\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nExample user object:\n\n{\n  id: '1',\n  firstName: 'john',\n  lastName: 'doe',\n  github: 'johndoe',\n  dateOfBirth: Date.now(),\n  nationality: 'NL',\n  online: true\n}\n\nExample country object:\n\n{\n  code: 'NL',\n  name: 'Netherlands',\n  flag: 'ðŸ‡³ðŸ‡±'\n}\n*/\nvar store = (0, _data_store.createDataStore)();\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onTableChange\", function (_ref) {\n      var _ref$page = _ref.page,\n          page = _ref$page === void 0 ? {} : _ref$page,\n          _ref$sort = _ref.sort,\n          sort = _ref$sort === void 0 ? {} : _ref$sort;\n      var pageIndex = page.index,\n          pageSize = page.size;\n      var sortField = sort.field,\n          sortDirection = sort.direction;\n\n      _this.setState({\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        sortField: sortField,\n        sortDirection: sortDirection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSelectionChange\", function (selectedItems) {\n      _this.setState({\n        selectedItems: selectedItems\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickDelete\", function () {\n      var selectedItems = _this.state.selectedItems;\n      store.deleteUsers.apply(store, _toConsumableArray(selectedItems.map(function (user) {\n        return user.id;\n      })));\n\n      _this.setState({\n        selectedItems: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleDetails\", function (item) {\n      var itemIdToExpandedRowMap = _objectSpread({}, _this.state.itemIdToExpandedRowMap);\n\n      if (itemIdToExpandedRowMap[item.id]) {\n        delete itemIdToExpandedRowMap[item.id];\n      } else {\n        var nationality = item.nationality,\n            online = item.online;\n        var country = store.getCountry(nationality);\n        var color = online ? 'success' : 'danger';\n        var label = online ? 'Online' : 'Offline';\n        var listItems = [{\n          title: 'Nationality',\n          description: \"\".concat(country.flag, \" \").concat(country.name)\n        }, {\n          title: 'Online',\n          description: _react.default.createElement(_components.EuiHealth, {\n            color: color\n          }, label)\n        }];\n        itemIdToExpandedRowMap[item.id] = _react.default.createElement(_components.EuiDescriptionList, {\n          listItems: listItems\n        });\n      }\n\n      _this.setState({\n        itemIdToExpandedRowMap: itemIdToExpandedRowMap\n      });\n    });\n\n    _this.state = {\n      pageIndex: 0,\n      pageSize: 5,\n      sortField: 'firstName',\n      sortDirection: 'asc',\n      selectedItems: [],\n      itemIdToExpandedRowMap: {}\n    };\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"renderDeleteButton\",\n    value: function renderDeleteButton() {\n      var selectedItems = this.state.selectedItems;\n\n      if (selectedItems.length === 0) {\n        return;\n      }\n\n      return _react.default.createElement(_components.EuiButton, {\n        color: \"danger\",\n        iconType: \"trash\",\n        onClick: this.onClickDelete\n      }, \"Delete \", selectedItems.length, \" Users\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          pageIndex = _this$state.pageIndex,\n          pageSize = _this$state.pageSize,\n          sortField = _this$state.sortField,\n          sortDirection = _this$state.sortDirection,\n          itemIdToExpandedRowMap = _this$state.itemIdToExpandedRowMap;\n\n      var _store$findUsers = store.findUsers(pageIndex, pageSize, sortField, sortDirection),\n          pageOfItems = _store$findUsers.pageOfItems,\n          totalItemCount = _store$findUsers.totalItemCount;\n\n      var deleteButton = this.renderDeleteButton();\n      var columns = [{\n        field: 'firstName',\n        name: 'First Name',\n        sortable: true,\n        truncateText: true,\n        mobileOptions: {\n          render: function render(item) {\n            return _react.default.createElement(\"span\", null, item.firstName, \" \", item.lastName);\n          },\n          header: false,\n          truncateText: false,\n          enlarge: true,\n          fullWidth: true\n        }\n      }, {\n        field: 'lastName',\n        name: 'Last Name',\n        truncateText: true,\n        mobileOptions: {\n          show: false\n        }\n      }, {\n        field: 'dateOfBirth',\n        name: 'Date of Birth',\n        dataType: 'date',\n        render: function render(date) {\n          return (0, _format.formatDate)(date, 'dobLong');\n        },\n        sortable: true\n      }, {\n        name: 'Actions',\n        actions: [{\n          name: 'Clone',\n          description: 'Clone this person',\n          type: 'icon',\n          icon: 'copy',\n          onClick: function onClick() {\n            return '';\n          }\n        }]\n      }, {\n        align: _services.RIGHT_ALIGNMENT,\n        width: '40px',\n        isExpander: true,\n        render: function render(item) {\n          return _react.default.createElement(_components.EuiButtonIcon, {\n            onClick: function onClick() {\n              return _this2.toggleDetails(item);\n            },\n            \"aria-label\": itemIdToExpandedRowMap[item.id] ? 'Collapse' : 'Expand',\n            iconType: itemIdToExpandedRowMap[item.id] ? 'arrowUp' : 'arrowDown'\n          });\n        }\n      }];\n      var pagination = {\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        totalItemCount: totalItemCount,\n        pageSizeOptions: [3, 5, 8]\n      };\n      var sorting = {\n        sort: {\n          field: sortField,\n          direction: sortDirection\n        }\n      };\n      var selection = {\n        selectable: function selectable(user) {\n          return user.online;\n        },\n        selectableMessage: function selectableMessage(selectable) {\n          return !selectable ? 'User is currently offline' : undefined;\n        },\n        onSelectionChange: this.onSelectionChange\n      };\n      return _react.default.createElement(_react.Fragment, null, deleteButton, _react.default.createElement(_components.EuiBasicTable, {\n        items: pageOfItems,\n        itemId: \"id\",\n        itemIdToExpandedRowMap: this.state.itemIdToExpandedRowMap,\n        isExpandable: true,\n        hasActions: true,\n        columns: columns,\n        pagination: pagination,\n        sorting: sorting,\n        isSelectable: true,\n        selection: selection,\n        onChange: this.onTableChange\n      }));\n    }\n  }]);\n\n  return Table;\n}(_react.Component);\n\nexports.Table = Table;\nTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onTableChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ page = {}, sort = {} }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onSelectionChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"selectedItems\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onClickDelete\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"renderDeleteButton\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleDetails\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"item\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Table\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/expanding_rows/expanding_rows.js"],"names":["store","Table","props","page","sort","pageIndex","index","pageSize","size","sortField","field","sortDirection","direction","setState","selectedItems","state","deleteUsers","map","user","id","item","itemIdToExpandedRowMap","nationality","online","country","getCountry","color","label","listItems","title","description","flag","name","length","onClickDelete","findUsers","pageOfItems","totalItemCount","deleteButton","renderDeleteButton","columns","sortable","truncateText","mobileOptions","render","firstName","lastName","header","enlarge","fullWidth","show","dataType","date","actions","type","icon","onClick","align","RIGHT_ALIGNMENT","width","isExpander","toggleDetails","pagination","pageSizeOptions","sorting","selection","selectable","selectableMessage","undefined","onSelectionChange","onTableChange","Component"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { formatDate } from '../../../../../src/services/format';\nimport { createDataStore } from '../data_store';\n\nimport {\n  EuiBasicTable,\n  EuiButtonIcon,\n  EuiHealth,\n  EuiButton,\n  EuiDescriptionList,\n} from '../../../../../src/components';\n\nimport { RIGHT_ALIGNMENT } from '../../../../../src/services';\n\n/*\nExample user object:\n\n{\n  id: '1',\n  firstName: 'john',\n  lastName: 'doe',\n  github: 'johndoe',\n  dateOfBirth: Date.now(),\n  nationality: 'NL',\n  online: true\n}\n\nExample country object:\n\n{\n  code: 'NL',\n  name: 'Netherlands',\n  flag: 'ðŸ‡³ðŸ‡±'\n}\n*/\n\nconst store = createDataStore();\n\nexport class Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageIndex: 0,\n      pageSize: 5,\n      sortField: 'firstName',\n      sortDirection: 'asc',\n      selectedItems: [],\n      itemIdToExpandedRowMap: {},\n    };\n  }\n\n  onTableChange = ({ page = {}, sort = {} }) => {\n    const { index: pageIndex, size: pageSize } = page;\n\n    const { field: sortField, direction: sortDirection } = sort;\n\n    this.setState({\n      pageIndex,\n      pageSize,\n      sortField,\n      sortDirection,\n    });\n  };\n\n  onSelectionChange = selectedItems => {\n    this.setState({ selectedItems });\n  };\n\n  onClickDelete = () => {\n    const { selectedItems } = this.state;\n    store.deleteUsers(...selectedItems.map(user => user.id));\n\n    this.setState({\n      selectedItems: [],\n    });\n  };\n\n  renderDeleteButton() {\n    const { selectedItems } = this.state;\n\n    if (selectedItems.length === 0) {\n      return;\n    }\n\n    return (\n      <EuiButton color=\"danger\" iconType=\"trash\" onClick={this.onClickDelete}>\n        Delete {selectedItems.length} Users\n      </EuiButton>\n    );\n  }\n\n  toggleDetails = item => {\n    const itemIdToExpandedRowMap = { ...this.state.itemIdToExpandedRowMap };\n    if (itemIdToExpandedRowMap[item.id]) {\n      delete itemIdToExpandedRowMap[item.id];\n    } else {\n      const { nationality, online } = item;\n      const country = store.getCountry(nationality);\n      const color = online ? 'success' : 'danger';\n      const label = online ? 'Online' : 'Offline';\n      const listItems = [\n        {\n          title: 'Nationality',\n          description: `${country.flag} ${country.name}`,\n        },\n        {\n          title: 'Online',\n          description: <EuiHealth color={color}>{label}</EuiHealth>,\n        },\n      ];\n      itemIdToExpandedRowMap[item.id] = (\n        <EuiDescriptionList listItems={listItems} />\n      );\n    }\n    this.setState({ itemIdToExpandedRowMap });\n  };\n\n  render() {\n    const {\n      pageIndex,\n      pageSize,\n      sortField,\n      sortDirection,\n      itemIdToExpandedRowMap,\n    } = this.state;\n\n    const { pageOfItems, totalItemCount } = store.findUsers(\n      pageIndex,\n      pageSize,\n      sortField,\n      sortDirection\n    );\n\n    const deleteButton = this.renderDeleteButton();\n\n    const columns = [\n      {\n        field: 'firstName',\n        name: 'First Name',\n        sortable: true,\n        truncateText: true,\n        mobileOptions: {\n          render: item => (\n            <span>\n              {item.firstName} {item.lastName}\n            </span>\n          ),\n          header: false,\n          truncateText: false,\n          enlarge: true,\n          fullWidth: true,\n        },\n      },\n      {\n        field: 'lastName',\n        name: 'Last Name',\n        truncateText: true,\n        mobileOptions: {\n          show: false,\n        },\n      },\n      {\n        field: 'dateOfBirth',\n        name: 'Date of Birth',\n        dataType: 'date',\n        render: date => formatDate(date, 'dobLong'),\n        sortable: true,\n      },\n      {\n        name: 'Actions',\n        actions: [\n          {\n            name: 'Clone',\n            description: 'Clone this person',\n            type: 'icon',\n            icon: 'copy',\n            onClick: () => '',\n          },\n        ],\n      },\n      {\n        align: RIGHT_ALIGNMENT,\n        width: '40px',\n        isExpander: true,\n        render: item => (\n          <EuiButtonIcon\n            onClick={() => this.toggleDetails(item)}\n            aria-label={itemIdToExpandedRowMap[item.id] ? 'Collapse' : 'Expand'}\n            iconType={itemIdToExpandedRowMap[item.id] ? 'arrowUp' : 'arrowDown'}\n          />\n        ),\n      },\n    ];\n\n    const pagination = {\n      pageIndex: pageIndex,\n      pageSize: pageSize,\n      totalItemCount: totalItemCount,\n      pageSizeOptions: [3, 5, 8],\n    };\n\n    const sorting = {\n      sort: {\n        field: sortField,\n        direction: sortDirection,\n      },\n    };\n\n    const selection = {\n      selectable: user => user.online,\n      selectableMessage: selectable =>\n        !selectable ? 'User is currently offline' : undefined,\n      onSelectionChange: this.onSelectionChange,\n    };\n\n    return (\n      <Fragment>\n        {deleteButton}\n        <EuiBasicTable\n          items={pageOfItems}\n          itemId=\"id\"\n          itemIdToExpandedRowMap={this.state.itemIdToExpandedRowMap}\n          isExpandable={true}\n          hasActions={true}\n          columns={columns}\n          pagination={pagination}\n          sorting={sorting}\n          isSelectable={true}\n          selection={selection}\n          onChange={this.onTableChange}\n        />\n      </Fragment>\n    );\n  }\n}\n"]}]}