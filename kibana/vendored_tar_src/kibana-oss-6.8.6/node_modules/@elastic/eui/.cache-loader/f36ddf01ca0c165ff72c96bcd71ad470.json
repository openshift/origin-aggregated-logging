{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/text/text_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/text/text_example.js","mtime":1565204169566},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _text = _interopRequireDefault(require(\"./text\"));\n\nvar _text_small = _interopRequireDefault(require(\"./text_small\"));\n\nvar _text_color = _interopRequireDefault(require(\"./text_color\"));\n\nvar _text_align = _interopRequireDefault(require(\"./text_align\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar textSource = require('!!raw-loader!./text');\n\nvar textHtml = (0, _services.renderToHtml)(_text.default);\n\nvar textSmallSource = require('!!raw-loader!./text_small');\n\nvar textSmallHtml = (0, _services.renderToHtml)(_text_small.default);\n\nvar textColorSource = require('!!raw-loader!./text_color');\n\nvar textColorHtml = (0, _services.renderToHtml)(_text_color.default);\n\nvar textAlignSource = require('!!raw-loader!./text_align');\n\nvar textAlignHtml = (0, _services.renderToHtml)(_text_align.default);\nvar TextExample = {\n  title: 'Text',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: textSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: textHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiText\"), \" is a generic catchall wrapper that will apply our standard typography styling and spacing to naked HTML. Because of its forced style it\", ' ', _react.default.createElement(\"strong\", null, \"only accepts raw HTML\"), \" and can not / should not be used to wrap React components (which would break their styling).\"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiText\"), \" can ensure proper line-length for readability by setting a \", _react.default.createElement(_components2.EuiCode, null, \"max-width\"), \" on the entire component. To add the max-width setting, set\", ' ', _react.default.createElement(_components2.EuiCode, null, \"grow = false\"), \".\")),\n    props: {\n      EuiText: _components2.EuiText\n    },\n    demo: _react.default.createElement(_text.default, null)\n  }, {\n    title: 'Text can come in various sizes',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: textSmallSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: textSmallHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Using the \", _react.default.createElement(_components2.EuiCode, null, \"size\"), \" prop on \", _react.default.createElement(_components2.EuiCode, null, \"EuiText\"), ' ', \"you can get smaller sizes of text than the default.\"),\n    demo: _react.default.createElement(_text_small.default, null)\n  }, {\n    title: 'Coloring text',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: textColorSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: textColorHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"There are two ways to color text. Either individually by applying\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiTextColor\"), \" on individual text objects, or by passing the \", _react.default.createElement(_components2.EuiCode, null, \"color\"), \" prop directly on\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiText\"), \" for a blanket approach across the entirety of your text.\"),\n    props: {\n      EuiTextColor: _components2.EuiTextColor\n    },\n    demo: _react.default.createElement(_text_color.default, null)\n  }, {\n    title: 'Alignment',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: textAlignSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: textAlignHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"There are two ways to align text. Either individually by applying\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiTextAlign\"), \" on individual text objects, or by passing the \", _react.default.createElement(_components2.EuiCode, null, \"textAlign\"), \" prop directly on\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiText\"), \" for a blanket approach across the entirety of your text.\"),\n    props: {\n      EuiTextAlign: _components2.EuiTextAlign\n    },\n    demo: _react.default.createElement(_text_align.default, null)\n  }]\n};\nexports.TextExample = TextExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/text/text_example.js"],"names":["textSource","require","textHtml","Text","textSmallSource","textSmallHtml","TextSmall","textColorSource","textColorHtml","TextColor","textAlignSource","textAlignHtml","TextAlign","TextExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiText","demo","EuiTextColor","EuiTextAlign"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiText,\n  EuiTextColor,\n  EuiTextAlign,\n} from '../../../../src/components';\n\nimport Text from './text';\nconst textSource = require('!!raw-loader!./text');\nconst textHtml = renderToHtml(Text);\n\nimport TextSmall from './text_small';\nconst textSmallSource = require('!!raw-loader!./text_small');\nconst textSmallHtml = renderToHtml(TextSmall);\n\nimport TextColor from './text_color';\nconst textColorSource = require('!!raw-loader!./text_color');\nconst textColorHtml = renderToHtml(TextColor);\n\nimport TextAlign from './text_align';\nconst textAlignSource = require('!!raw-loader!./text_align');\nconst textAlignHtml = renderToHtml(TextAlign);\n\nexport const TextExample = {\n  title: 'Text',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: textSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: textHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <EuiCode>EuiText</EuiCode> is a generic catchall wrapper that will\n            apply our standard typography styling and spacing to naked HTML.\n            Because of its forced style it{' '}\n            <strong>only accepts raw HTML</strong> and can not / should not be\n            used to wrap React components (which would break their styling).\n          </p>\n          <p>\n            <EuiCode>EuiText</EuiCode> can ensure proper line-length for\n            readability by setting a <EuiCode>max-width</EuiCode> on the entire\n            component. To add the max-width setting, set{' '}\n            <EuiCode>grow = false</EuiCode>.\n          </p>\n        </div>\n      ),\n      props: { EuiText },\n      demo: <Text />,\n    },\n    {\n      title: 'Text can come in various sizes',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: textSmallSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: textSmallHtml,\n        },\n      ],\n      text: (\n        <p>\n          Using the <EuiCode>size</EuiCode> prop on <EuiCode>EuiText</EuiCode>{' '}\n          you can get smaller sizes of text than the default.\n        </p>\n      ),\n      demo: <TextSmall />,\n    },\n    {\n      title: 'Coloring text',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: textColorSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: textColorHtml,\n        },\n      ],\n      text: (\n        <p>\n          There are two ways to color text. Either individually by applying{' '}\n          <EuiCode>EuiTextColor</EuiCode> on individual text objects, or by\n          passing the <EuiCode>color</EuiCode> prop directly on{' '}\n          <EuiCode>EuiText</EuiCode> for a blanket approach across the entirety\n          of your text.\n        </p>\n      ),\n      props: { EuiTextColor },\n      demo: <TextColor />,\n    },\n    {\n      title: 'Alignment',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: textAlignSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: textAlignHtml,\n        },\n      ],\n      text: (\n        <p>\n          There are two ways to align text. Either individually by applying{' '}\n          <EuiCode>EuiTextAlign</EuiCode> on individual text objects, or by\n          passing the <EuiCode>textAlign</EuiCode> prop directly on{' '}\n          <EuiCode>EuiText</EuiCode> for a blanket approach across the entirety\n          of your text.\n        </p>\n      ),\n      props: { EuiTextAlign },\n      demo: <TextAlign />,\n    },\n  ],\n};\n"]}]}