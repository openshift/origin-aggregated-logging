{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/observer/observer.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/observer/observer.ts","mtime":1565204169947},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiObserver = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _react = require(\"react\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiObserver =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiObserver, _Component);\n\n  function EuiObserver() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiObserver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiObserver)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"name\", 'EuiObserver');\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"childNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"observer\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateChildNode\", function (ref) {\n      if (_this.childNode === ref) return; // node hasn't changed\n      // if there's an existing observer disconnect it\n\n      if (_this.observer != null) {\n        _this.observer.disconnect();\n\n        _this.observer = null;\n      }\n\n      _this.childNode = ref;\n\n      if (_this.childNode != null) {\n        _this.beginObserve();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"beginObserve\", function () {\n      throw new Error('EuiObserver has no default observation method');\n    });\n\n    return _this;\n  }\n\n  _createClass(EuiObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.childNode == null) {\n        throw new Error(\"\".concat(this.name, \" did not receive a ref\"));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.observer != null) {\n        this.observer.disconnect();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.updateChildNode);\n    }\n  }]);\n\n  return EuiObserver;\n}(_react.Component);\n\nexports.EuiObserver = EuiObserver;\nEuiObserver.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"updateChildNode\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"ref\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"beginObserve\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiObserver\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/observer/observer.ts"],"names":["EuiObserver","ref","childNode","observer","disconnect","beginObserve","Error","name","props","children","updateChildNode","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAWaA,W;;;;;;;;;;;;;;;;;;mFACc,a;;wFACa,I;;uFACA,I;;8FAcpB,UAACC,GAAD,EAAkB;AAClC,UAAI,MAAKC,SAAL,KAAmBD,GAAvB,EAA4B,OADM,CACE;AAEpC;;AACA,UAAI,MAAKE,QAAL,IAAiB,IAArB,EAA2B;AACzB,cAAKA,QAAL,CAAcC,UAAd;;AACA,cAAKD,QAAL,GAAgB,IAAhB;AACD;;AAED,YAAKD,SAAL,GAAiBD,GAAjB;;AAEA,UAAI,MAAKC,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,cAAKG,YAAL;AACD;AACF,K;;2FAE0B,YAAM;AAC/B,YAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD,K;;;;;;;wCA9BmB;AAClB,UAAI,KAAKJ,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,cAAM,IAAII,KAAJ,WAAa,KAAKC,IAAlB,4BAAN;AACD;AACF;;;2CAEsB;AACrB,UAAI,KAAKJ,QAAL,IAAiB,IAArB,EAA2B;AACzB,aAAKA,QAAL,CAAcC,UAAd;AACD;AACF;;;6BAsBQ;AACP,aAAO,KAAKI,KAAL,CAAWC,QAAX,CAAoB,KAAKC,eAAzB,CAAP;AACD;;;;EAvCuDC,gB","sourcesContent":["import { Component } from 'react';\nexport class EuiObserver extends Component {\n  name = 'EuiObserver';\n  childNode = null;\n  observer = null;\n\n  componentDidMount() {\n    if (this.childNode == null) {\n      throw new Error(`${this.name} did not receive a ref`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.observer != null) {\n      this.observer.disconnect();\n    }\n  }\n\n  updateChildNode = ref => {\n    if (this.childNode === ref) return; // node hasn't changed\n    // if there's an existing observer disconnect it\n\n    if (this.observer != null) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n\n    this.childNode = ref;\n\n    if (this.childNode != null) {\n      this.beginObserve();\n    }\n  };\n  beginObserve = () => {\n    throw new Error('EuiObserver has no default observation method');\n  };\n\n  render() {\n    return this.props.children(this.updateChildNode);\n  }\n\n}"]}]}