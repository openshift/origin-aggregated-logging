{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/accessibility/accessibility_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/accessibility/accessibility_example.js","mtime":1565204169425},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessibilityExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _keyboard_accessible = _interopRequireDefault(require(\"./keyboard_accessible\"));\n\nvar _screen_reader = _interopRequireDefault(require(\"./screen_reader\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar keyboardAccessibleSource = require('!!raw-loader!./keyboard_accessible');\n\nvar keyboardAccessibleHtml = (0, _services.renderToHtml)(_keyboard_accessible.default);\nvar screenReaderOnlyHtml = (0, _services.renderToHtml)(_screen_reader.default);\n\nvar screenReaderOnlySource = require('!!raw-loader!./screen_reader');\n\nvar AccessibilityExample = {\n  title: 'Accessibility',\n  sections: [{\n    title: 'KeyboardAccessible',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: keyboardAccessibleSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: keyboardAccessibleHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can make interactive elements keyboard-accessible with this component. This is necessary for non-button elements and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"a\"), \" tags without\", _react.default.createElement(_components2.EuiCode, null, \"href\"), \" attributes.\"),\n    props: {\n      EuiKeyboardAccessible: _components2.EuiKeyboardAccessible\n    },\n    demo: _react.default.createElement(_keyboard_accessible.default, null)\n  }, {\n    title: 'ScreenReaderOnly',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: screenReaderOnlySource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: screenReaderOnlyHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"This class can be useful to add accessibility to older designs that are still in use, but it shouldn\\u2019t be a permanent solution. See\", ' ', _react.default.createElement(_components2.EuiLink, {\n      href: \"http://webaim.org/techniques/css/invisiblecontent/\"\n    }, \"http://webaim.org/techniques/css/invisiblecontent/\"), ' ', \"for more information.\"), _react.default.createElement(\"p\", null, \"Use a screenreader to verify that there is a second paragraph in this example:\")),\n    props: {\n      EuiScreenReaderOnly: _components2.EuiScreenReaderOnly\n    },\n    demo: _react.default.createElement(_screen_reader.default, null)\n  }]\n};\nexports.AccessibilityExample = AccessibilityExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/accessibility/accessibility_example.js"],"names":["keyboardAccessibleSource","require","keyboardAccessibleHtml","KeyboardAccessible","screenReaderOnlyHtml","ScreenReaderOnly","screenReaderOnlySource","AccessibilityExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiKeyboardAccessible","demo","EuiScreenReaderOnly"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAOA;;AACA;;;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,oCAAD,CAAxC;;AACA,IAAMC,sBAAsB,GAAG,4BAAaC,4BAAb,CAA/B;AAEA,IAAMC,oBAAoB,GAAG,4BAAaC,sBAAb,CAA7B;;AACA,IAAMC,sBAAsB,GAAGL,OAAO,CAAC,8BAAD,CAAtC;;AAEO,IAAMM,oBAAoB,GAAG;AAClCC,EAAAA,KAAK,EAAE,eAD2B;AAElCC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,KAAK,EAAE,oBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEd;AAFR,KADM,EAKN;AACEW,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,oKAE2D,GAF3D,EAGE,6BAAC,oBAAD,YAHF,mBAIE,6BAAC,oBAAD,eAJF,iBAbJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,qBAAqB,EAArBA;AAAF,KApBT;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,4BAAD;AArBR,GADQ,EAwBR;AACEX,IAAAA,KAAK,EAAE,kBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAER;AAFR,KADM,EAKN;AACEK,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEV;AAFR,KALM,CAFV;AAYEY,IAAAA,IAAI,EACF,0CACE,oLAGM,GAHN,EAKI,6BAAC,oBAAD;AAAS,MAAA,IAAI,EAAC;AAAd,4DALJ,EAQI,GARJ,0BADF,EAYE,yHAZF,CAbJ;AA+BEC,IAAAA,KAAK,EAAE;AAAEG,MAAAA,mBAAmB,EAAnBA;AAAF,KA/BT;AAgCED,IAAAA,IAAI,EAAE,6BAAC,sBAAD;AAhCR,GAxBQ;AAFwB,CAA7B","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiLink,\n  EuiKeyboardAccessible,\n  EuiScreenReaderOnly,\n} from '../../../../src/components';\n\nimport KeyboardAccessible from './keyboard_accessible';\nimport ScreenReaderOnly from './screen_reader';\n\nconst keyboardAccessibleSource = require('!!raw-loader!./keyboard_accessible');\nconst keyboardAccessibleHtml = renderToHtml(KeyboardAccessible);\n\nconst screenReaderOnlyHtml = renderToHtml(ScreenReaderOnly);\nconst screenReaderOnlySource = require('!!raw-loader!./screen_reader');\n\nexport const AccessibilityExample = {\n  title: 'Accessibility',\n  sections: [\n    {\n      title: 'KeyboardAccessible',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: keyboardAccessibleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: keyboardAccessibleHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can make interactive elements keyboard-accessible with this\n          component. This is necessary for non-button elements and{' '}\n          <EuiCode>a</EuiCode> tags without\n          <EuiCode>href</EuiCode> attributes.\n        </p>\n      ),\n      props: { EuiKeyboardAccessible },\n      demo: <KeyboardAccessible />,\n    },\n    {\n      title: 'ScreenReaderOnly',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: screenReaderOnlySource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: screenReaderOnlyHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            This class can be useful to add accessibility to older designs that\n            are still in use, but it shouldn&rsquo;t be a permanent solution.\n            See{' '}\n            {\n              <EuiLink href=\"http://webaim.org/techniques/css/invisiblecontent/\">\n                http://webaim.org/techniques/css/invisiblecontent/\n              </EuiLink>\n            }{' '}\n            for more information.\n          </p>\n          <p>\n            Use a screenreader to verify that there is a second paragraph in\n            this example:\n          </p>\n        </div>\n      ),\n      props: { EuiScreenReaderOnly },\n      demo: <ScreenReaderOnly />,\n    },\n  ],\n};\n"]}]}