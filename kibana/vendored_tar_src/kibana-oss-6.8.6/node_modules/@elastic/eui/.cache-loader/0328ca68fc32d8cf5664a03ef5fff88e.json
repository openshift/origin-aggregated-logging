{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/services/time/timer.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/services/time/timer.ts","mtime":1565204170079},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Timer = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Timer = // In a browser this is a number, but in node it's a NodeJS.Time (a\n// class). We don't care about this difference.\nfunction Timer(callback, timeMs) {\n  var _this = this;\n\n  _classCallCheck(this, Timer);\n\n  _defineProperty(this, \"id\", void 0);\n\n  _defineProperty(this, \"callback\", void 0);\n\n  _defineProperty(this, \"finishTime\", void 0);\n\n  _defineProperty(this, \"timeRemaining\", void 0);\n\n  _defineProperty(this, \"pause\", function () {\n    clearTimeout(_this.id);\n    _this.id = undefined;\n    _this.timeRemaining = (_this.finishTime || 0) - Date.now();\n  });\n\n  _defineProperty(this, \"resume\", function () {\n    _this.id = setTimeout(_this.finish, _this.timeRemaining);\n    _this.finishTime = Date.now() + (_this.timeRemaining || 0);\n    _this.timeRemaining = undefined;\n  });\n\n  _defineProperty(this, \"clear\", function () {\n    clearTimeout(_this.id);\n    _this.id = undefined;\n    _this.callback = undefined;\n    _this.finishTime = undefined;\n    _this.timeRemaining = undefined;\n  });\n\n  _defineProperty(this, \"finish\", function () {\n    if (_this.callback) {\n      _this.callback();\n    }\n\n    _this.clear();\n  });\n\n  this.id = setTimeout(this.finish, timeMs);\n  this.callback = callback;\n  this.finishTime = Date.now() + timeMs;\n  this.timeRemaining = undefined;\n};\n\nexports.Timer = Timer;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/services/time/timer.ts"],"names":["Timer","callback","timeMs","clearTimeout","id","undefined","timeRemaining","finishTime","Date","now","setTimeout","finish","clear"],"mappings":";;;;;;;;;;;IAAaA,K,GACX;AACA;AAMA,eAAYC,QAAZ,EAAkCC,MAAlC,EAAkD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,iCAO1C,YAAM;AACZC,IAAAA,YAAY,CAAC,KAAI,CAACC,EAAN,CAAZ;AACA,IAAA,KAAI,CAACA,EAAL,GAAUC,SAAV;AACA,IAAA,KAAI,CAACC,aAAL,GAAqB,CAAC,KAAI,CAACC,UAAL,IAAmB,CAApB,IAAyBC,IAAI,CAACC,GAAL,EAA9C;AACD,GAXiD;;AAAA,kCAazC,YAAM;AACb,IAAA,KAAI,CAACL,EAAL,GAAUM,UAAU,CAAC,KAAI,CAACC,MAAN,EAAc,KAAI,CAACL,aAAnB,CAApB;AACA,IAAA,KAAI,CAACC,UAAL,GAAkBC,IAAI,CAACC,GAAL,MAAc,KAAI,CAACH,aAAL,IAAsB,CAApC,CAAlB;AACA,IAAA,KAAI,CAACA,aAAL,GAAqBD,SAArB;AACD,GAjBiD;;AAAA,iCAmB1C,YAAM;AACZF,IAAAA,YAAY,CAAC,KAAI,CAACC,EAAN,CAAZ;AACA,IAAA,KAAI,CAACA,EAAL,GAAUC,SAAV;AACA,IAAA,KAAI,CAACJ,QAAL,GAAgBI,SAAhB;AACA,IAAA,KAAI,CAACE,UAAL,GAAkBF,SAAlB;AACA,IAAA,KAAI,CAACC,aAAL,GAAqBD,SAArB;AACD,GAzBiD;;AAAA,kCA2BzC,YAAM;AACb,QAAI,KAAI,CAACJ,QAAT,EAAmB;AACjB,MAAA,KAAI,CAACA,QAAL;AACD;;AACD,IAAA,KAAI,CAACW,KAAL;AACD,GAhCiD;;AAChD,OAAKR,EAAL,GAAUM,UAAU,CAAC,KAAKC,MAAN,EAAcT,MAAd,CAApB;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKM,UAAL,GAAkBC,IAAI,CAACC,GAAL,KAAaP,MAA/B;AACA,OAAKI,aAAL,GAAqBD,SAArB;AACD,C","sourcesContent":["export class Timer {\n  // In a browser this is a number, but in node it's a NodeJS.Time (a\n  // class). We don't care about this difference.\n  id: any;\n  callback: undefined | (() => void);\n  finishTime: number | undefined;\n  timeRemaining: number | undefined;\n\n  constructor(callback: () => void, timeMs: number) {\n    this.id = setTimeout(this.finish, timeMs);\n    this.callback = callback;\n    this.finishTime = Date.now() + timeMs;\n    this.timeRemaining = undefined;\n  }\n\n  pause = () => {\n    clearTimeout(this.id);\n    this.id = undefined;\n    this.timeRemaining = (this.finishTime || 0) - Date.now();\n  };\n\n  resume = () => {\n    this.id = setTimeout(this.finish, this.timeRemaining);\n    this.finishTime = Date.now() + (this.timeRemaining || 0);\n    this.timeRemaining = undefined;\n  };\n\n  clear = () => {\n    clearTimeout(this.id);\n    this.id = undefined;\n    this.callback = undefined;\n    this.finishTime = undefined;\n    this.timeRemaining = undefined;\n  };\n\n  finish = () => {\n    if (this.callback) {\n      this.callback();\n    }\n    this.clear();\n  };\n}\n"]}]}