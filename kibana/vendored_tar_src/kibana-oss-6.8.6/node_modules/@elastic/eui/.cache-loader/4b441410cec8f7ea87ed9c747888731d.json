{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/helper.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/helper.js","mtime":1565204169465},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeList = exports.makeId = void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nvar _services = require(\"../../../../src/services\");\n\nvar makeId = (0, _services.htmlIdGenerator)();\nexports.makeId = makeId;\n\nvar makeList = function makeList(number) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return Array.from({\n    length: number\n  }, function (v, k) {\n    return k + start;\n  }).map(function (el) {\n    return {\n      content: \"Item \".concat(el),\n      id: makeId()\n    };\n  });\n};\n\nexports.makeList = makeList;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/helper.js"],"names":["makeId","makeList","number","start","Array","from","length","v","k","map","el","content","id"],"mappings":";;;;;;;;;;;AAAA;;AAEO,IAAMA,MAAM,GAAG,gCAAf;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD;AAAA,MAASC,KAAT,uEAAiB,CAAjB;AAAA,SACtBC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEJ;AAAV,GAAX,EAA+B,UAACK,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAGL,KAAd;AAAA,GAA/B,EAAoDM,GAApD,CAAwD,UAAAC,EAAE,EAAI;AAC5D,WAAO;AACLC,MAAAA,OAAO,iBAAUD,EAAV,CADF;AAELE,MAAAA,EAAE,EAAEZ,MAAM;AAFL,KAAP;AAID,GALD,CADsB;AAAA,CAAjB","sourcesContent":["import { htmlIdGenerator } from '../../../../src/services';\n\nexport const makeId = htmlIdGenerator();\n\nexport const makeList = (number, start = 1) =>\n  Array.from({ length: number }, (v, k) => k + start).map(el => {\n    return {\n      content: `Item ${el}`,\n      id: makeId(),\n    };\n  });\n"]}]}