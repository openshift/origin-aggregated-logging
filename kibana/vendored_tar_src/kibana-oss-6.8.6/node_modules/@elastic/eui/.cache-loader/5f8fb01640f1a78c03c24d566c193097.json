{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/range/range_input.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/range/range_input.js","mtime":1565204169739},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiRangeInput = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _field_number = require(\"../field_number\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar EuiRangeInput = function EuiRangeInput(_ref) {\n  var min = _ref.min,\n      max = _ref.max,\n      step = _ref.step,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      compressed = _ref.compressed,\n      onChange = _ref.onChange,\n      name = _ref.name,\n      side = _ref.side,\n      digitTolerance = _ref.digitTolerance,\n      rest = _objectWithoutProperties(_ref, [\"min\", \"max\", \"step\", \"value\", \"disabled\", \"compressed\", \"onChange\", \"name\", \"side\", \"digitTolerance\"]);\n\n  // Chrome will properly size the input based on the max value, but FF & IE do not.\n  // Calculate the width of the input based on highest number of characters.\n  // Add 2 to accomodate for input stepper\n  var widthStyle = {\n    width: \"\".concat(digitTolerance / 1.25 + 2, \"em\")\n  };\n  return _react.default.createElement(_field_number.EuiFieldNumber, _extends({\n    name: name,\n    className: \"euiRangeInput euiRangeInput--\".concat(side),\n    min: Number(min),\n    max: Number(max),\n    step: step,\n    value: value === '' ? '' : Number(value),\n    disabled: disabled,\n    compressed: compressed,\n    onChange: onChange,\n    style: widthStyle\n  }, rest));\n};\n\nexports.EuiRangeInput = EuiRangeInput;\nEuiRangeInput.propTypes = {\n  min: _propTypes.default.number.isRequired,\n  max: _propTypes.default.number.isRequired,\n  step: _propTypes.default.number,\n  value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,\n  compressed: _propTypes.default.bool,\n  onChange: _propTypes.default.func,\n  name: _propTypes.default.string,\n  digitTolerance: _propTypes.default.number.isRequired,\n  side: _propTypes.default.oneOf(['min', 'max'])\n};\nEuiRangeInput.defaultProps = {\n  side: 'max'\n};\nEuiRangeInput.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiRangeInput\",\n  \"props\": {\n    \"side\": {\n      \"defaultValue\": {\n        \"value\": \"'max'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'min'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'max'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"min\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"max\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"step\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"digitTolerance\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/range/range_input.js"],"names":["EuiRangeInput","min","max","step","value","disabled","compressed","onChange","name","side","digitTolerance","rest","widthStyle","width","Number","propTypes","PropTypes","number","isRequired","oneOfType","string","bool","func","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAYvB;AAAA,MAXJC,GAWI,QAXJA,GAWI;AAAA,MAVJC,GAUI,QAVJA,GAUI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADDC,IACC;;AACJ;AACA;AACA;AACA,MAAMC,UAAU,GAAG;AAAEC,IAAAA,KAAK,YAAKH,cAAc,GAAG,IAAjB,GAAwB,CAA7B;AAAP,GAAnB;AAEA,SACE,6BAAC,4BAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,SAAS,yCAAkCC,IAAlC,CAFX;AAGE,IAAA,GAAG,EAAEK,MAAM,CAACb,GAAD,CAHb;AAIE,IAAA,GAAG,EAAEa,MAAM,CAACZ,GAAD,CAJb;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,KAAK,EAAEC,KAAK,KAAK,EAAV,GAAe,EAAf,GAAoBU,MAAM,CAACV,KAAD,CANnC;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,QAAQ,EAAEC,QATZ;AAUE,IAAA,KAAK,EAAEK;AAVT,KAWMD,IAXN,EADF;AAeD,CAjCM;;;AAmCPX,aAAa,CAACe,SAAd,GAA0B;AACxBd,EAAAA,GAAG,EAAEe,mBAAUC,MAAV,CAAiBC,UADE;AAExBhB,EAAAA,GAAG,EAAEc,mBAAUC,MAAV,CAAiBC,UAFE;AAGxBf,EAAAA,IAAI,EAAEa,mBAAUC,MAHQ;AAIxBb,EAAAA,KAAK,EAAEY,mBAAUG,SAAV,CAAoB,CAACH,mBAAUC,MAAX,EAAmBD,mBAAUI,MAA7B,CAApB,EAA0DF,UAJzC;AAKxBZ,EAAAA,UAAU,EAAEU,mBAAUK,IALE;AAMxBd,EAAAA,QAAQ,EAAES,mBAAUM,IANI;AAOxBd,EAAAA,IAAI,EAAEQ,mBAAUI,MAPQ;AAQxBV,EAAAA,cAAc,EAAEM,mBAAUC,MAAV,CAAiBC,UART;AASxBT,EAAAA,IAAI,EAAEO,mBAAUO,KAAV,CAAgB,CAAC,KAAD,EAAQ,KAAR,CAAhB;AATkB,CAA1B;AAWAvB,aAAa,CAACwB,YAAd,GAA6B;AAC3Bf,EAAAA,IAAI,EAAE;AADqB,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EuiFieldNumber } from '../field_number';\n\nexport const EuiRangeInput = ({\n  min,\n  max,\n  step,\n  value,\n  disabled,\n  compressed,\n  onChange,\n  name,\n  side,\n  digitTolerance,\n  ...rest\n}) => {\n  // Chrome will properly size the input based on the max value, but FF & IE do not.\n  // Calculate the width of the input based on highest number of characters.\n  // Add 2 to accomodate for input stepper\n  const widthStyle = { width: `${digitTolerance / 1.25 + 2}em` };\n\n  return (\n    <EuiFieldNumber\n      name={name}\n      className={`euiRangeInput euiRangeInput--${side}`}\n      min={Number(min)}\n      max={Number(max)}\n      step={step}\n      value={value === '' ? '' : Number(value)}\n      disabled={disabled}\n      compressed={compressed}\n      onChange={onChange}\n      style={widthStyle}\n      {...rest}\n    />\n  );\n};\n\nEuiRangeInput.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  step: PropTypes.number,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  compressed: PropTypes.bool,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  digitTolerance: PropTypes.number.isRequired,\n  side: PropTypes.oneOf(['min', 'max']),\n};\nEuiRangeInput.defaultProps = {\n  side: 'max',\n};\n"]}]}