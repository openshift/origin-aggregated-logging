{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/range/range_ticks.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/range/range_ticks.tsx","mtime":1565204169741},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiRangeTicks = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _find = _interopRequireDefault(require(\"lodash/find\"));\n\nvar _inner_text = require(\"../../inner_text\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar EuiRangeTicks = function EuiRangeTicks(_ref) {\n  var disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      ticks = _ref.ticks,\n      tickSequence = _ref.tickSequence,\n      value = _ref.value,\n      max = _ref.max,\n      min = _ref.min,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 1 : _ref$interval;\n  // Calculate the width of each tick mark\n  var percentageWidth = interval / (max - min + interval) * 100; // Align with item labels across the range by adding\n  // left and right negative margins that is half of the tick marks\n\n  var ticksStyle = !!ticks ? undefined : {\n    margin: \"0 \".concat(percentageWidth / -2, \"%\"),\n    left: 0,\n    right: 0\n  };\n  return _react.default.createElement(\"div\", {\n    className: \"euiRangeTicks\",\n    style: ticksStyle\n  }, tickSequence.map(function (tickValue) {\n    var tickStyle = {};\n    var customTick;\n\n    if (ticks) {\n      customTick = (0, _find.default)(ticks, function (o) {\n        return o.value === tickValue;\n      });\n\n      if (customTick) {\n        tickStyle.left = \"\".concat((customTick.value - min) / (max - min) * 100, \"%\");\n      }\n    } else {\n      tickStyle.width = \"\".concat(percentageWidth, \"%\");\n    }\n\n    var tickClasses = (0, _classnames.default)('euiRangeTick', {\n      'euiRangeTick--selected': value === tickValue,\n      'euiRangeTick--isCustom': customTick\n    });\n    var label = customTick ? customTick.label : tickValue;\n\n    var _useInnerText = (0, _inner_text.useInnerText)(),\n        _useInnerText2 = _slicedToArray(_useInnerText, 2),\n        ref = _useInnerText2[0],\n        innerText = _useInnerText2[1];\n\n    return _react.default.createElement(\"button\", {\n      type: \"button\",\n      className: tickClasses,\n      key: tickValue,\n      value: tickValue,\n      disabled: disabled,\n      onClick: onChange,\n      style: tickStyle,\n      tabIndex: -1,\n      ref: ref,\n      title: typeof label === 'string' ? label : innerText\n    }, label);\n  }));\n};\n\nexports.EuiRangeTicks = EuiRangeTicks;\nEuiRangeTicks.propTypes = {\n  ticks: _propTypes.default.arrayOf(_propTypes.default.shape({\n    value: _propTypes.default.number.isRequired,\n    label: _propTypes.default.node.isRequired\n  }).isRequired),\n  tickSequence: _propTypes.default.arrayOf(_propTypes.default.number.isRequired).isRequired,\n  value: _propTypes.default.oneOfType([_propTypes.default.number.isRequired, _propTypes.default.string.isRequired, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string.isRequired, _propTypes.default.number.isRequired]).isRequired).isRequired]),\n  min: _propTypes.default.number.isRequired,\n  max: _propTypes.default.number.isRequired,\n  interval: _propTypes.default.number,\n  disabled: _propTypes.default.bool,\n  onChange: _propTypes.default.func\n};\nEuiRangeTicks.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiRangeTicks\",\n  \"props\": {\n    \"interval\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"ticks\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"value\": {\n              \"name\": \"number\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"node\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tickSequence\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"number\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }, {\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"string\"\n            }, {\n              \"name\": \"number\"\n            }]\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"min\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"max\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/range/range_ticks.tsx"],"names":["EuiRangeTicks","disabled","onChange","ticks","tickSequence","value","max","min","interval","percentageWidth","ticksStyle","undefined","margin","left","right","map","tickValue","tickStyle","customTick","o","width","tickClasses","label","ref","innerText"],"mappings":";;;;;;;;;;;;;AAAA;;;;AAMA;;AACA;;AAGA;;;;;;;;;;;;AAqBO,IAAMA,aAAoD,GAAG,SAAvDA,aAAuD,OAS9D;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,GAGI,QAHJA,GAGI;AAAA,MAFJC,GAEI,QAFJA,GAEI;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,CACP;AACJ;AACA,MAAMC,eAAe,GAAID,QAAQ,IAAIF,GAAG,GAAGC,GAAN,GAAYC,QAAhB,CAAT,GAAsC,GAA9D,CAFI,CAIJ;AACA;;AACA,MAAME,UAAU,GAAG,CAAC,CAACP,KAAF,GACfQ,SADe,GAEf;AAAEC,IAAAA,MAAM,cAAOH,eAAe,GAAG,CAAC,CAA1B,MAAR;AAAwCI,IAAAA,IAAI,EAAE,CAA9C;AAAiDC,IAAAA,KAAK,EAAE;AAAxD,GAFJ;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAEJ;AAAtC,KACGN,YAAY,CAACW,GAAb,CAAiB,UAAAC,SAAS,EAAI;AAC7B,QAAMC,SAA4C,GAAG,EAArD;AACA,QAAIC,UAAJ;;AACA,QAAIf,KAAJ,EAAW;AACTe,MAAAA,UAAU,GAAG,mBAAKf,KAAL,EAAY,UAAAgB,CAAC;AAAA,eAAIA,CAAC,CAACd,KAAF,KAAYW,SAAhB;AAAA,OAAb,CAAb;;AAEA,UAAIE,UAAJ,EAAgB;AACdD,QAAAA,SAAS,CAACJ,IAAV,aAAqB,CAACK,UAAU,CAACb,KAAX,GAAmBE,GAApB,KAA4BD,GAAG,GAAGC,GAAlC,CAAD,GAClB,GADF;AAED;AACF,KAPD,MAOO;AACLU,MAAAA,SAAS,CAACG,KAAV,aAAqBX,eAArB;AACD;;AAED,QAAMY,WAAW,GAAG,yBAAW,cAAX,EAA2B;AAC7C,gCAA0BhB,KAAK,KAAKW,SADS;AAE7C,gCAA0BE;AAFmB,KAA3B,CAApB;AAKA,QAAMI,KAAK,GAAGJ,UAAU,GAAGA,UAAU,CAACI,KAAd,GAAsBN,SAA9C;;AAnB6B,wBAqBJ,+BArBI;AAAA;AAAA,QAqBtBO,GArBsB;AAAA,QAqBjBC,SArBiB;;AAuB7B,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEH,WAFb;AAGE,MAAA,GAAG,EAAEL,SAHP;AAIE,MAAA,KAAK,EAAEA,SAJT;AAKE,MAAA,QAAQ,EAAEf,QALZ;AAME,MAAA,OAAO,EAAEC,QANX;AAOE,MAAA,KAAK,EAAEe,SAPT;AAQE,MAAA,QAAQ,EAAE,CAAC,CARb;AASE,MAAA,GAAG,EAAEM,GATP;AAUE,MAAA,KAAK,EAAE,OAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCE;AAV7C,OAWGF,KAXH,CADF;AAeD,GAtCA,CADH,CADF;AA2CD,CA9DM","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport find from 'lodash/find';\nimport { useInnerText } from '../../inner_text';\nexport var EuiRangeTicks = ({\n  disabled,\n  onChange,\n  ticks,\n  tickSequence,\n  value,\n  max,\n  min,\n  interval = 1\n}) => {\n  // Calculate the width of each tick mark\n  const percentageWidth = interval / (max - min + interval) * 100; // Align with item labels across the range by adding\n  // left and right negative margins that is half of the tick marks\n\n  const ticksStyle = !!ticks ? undefined : {\n    margin: `0 ${percentageWidth / -2}%`,\n    left: 0,\n    right: 0\n  };\n  return <div className=\"euiRangeTicks\" style={ticksStyle}>\n      {tickSequence.map(tickValue => {\n      const tickStyle = {};\n      let customTick;\n\n      if (ticks) {\n        customTick = find(ticks, o => o.value === tickValue);\n\n        if (customTick) {\n          tickStyle.left = `${(customTick.value - min) / (max - min) * 100}%`;\n        }\n      } else {\n        tickStyle.width = `${percentageWidth}%`;\n      }\n\n      const tickClasses = classNames('euiRangeTick', {\n        'euiRangeTick--selected': value === tickValue,\n        'euiRangeTick--isCustom': customTick\n      });\n      const label = customTick ? customTick.label : tickValue;\n      const [ref, innerText] = useInnerText();\n      return <button type=\"button\" className={tickClasses} key={tickValue} value={tickValue} disabled={disabled} onClick={onChange} style={tickStyle} tabIndex={-1} ref={ref} title={typeof label === 'string' ? label : innerText}>\n            {label}\n          </button>;\n    })}\n    </div>;\n};\nEuiRangeTicks.propTypes = {\n  ticks: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    label: PropTypes.node.isRequired\n  }).isRequired),\n  tickSequence: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  value: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired).isRequired]),\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  interval: PropTypes.number,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func\n};"]}]}