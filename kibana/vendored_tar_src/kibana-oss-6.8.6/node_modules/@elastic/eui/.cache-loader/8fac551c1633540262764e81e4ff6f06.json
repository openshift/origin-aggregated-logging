{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/accessibility/screen_reader.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/accessibility/screen_reader.tsx","mtime":1565204169586},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiScreenReaderOnly = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = require(\"react\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiScreenReaderOnly = function EuiScreenReaderOnly(_ref) {\n  var children = _ref.children;\n  var classes = (0, _classnames.default)('euiScreenReaderOnly', children.props.className);\n\n  var props = _objectSpread({}, children.props, {\n    className: classes\n  });\n\n  return (0, _react.cloneElement)(children, props);\n};\n\nexports.EuiScreenReaderOnly = EuiScreenReaderOnly;\nEuiScreenReaderOnly.propTypes = {\n  children: _propTypes.default.element.isRequired\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/accessibility/screen_reader.tsx"],"names":["EuiScreenReaderOnly","children","classes","props","className"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAMO,IAAMA,mBAEZ,GAAG,SAFSA,mBAET,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpB,MAAMC,OAAO,GAAG,yBAAW,qBAAX,EAAkCD,QAAQ,CAACE,KAAT,CAAeC,SAAjD,CAAhB;;AAEA,MAAMD,KAAK,qBACNF,QAAQ,CAACE,KADH;AAETC,IAAAA,SAAS,EAAEF;AAFF,IAAX;;AAKA,SAAO,yBAAaD,QAAb,EAAuBE,KAAvB,CAAP;AACD,CAXM","sourcesContent":["import { cloneElement } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nexport var EuiScreenReaderOnly = ({\n  children\n}) => {\n  const classes = classNames('euiScreenReaderOnly', children.props.className);\n  const props = { ...children.props,\n    className: classes\n  };\n  return cloneElement(children, props);\n};\nEuiScreenReaderOnly.propTypes = {\n  children: PropTypes.element.isRequired\n};"]}]}