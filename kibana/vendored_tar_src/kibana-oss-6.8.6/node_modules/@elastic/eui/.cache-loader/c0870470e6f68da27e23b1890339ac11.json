{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/modal/confirm_modal.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/modal/confirm_modal.js","mtime":1565204169512},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfirmModal = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _components = require(\"../../../../src/components\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ConfirmModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConfirmModal, _Component);\n\n  function ConfirmModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConfirmModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConfirmModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isModalVisible: false,\n      isDestroyModalVisible: false,\n      isEmptyModalVisible: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeModal\", function () {\n      _this.setState({\n        isModalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showModal\", function () {\n      _this.setState({\n        isModalVisible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeDestroyModal\", function () {\n      _this.setState({\n        isDestroyModalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showDestroyModal\", function () {\n      _this.setState({\n        isDestroyModalVisible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeEmptyModal\", function () {\n      _this.setState({\n        isEmptyModalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showEmptyModal\", function () {\n      _this.setState({\n        isEmptyModalVisible: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ConfirmModal, [{\n    key: \"render\",\n    value: function render() {\n      var modal;\n\n      if (this.state.isModalVisible) {\n        modal = _react.default.createElement(_components.EuiOverlayMask, null, _react.default.createElement(_components.EuiConfirmModal, {\n          title: \"Do this thing\",\n          onCancel: this.closeModal,\n          onConfirm: this.closeModal,\n          cancelButtonText: \"No, don't do it\",\n          confirmButtonText: \"Yes, do it\",\n          defaultFocusedButton: \"confirm\"\n        }, _react.default.createElement(\"p\", null, \"You\\u2019re about to do something.\"), _react.default.createElement(\"p\", null, \"Are you sure you want to do this?\")));\n      }\n\n      var destroyModal;\n\n      if (this.state.isDestroyModalVisible) {\n        destroyModal = _react.default.createElement(_components.EuiOverlayMask, null, _react.default.createElement(_components.EuiConfirmModal, {\n          title: \"Do this destructive thing\",\n          onCancel: this.closeDestroyModal,\n          onConfirm: this.closeDestroyModal,\n          cancelButtonText: \"No, don't do it\",\n          confirmButtonText: \"Yes, do it\",\n          buttonColor: \"danger\",\n          defaultFocusedButton: \"confirm\"\n        }, _react.default.createElement(\"p\", null, \"You\\u2019re about to destroy something.\"), _react.default.createElement(\"p\", null, \"Are you sure you want to do this?\")));\n      }\n\n      var emptyModal;\n\n      if (this.state.isEmptyModalVisible) {\n        emptyModal = _react.default.createElement(_components.EuiOverlayMask, null, _react.default.createElement(_components.EuiConfirmModal, {\n          title: \"Do this thing\",\n          onCancel: this.closeEmptyModal,\n          onConfirm: this.closeEmptyModal,\n          cancelButtonText: \"No, don't do it\",\n          confirmButtonText: \"Yes, do it\",\n          defaultFocusedButton: \"confirm\"\n        }));\n      }\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_components.EuiButton, {\n        onClick: this.showModal\n      }, \"Show ConfirmModal\"), \"\\xA0\", _react.default.createElement(_components.EuiButton, {\n        onClick: this.showDestroyModal\n      }, \"Show dangerous ConfirmModal\"), \"\\xA0\", _react.default.createElement(_components.EuiButton, {\n        onClick: this.showEmptyModal\n      }, \"Show title-only ConfirmModal\"), modal, destroyModal, emptyModal);\n    }\n  }]);\n\n  return ConfirmModal;\n}(_react.Component);\n\nexports.ConfirmModal = ConfirmModal;\nConfirmModal.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"closeModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"showModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeDestroyModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"showDestroyModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeEmptyModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"showEmptyModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"ConfirmModal\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/modal/confirm_modal.js"],"names":["ConfirmModal","isModalVisible","isDestroyModalVisible","isEmptyModalVisible","setState","modal","state","closeModal","destroyModal","closeDestroyModal","emptyModal","closeEmptyModal","showModal","showDestroyModal","showEmptyModal","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;IAMaA,Y;;;;;;;;;;;;;;;;;;oFACH;AACNC,MAAAA,cAAc,EAAE,KADV;AAENC,MAAAA,qBAAqB,EAAE,KAFjB;AAGNC,MAAAA,mBAAmB,EAAE;AAHf,K;;yFAMK,YAAM;AACjB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,K;;wFAEW,YAAM;AAChB,YAAKG,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,K;;gGAEmB,YAAM;AACxB,YAAKG,QAAL,CAAc;AAAEF,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACD,K;;+FAEkB,YAAM;AACvB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACD,K;;8FAEiB,YAAM;AACtB,YAAKE,QAAL,CAAc;AAAED,QAAAA,mBAAmB,EAAE;AAAvB,OAAd;AACD,K;;6FAEgB,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAED,QAAAA,mBAAmB,EAAE;AAAvB,OAAd;AACD,K;;;;;;;6BAEQ;AACP,UAAIE,KAAJ;;AAEA,UAAI,KAAKC,KAAL,CAAWL,cAAf,EAA+B;AAC7BI,QAAAA,KAAK,GACH,6BAAC,0BAAD,QACE,6BAAC,2BAAD;AACE,UAAA,KAAK,EAAC,eADR;AAEE,UAAA,QAAQ,EAAE,KAAKE,UAFjB;AAGE,UAAA,SAAS,EAAE,KAAKA,UAHlB;AAIE,UAAA,gBAAgB,EAAC,iBAJnB;AAKE,UAAA,iBAAiB,EAAC,YALpB;AAME,UAAA,oBAAoB,EAAC;AANvB,WAOE,6EAPF,EAQE,4EARF,CADF,CADF;AAcD;;AAED,UAAIC,YAAJ;;AAEA,UAAI,KAAKF,KAAL,CAAWJ,qBAAf,EAAsC;AACpCM,QAAAA,YAAY,GACV,6BAAC,0BAAD,QACE,6BAAC,2BAAD;AACE,UAAA,KAAK,EAAC,2BADR;AAEE,UAAA,QAAQ,EAAE,KAAKC,iBAFjB;AAGE,UAAA,SAAS,EAAE,KAAKA,iBAHlB;AAIE,UAAA,gBAAgB,EAAC,iBAJnB;AAKE,UAAA,iBAAiB,EAAC,YALpB;AAME,UAAA,WAAW,EAAC,QANd;AAOE,UAAA,oBAAoB,EAAC;AAPvB,WAQE,kFARF,EASE,4EATF,CADF,CADF;AAeD;;AAED,UAAIC,UAAJ;;AAEA,UAAI,KAAKJ,KAAL,CAAWH,mBAAf,EAAoC;AAClCO,QAAAA,UAAU,GACR,6BAAC,0BAAD,QACE,6BAAC,2BAAD;AACE,UAAA,KAAK,EAAC,eADR;AAEE,UAAA,QAAQ,EAAE,KAAKC,eAFjB;AAGE,UAAA,SAAS,EAAE,KAAKA,eAHlB;AAIE,UAAA,gBAAgB,EAAC,iBAJnB;AAKE,UAAA,iBAAiB,EAAC,YALpB;AAME,UAAA,oBAAoB,EAAC;AANvB,UADF,CADF;AAYD;;AAED,aACE,0CACE,6BAAC,qBAAD;AAAW,QAAA,OAAO,EAAE,KAAKC;AAAzB,6BADF,UAGE,6BAAC,qBAAD;AAAW,QAAA,OAAO,EAAE,KAAKC;AAAzB,uCAHF,UAOE,6BAAC,qBAAD;AAAW,QAAA,OAAO,EAAE,KAAKC;AAAzB,wCAPF,EAUGT,KAVH,EAWGG,YAXH,EAYGE,UAZH,CADF;AAgBD;;;;EAxG+BK,gB","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  EuiButton,\n  EuiConfirmModal,\n  EuiOverlayMask,\n} from '../../../../src/components';\n\nexport class ConfirmModal extends Component {\n  state = {\n    isModalVisible: false,\n    isDestroyModalVisible: false,\n    isEmptyModalVisible: false,\n  };\n\n  closeModal = () => {\n    this.setState({ isModalVisible: false });\n  };\n\n  showModal = () => {\n    this.setState({ isModalVisible: true });\n  };\n\n  closeDestroyModal = () => {\n    this.setState({ isDestroyModalVisible: false });\n  };\n\n  showDestroyModal = () => {\n    this.setState({ isDestroyModalVisible: true });\n  };\n\n  closeEmptyModal = () => {\n    this.setState({ isEmptyModalVisible: false });\n  };\n\n  showEmptyModal = () => {\n    this.setState({ isEmptyModalVisible: true });\n  };\n\n  render() {\n    let modal;\n\n    if (this.state.isModalVisible) {\n      modal = (\n        <EuiOverlayMask>\n          <EuiConfirmModal\n            title=\"Do this thing\"\n            onCancel={this.closeModal}\n            onConfirm={this.closeModal}\n            cancelButtonText=\"No, don't do it\"\n            confirmButtonText=\"Yes, do it\"\n            defaultFocusedButton=\"confirm\">\n            <p>You&rsquo;re about to do something.</p>\n            <p>Are you sure you want to do this?</p>\n          </EuiConfirmModal>\n        </EuiOverlayMask>\n      );\n    }\n\n    let destroyModal;\n\n    if (this.state.isDestroyModalVisible) {\n      destroyModal = (\n        <EuiOverlayMask>\n          <EuiConfirmModal\n            title=\"Do this destructive thing\"\n            onCancel={this.closeDestroyModal}\n            onConfirm={this.closeDestroyModal}\n            cancelButtonText=\"No, don't do it\"\n            confirmButtonText=\"Yes, do it\"\n            buttonColor=\"danger\"\n            defaultFocusedButton=\"confirm\">\n            <p>You&rsquo;re about to destroy something.</p>\n            <p>Are you sure you want to do this?</p>\n          </EuiConfirmModal>\n        </EuiOverlayMask>\n      );\n    }\n\n    let emptyModal;\n\n    if (this.state.isEmptyModalVisible) {\n      emptyModal = (\n        <EuiOverlayMask>\n          <EuiConfirmModal\n            title=\"Do this thing\"\n            onCancel={this.closeEmptyModal}\n            onConfirm={this.closeEmptyModal}\n            cancelButtonText=\"No, don't do it\"\n            confirmButtonText=\"Yes, do it\"\n            defaultFocusedButton=\"confirm\"\n          />\n        </EuiOverlayMask>\n      );\n    }\n\n    return (\n      <div>\n        <EuiButton onClick={this.showModal}>Show ConfirmModal</EuiButton>\n        &nbsp;\n        <EuiButton onClick={this.showDestroyModal}>\n          Show dangerous ConfirmModal\n        </EuiButton>\n        &nbsp;\n        <EuiButton onClick={this.showEmptyModal}>\n          Show title-only ConfirmModal\n        </EuiButton>\n        {modal}\n        {destroyModal}\n        {emptyModal}\n      </div>\n    );\n  }\n}\n"]}]}