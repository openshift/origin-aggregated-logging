{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/filter_group/filter_button.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/filter_group/filter_button.js","mtime":1565204169691},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiFilterButton = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _i18n = require(\"../i18n\");\n\nvar _notification_badge = require(\"../badge/notification_badge\");\n\nvar _button_empty = require(\"../button/button_empty\");\n\nvar _icon = require(\"../icon\");\n\nvar _inner_text = require(\"../inner_text\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar EuiFilterButton = function EuiFilterButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      iconType = _ref.iconType,\n      iconSide = _ref.iconSide,\n      color = _ref.color,\n      hasActiveFilters = _ref.hasActiveFilters,\n      numFilters = _ref.numFilters,\n      numActiveFilters = _ref.numActiveFilters,\n      isDisabled = _ref.isDisabled,\n      isSelected = _ref.isSelected,\n      type = _ref.type,\n      grow = _ref.grow,\n      noDivider = _ref.noDivider,\n      withNext = _ref.withNext,\n      textProps = _ref.textProps,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"iconType\", \"iconSide\", \"color\", \"hasActiveFilters\", \"numFilters\", \"numActiveFilters\", \"isDisabled\", \"isSelected\", \"type\", \"grow\", \"noDivider\", \"withNext\", \"textProps\"]);\n\n  // != instead of !== to allow for null and undefined\n  var numFiltersDefined = numFilters != null;\n  var classes = (0, _classnames.default)('euiFilterButton', {\n    'euiFilterButton-isSelected': isSelected,\n    'euiFilterButton-hasActiveFilters': hasActiveFilters,\n    'euiFilterButton-hasNotification': numFiltersDefined,\n    'euiFilterButton--hasIcon': iconType,\n    'euiFilterButton--noGrow': !grow,\n    'euiFilterButton--withNext': noDivider || withNext\n  }, className);\n  var buttonTextClassNames = (0, _classnames.default)( // 'euiFilterButton__textShift',\n  {\n    'euiFilterButton__text-hasNotification': numFiltersDefined\n  }, textProps && textProps.className);\n  var dataText;\n\n  if (typeof children === 'string') {\n    dataText = children;\n  }\n\n  var _useInnerText = (0, _inner_text.useInnerText)(),\n      _useInnerText2 = _slicedToArray(_useInnerText, 2),\n      ref = _useInnerText2[0],\n      innerText = _useInnerText2[1];\n\n  var buttonContents = _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"span\", {\n    ref: ref,\n    className: \"euiFilterButton__textShift\",\n    \"data-text\": dataText || innerText,\n    title: dataText || innerText\n  }, children), numFiltersDefined && _react.default.createElement(_i18n.EuiI18n, {\n    token: \"euiFilterButton.filterBadge\",\n    values: {\n      count: numActiveFilters || numFilters,\n      hasActiveFilters: hasActiveFilters\n    },\n    default: function _default(_ref2) {\n      var count = _ref2.count,\n          hasActiveFilters = _ref2.hasActiveFilters;\n      return \"\".concat(count, \" \").concat(hasActiveFilters ? 'active' : 'available', \" filters\");\n    }\n  }, function (filterBadge) {\n    return _react.default.createElement(_notification_badge.EuiNotificationBadge, {\n      className: \"euiFilterButton__notification\",\n      size: \"m\",\n      \"aria-label\": filterBadge,\n      color: isDisabled || !hasActiveFilters ? 'subdued' : 'accent'\n    }, numActiveFilters || numFilters);\n  }));\n\n  return _react.default.createElement(_button_empty.EuiButtonEmpty, _extends({\n    className: classes,\n    color: color,\n    isDisabled: isDisabled,\n    iconSide: iconSide,\n    iconType: iconType,\n    type: type,\n    textProps: _objectSpread({}, textProps, {\n      className: buttonTextClassNames\n    })\n  }, rest), buttonContents);\n};\n\nexports.EuiFilterButton = EuiFilterButton;\nEuiFilterButton.propTypes = {\n  children: _propTypes.default.node,\n  className: _propTypes.default.string,\n  onClick: _propTypes.default.func,\n\n  /**\n   * Use any one of our icons\n   */\n  iconType: _icon.IconPropType,\n  iconSide: _propTypes.default.oneOf(_button_empty.ICON_SIDES),\n  color: _propTypes.default.oneOf(_button_empty.COLORS),\n\n  /**\n   * Bolds the button if true\n   */\n  hasActiveFilters: _propTypes.default.bool,\n\n  /**\n   * Pass the total number of filters available and it will\n   * add a subdued notification badge showing the number\n   */\n  numFilters: _propTypes.default.number,\n\n  /**\n   * Pass the number of selected filters and it will\n   * add a bright notification badge showing the number\n   */\n  numActiveFilters: _propTypes.default.number,\n\n  /**\n   * Applies a visual state to the button useful when using with a popover.\n   */\n  isSelected: _propTypes.default.bool,\n  isDisabled: _propTypes.default.bool,\n\n  /**\n   * Defines html button input type\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * Should the button grow to fill it's container, best used for dropdown buttons\n   */\n  grow: _propTypes.default.bool,\n\n  /**\n   * Remove border after button, good for opposite filters\n   */\n  withNext: _propTypes.default.bool,\n\n  /**\n   * _DEPRECATED: use `withNext`_\n   * Remove border after button, good for opposite filters\n   */\n  noDivider: _propTypes.default.bool\n};\nEuiFilterButton.defaultProps = {\n  type: 'button',\n  iconSide: 'right',\n  color: 'text',\n  grow: true\n};\nEuiFilterButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiFilterButton\",\n  \"props\": {\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Defines html button input type\"\n    },\n    \"iconSide\": {\n      \"defaultValue\": {\n        \"value\": \"'right'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"computed\": true,\n        \"value\": \"ICON_SIDES\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'text'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"computed\": true,\n        \"value\": \"COLORS\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"grow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Should the button grow to fill it's container, best used for dropdown buttons\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"iconType\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"IconPropType\"\n      },\n      \"required\": false,\n      \"description\": \"Use any one of our icons\"\n    },\n    \"hasActiveFilters\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Bolds the button if true\"\n    },\n    \"numFilters\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Pass the total number of filters available and it will\\nadd a subdued notification badge showing the number\"\n    },\n    \"numActiveFilters\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Pass the number of selected filters and it will\\nadd a bright notification badge showing the number\"\n    },\n    \"isSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Applies a visual state to the button useful when using with a popover.\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"withNext\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Remove border after button, good for opposite filters\"\n    },\n    \"noDivider\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `withNext`_\\nRemove border after button, good for opposite filters\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/filter_group/filter_button.js"],"names":["EuiFilterButton","children","className","iconType","iconSide","color","hasActiveFilters","numFilters","numActiveFilters","isDisabled","isSelected","type","grow","noDivider","withNext","textProps","rest","numFiltersDefined","classes","buttonTextClassNames","dataText","ref","innerText","buttonContents","count","filterBadge","propTypes","PropTypes","node","string","onClick","func","IconPropType","oneOf","ICON_SIDES","COLORS","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiI18n } from '../i18n';\nimport { EuiNotificationBadge } from '../badge/notification_badge';\nimport { COLORS, ICON_SIDES, EuiButtonEmpty } from '../button/button_empty';\n\nimport { IconPropType } from '../icon';\n\nimport { useInnerText } from '../inner_text';\n\nexport const EuiFilterButton = ({\n  children,\n  className,\n  iconType,\n  iconSide,\n  color,\n  hasActiveFilters,\n  numFilters,\n  numActiveFilters,\n  isDisabled,\n  isSelected,\n  type,\n  grow,\n  noDivider,\n  withNext,\n  textProps,\n  ...rest\n}) => {\n  // != instead of !== to allow for null and undefined\n  const numFiltersDefined = numFilters != null;\n\n  const classes = classNames(\n    'euiFilterButton',\n    {\n      'euiFilterButton-isSelected': isSelected,\n      'euiFilterButton-hasActiveFilters': hasActiveFilters,\n      'euiFilterButton-hasNotification': numFiltersDefined,\n      'euiFilterButton--hasIcon': iconType,\n      'euiFilterButton--noGrow': !grow,\n      'euiFilterButton--withNext': noDivider || withNext,\n    },\n    className\n  );\n\n  const buttonTextClassNames = classNames(\n    // 'euiFilterButton__textShift',\n    { 'euiFilterButton__text-hasNotification': numFiltersDefined },\n    textProps && textProps.className\n  );\n\n  let dataText;\n  if (typeof children === 'string') {\n    dataText = children;\n  }\n\n  const [ref, innerText] = useInnerText();\n  const buttonContents = (\n    <Fragment>\n      <span\n        ref={ref}\n        className=\"euiFilterButton__textShift\"\n        data-text={dataText || innerText}\n        title={dataText || innerText}>\n        {children}\n      </span>\n\n      {numFiltersDefined && (\n        <EuiI18n\n          token=\"euiFilterButton.filterBadge\"\n          values={{ count: numActiveFilters || numFilters, hasActiveFilters }}\n          default={({ count, hasActiveFilters }) =>\n            `${count} ${hasActiveFilters ? 'active' : 'available'} filters`\n          }>\n          {filterBadge => (\n            <EuiNotificationBadge\n              className=\"euiFilterButton__notification\"\n              size=\"m\"\n              aria-label={filterBadge}\n              color={isDisabled || !hasActiveFilters ? 'subdued' : 'accent'}>\n              {numActiveFilters || numFilters}\n            </EuiNotificationBadge>\n          )}\n        </EuiI18n>\n      )}\n    </Fragment>\n  );\n\n  return (\n    <EuiButtonEmpty\n      className={classes}\n      color={color}\n      isDisabled={isDisabled}\n      iconSide={iconSide}\n      iconType={iconType}\n      type={type}\n      textProps={{ ...textProps, className: buttonTextClassNames }}\n      {...rest}>\n      {buttonContents}\n    </EuiButtonEmpty>\n  );\n};\n\nEuiFilterButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  /**\n   * Use any one of our icons\n   */\n  iconType: IconPropType,\n  iconSide: PropTypes.oneOf(ICON_SIDES),\n  color: PropTypes.oneOf(COLORS),\n  /**\n   * Bolds the button if true\n   */\n  hasActiveFilters: PropTypes.bool,\n  /**\n   * Pass the total number of filters available and it will\n   * add a subdued notification badge showing the number\n   */\n  numFilters: PropTypes.number,\n  /**\n   * Pass the number of selected filters and it will\n   * add a bright notification badge showing the number\n   */\n  numActiveFilters: PropTypes.number,\n  /**\n   * Applies a visual state to the button useful when using with a popover.\n   */\n  isSelected: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  /**\n   * Defines html button input type\n   */\n  type: PropTypes.string,\n  /**\n   * Should the button grow to fill it's container, best used for dropdown buttons\n   */\n  grow: PropTypes.bool,\n  /**\n   * Remove border after button, good for opposite filters\n   */\n  withNext: PropTypes.bool,\n  /**\n   * _DEPRECATED: use `withNext`_\n   * Remove border after button, good for opposite filters\n   */\n  noDivider: PropTypes.bool,\n};\n\nEuiFilterButton.defaultProps = {\n  type: 'button',\n  iconSide: 'right',\n  color: 'text',\n  grow: true,\n};\n"]}]}