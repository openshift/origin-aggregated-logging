{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/empty_prompt/empty_prompt_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/empty_prompt/empty_prompt_example.js","mtime":1565204169466},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmptyPromptExample = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _empty_prompt = _interopRequireDefault(require(\"./empty_prompt\"));\n\nvar _custom = _interopRequireDefault(require(\"./custom\"));\n\nvar _simple = _interopRequireDefault(require(\"./simple\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar emptyPromptSource = require('!!raw-loader!./empty_prompt');\n\nvar emptyPromptHtml = (0, _services.renderToHtml)(_empty_prompt.default);\n\nvar customSource = require('!!raw-loader!./custom');\n\nvar customHtml = (0, _services.renderToHtml)(_custom.default);\n\nvar simpleSource = require('!!raw-loader!./simple');\n\nvar simpleHtml = (0, _services.renderToHtml)(_simple.default);\nvar EmptyPromptExample = {\n  title: 'EmptyPrompt',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: emptyPromptSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: emptyPromptHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the \", _react.default.createElement(_components2.EuiCode, null, \"EuiEmptyPrompt\"), \" as a placeholder for an empty table or list of content.\"),\n    props: {\n      EuiEmptyPrompt: _components2.EuiEmptyPrompt\n    },\n    demo: _react.default.createElement(_empty_prompt.default, null)\n  }, {\n    title: 'Custom sizes and colors',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: customSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: customHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can control sizes and colors with the \", _react.default.createElement(_components2.EuiCode, null, \"iconColor\"), \", and \", _react.default.createElement(_components2.EuiCode, null, \"titleSize\"), \" props.\"),\n    props: {\n      EuiEmptyPrompt: _components2.EuiEmptyPrompt\n    },\n    demo: _react.default.createElement(_custom.default, null)\n  }, {\n    title: 'Less content, more actions',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: simpleSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: simpleHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"You can remove parts of the prompt to simplify it, if you wish.\"), _react.default.createElement(\"p\", null, \"You can also provide an array of multiple actions. Be sure to list primary actions first and secondary actions last.\")),\n    props: {\n      EuiEmptyPrompt: _components2.EuiEmptyPrompt\n    },\n    demo: _react.default.createElement(_simple.default, null)\n  }]\n};\nexports.EmptyPromptExample = EmptyPromptExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/empty_prompt/empty_prompt_example.js"],"names":["emptyPromptSource","require","emptyPromptHtml","EmptyPrompt","customSource","customHtml","Custom","simpleSource","simpleHtml","Simple","EmptyPromptExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiEmptyPrompt","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAIA;;;;;;AAPA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMC,eAAe,GAAG,4BAAaC,qBAAb,CAAxB;;AAGA,IAAMC,YAAY,GAAGH,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMI,UAAU,GAAG,4BAAaC,eAAb,CAAnB;;AAGA,IAAMC,YAAY,GAAGN,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMO,UAAU,GAAG,4BAAaC,eAAb,CAAnB;AAEO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,KAAK,EAAE,aADyB;AAEhCC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEjB;AAFR,KADM,EAKN;AACEc,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEf;AAFR,KALM,CADV;AAWEiB,IAAAA,IAAI,EACF,oDACU,6BAAC,oBAAD,yBADV,6DAZJ;AAiBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KAjBT;AAkBEC,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AAlBR,GADQ,EAqBR;AACEX,IAAAA,KAAK,EAAE,yBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEb;AAFR,KADM,EAKN;AACEU,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,sFAC4C,6BAAC,oBAAD,oBAD5C,YAEQ,6BAAC,oBAAD,oBAFR,YAbJ;AAkBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KAlBT;AAmBEC,IAAAA,IAAI,EAAE,6BAAC,eAAD;AAnBR,GArBQ,EA0CR;AACEX,IAAAA,KAAK,EAAE,4BADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,6BAAC,eAAD,QACE,0GADF,EAEE,+JAFF,CAbJ;AAqBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KArBT;AAsBEC,IAAAA,IAAI,EAAE,6BAAC,eAAD;AAtBR,GA1CQ;AAFsB,CAA3B","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiEmptyPrompt } from '../../../../src/components';\n\nimport EmptyPrompt from './empty_prompt';\nconst emptyPromptSource = require('!!raw-loader!./empty_prompt');\nconst emptyPromptHtml = renderToHtml(EmptyPrompt);\n\nimport Custom from './custom';\nconst customSource = require('!!raw-loader!./custom');\nconst customHtml = renderToHtml(Custom);\n\nimport Simple from './simple';\nconst simpleSource = require('!!raw-loader!./simple');\nconst simpleHtml = renderToHtml(Simple);\n\nexport const EmptyPromptExample = {\n  title: 'EmptyPrompt',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: emptyPromptSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: emptyPromptHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the <EuiCode>EuiEmptyPrompt</EuiCode> as a placeholder for an\n          empty table or list of content.\n        </p>\n      ),\n      props: { EuiEmptyPrompt },\n      demo: <EmptyPrompt />,\n    },\n    {\n      title: 'Custom sizes and colors',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: customSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: customHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can control sizes and colors with the <EuiCode>iconColor</EuiCode>\n          , and <EuiCode>titleSize</EuiCode> props.\n        </p>\n      ),\n      props: { EuiEmptyPrompt },\n      demo: <Custom />,\n    },\n    {\n      title: 'Less content, more actions',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: simpleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: simpleHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>You can remove parts of the prompt to simplify it, if you wish.</p>\n          <p>\n            You can also provide an array of multiple actions. Be sure to list\n            primary actions first and secondary actions last.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiEmptyPrompt },\n      demo: <Simple />,\n    },\n  ],\n};\n"]}]}