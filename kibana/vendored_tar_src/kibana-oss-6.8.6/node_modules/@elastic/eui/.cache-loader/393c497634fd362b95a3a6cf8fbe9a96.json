{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/basic/basic.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/basic/basic.js","mtime":1565204169550},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Table = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _format = require(\"../../../../../src/services/format\");\n\nvar _data_store = require(\"../data_store\");\n\nvar _components = require(\"../../../../../src/components\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\nExample user object:\n\n{\n  id: '1',\n  firstName: 'john',\n  lastName: 'doe',\n  github: 'johndoe',\n  dateOfBirth: Date.now(),\n  nationality: 'NL',\n  online: true\n}\n\nExample country object:\n\n{\n  code: 'NL',\n  name: 'Netherlands',\n  flag: 'ðŸ‡³ðŸ‡±'\n}\n*/\nvar store = (0, _data_store.createDataStore)();\n\nvar Table = function Table() {\n  var columns = [{\n    field: 'firstName',\n    name: 'First Name',\n    sortable: true,\n    'data-test-subj': 'firstNameCell',\n    mobileOptions: {\n      render: function render(item) {\n        return _react.default.createElement(\"span\", null, item.firstName, ' ', _react.default.createElement(_components.EuiLink, {\n          href: \"#\",\n          target: \"_blank\"\n        }, item.lastName));\n      },\n      header: false,\n      truncateText: false,\n      enlarge: true,\n      fullWidth: true\n    }\n  }, {\n    field: 'lastName',\n    name: 'Last Name',\n    truncateText: true,\n    render: function render(name) {\n      return _react.default.createElement(_components.EuiLink, {\n        href: \"#\",\n        target: \"_blank\"\n      }, name);\n    },\n    mobileOptions: {\n      show: false\n    }\n  }, {\n    field: 'github',\n    name: 'Github'\n  }, {\n    field: 'dateOfBirth',\n    name: 'Date of Birth',\n    dataType: 'date',\n    render: function render(date) {\n      return (0, _format.formatDate)(date, 'dobLong');\n    }\n  }, {\n    field: 'nationality',\n    name: 'Nationality',\n    render: function render(countryCode) {\n      var country = store.getCountry(countryCode);\n      return \"\".concat(country.flag, \" \").concat(country.name);\n    }\n  }, {\n    field: 'online',\n    name: 'Online',\n    dataType: 'boolean',\n    render: function render(online) {\n      var color = online ? 'success' : 'danger';\n      var label = online ? 'Online' : 'Offline';\n      return _react.default.createElement(_components.EuiHealth, {\n        color: color\n      }, label);\n    }\n  }];\n  var items = store.users.filter(function (user, index) {\n    return index < 10;\n  });\n\n  var getRowProps = function getRowProps(item) {\n    var id = item.id;\n    return {\n      'data-test-subj': \"row-\".concat(id),\n      className: 'customRowClass',\n      onClick: function onClick() {\n        return console.log(\"Clicked row \".concat(id));\n      }\n    };\n  };\n\n  var getCellProps = function getCellProps(item, column) {\n    var id = item.id;\n    var field = column.field;\n    return {\n      className: 'customCellClass',\n      'data-test-subj': \"cell-\".concat(id, \"-\").concat(field),\n      textOnly: true\n    };\n  };\n\n  return _react.default.createElement(_components.EuiBasicTable, {\n    items: items,\n    columns: columns,\n    rowProps: getRowProps,\n    cellProps: getCellProps\n  });\n};\n\nexports.Table = Table;\nTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Table\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/basic/basic.js"],"names":["store","Table","columns","field","name","sortable","mobileOptions","render","item","firstName","lastName","header","truncateText","enlarge","fullWidth","show","dataType","date","countryCode","country","getCountry","flag","online","color","label","items","users","filter","user","index","getRowProps","id","className","onClick","console","log","getCellProps","column","textOnly"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { formatDate } from '../../../../../src/services/format';\nimport { createDataStore } from '../data_store';\n\nimport {\n  EuiBasicTable,\n  EuiLink,\n  EuiHealth,\n} from '../../../../../src/components';\n\n/*\nExample user object:\n\n{\n  id: '1',\n  firstName: 'john',\n  lastName: 'doe',\n  github: 'johndoe',\n  dateOfBirth: Date.now(),\n  nationality: 'NL',\n  online: true\n}\n\nExample country object:\n\n{\n  code: 'NL',\n  name: 'Netherlands',\n  flag: 'ðŸ‡³ðŸ‡±'\n}\n*/\n\nconst store = createDataStore();\n\nexport const Table = () => {\n  const columns = [\n    {\n      field: 'firstName',\n      name: 'First Name',\n      sortable: true,\n      'data-test-subj': 'firstNameCell',\n      mobileOptions: {\n        render: item => (\n          <span>\n            {item.firstName}{' '}\n            <EuiLink href=\"#\" target=\"_blank\">\n              {item.lastName}\n            </EuiLink>\n          </span>\n        ),\n        header: false,\n        truncateText: false,\n        enlarge: true,\n        fullWidth: true,\n      },\n    },\n    {\n      field: 'lastName',\n      name: 'Last Name',\n      truncateText: true,\n      render: name => (\n        <EuiLink href=\"#\" target=\"_blank\">\n          {name}\n        </EuiLink>\n      ),\n      mobileOptions: {\n        show: false,\n      },\n    },\n    {\n      field: 'github',\n      name: 'Github',\n    },\n    {\n      field: 'dateOfBirth',\n      name: 'Date of Birth',\n      dataType: 'date',\n      render: date => formatDate(date, 'dobLong'),\n    },\n    {\n      field: 'nationality',\n      name: 'Nationality',\n      render: countryCode => {\n        const country = store.getCountry(countryCode);\n        return `${country.flag} ${country.name}`;\n      },\n    },\n    {\n      field: 'online',\n      name: 'Online',\n      dataType: 'boolean',\n      render: online => {\n        const color = online ? 'success' : 'danger';\n        const label = online ? 'Online' : 'Offline';\n        return <EuiHealth color={color}>{label}</EuiHealth>;\n      },\n    },\n  ];\n\n  const items = store.users.filter((user, index) => index < 10);\n\n  const getRowProps = item => {\n    const { id } = item;\n    return {\n      'data-test-subj': `row-${id}`,\n      className: 'customRowClass',\n      onClick: () => console.log(`Clicked row ${id}`),\n    };\n  };\n\n  const getCellProps = (item, column) => {\n    const { id } = item;\n    const { field } = column;\n    return {\n      className: 'customCellClass',\n      'data-test-subj': `cell-${id}-${field}`,\n      textOnly: true,\n    };\n  };\n\n  return (\n    <EuiBasicTable\n      items={items}\n      columns={columns}\n      rowProps={getRowProps}\n      cellProps={getCellProps}\n    />\n  );\n};\n"]}]}