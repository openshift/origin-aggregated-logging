{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/color_picker/color_picker.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/color_picker/color_picker.js","mtime":1565204169636},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiColorPicker = void 0;\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _accessibility = require(\"../accessibility\");\n\nvar _color_picker_swatch = require(\"./color_picker_swatch\");\n\nvar _focus_trap = require(\"../focus_trap\");\n\nvar _flex = require(\"../flex\");\n\nvar _form = require(\"../form\");\n\nvar _i18n = require(\"../i18n\");\n\nvar _popover = require(\"../popover\");\n\nvar _services = require(\"../../services\");\n\nvar _hue = require(\"./hue\");\n\nvar _saturation = require(\"./saturation\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar EuiColorPicker = function EuiColorPicker(_ref) {\n  var button = _ref.button,\n      className = _ref.className,\n      color = _ref.color,\n      _ref$compressed = _ref.compressed,\n      compressed = _ref$compressed === void 0 ? false : _ref$compressed,\n      disabled = _ref.disabled,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      id = _ref.id,\n      isInvalid = _ref.isInvalid,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'default' : _ref$mode,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$swatches = _ref.swatches,\n      swatches = _ref$swatches === void 0 ? _services.VISUALIZATION_COLORS : _ref$swatches,\n      popoverZIndex = _ref.popoverZIndex;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isColorSelectorShown = _useState2[0],\n      setIsColorSelectorShown = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(color ? (0, _services.hexToHsv)(color) : (0, _services.hexToHsv)('')),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorAsHsv = _useState4[0],\n      setColorAsHsv = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(color),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastHex = _useState6[0],\n      setLastHex = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputRef = _useState8[0],\n      setInputRef = _useState8[1]; // Ideally this is uses `useRef`, but `EuiFieldText` isn't ready for that\n\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      popoverShouldOwnFocus = _useState10[0],\n      setPopoverShouldOwnFocus = _useState10[1];\n\n  var satruationRef = (0, _react.useRef)(null);\n  var swatchRef = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    // Mimics `componentDidMount` and `componentDidUpdate`\n    if (lastHex !== color) {\n      // Only react to outside changes\n      var newColorAsHsv = color ? (0, _services.hexToHsv)(color) : (0, _services.hexToHsv)('');\n      setColorAsHsv(newColorAsHsv);\n    }\n  }, [color]);\n  var classes = (0, _classnames.default)('euiColorPicker', className);\n  var panelClasses = (0, _classnames.default)('euiColorPicker__popoverPanel', {\n    'euiColorPicker__popoverPanel--pickerOnly': mode === 'picker',\n    'euiColorPicker__popoverPanel--customButton': button\n  });\n  var swatchClass = 'euiColorPicker__swatchSelect';\n  var testSubjAnchor = 'colorPickerAnchor';\n  var testSubjPopover = 'colorPickerPopover';\n\n  var handleOnChange = function handleOnChange(hex) {\n    setLastHex(hex);\n    onChange(hex);\n  };\n\n  var closeColorSelector = function closeColorSelector() {\n    var shouldDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    if (shouldDelay) {\n      setTimeout(function () {\n        return setIsColorSelectorShown(false);\n      });\n    } else {\n      setIsColorSelectorShown(false);\n    }\n  };\n\n  var showColorSelector = function showColorSelector() {\n    var shouldFocusInside = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (isColorSelectorShown || readOnly) return;\n\n    if (onFocus) {\n      onFocus();\n    }\n\n    setPopoverShouldOwnFocus(shouldFocusInside);\n    setIsColorSelectorShown(true);\n  };\n\n  var handleToggle = function handleToggle() {\n    if (isColorSelectorShown) {\n      closeColorSelector();\n    } else {\n      showColorSelector(true);\n    }\n  };\n\n  var handleFinalSelection = function handleFinalSelection() {\n    // When the trigger is an input, focus the input so you can adjust\n    if (inputRef) {\n      inputRef.focus();\n    }\n\n    closeColorSelector(true);\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(e) {\n    if (e.keyCode === _services.keyCodes.ENTER) {\n      if (isColorSelectorShown) {\n        handleFinalSelection();\n      } else {\n        showColorSelector();\n      }\n    }\n  };\n\n  var handleInputActivity = function handleInputActivity(e) {\n    if (e.keyCode === _services.keyCodes.ENTER) {\n      e.preventDefault();\n      handleToggle();\n    } else if (!e.keyCode) {\n      showColorSelector();\n    }\n  };\n\n  var handleToggleOnKeyDown = function handleToggleOnKeyDown(e) {\n    if (e.keyCode === _services.keyCodes.DOWN) {\n      e.preventDefault();\n\n      if (isColorSelectorShown) {\n        var nextFocusEl = mode !== 'swatch' ? satruationRef : swatchRef;\n\n        if (nextFocusEl.current) {\n          nextFocusEl.current.focus();\n        }\n      } else {\n        showColorSelector(true);\n      }\n    }\n  };\n\n  var handleColorInput = function handleColorInput(e) {\n    handleOnChange(e.target.value);\n\n    if ((0, _services.isValidHex)(e.target.value)) {\n      setColorAsHsv((0, _services.hexToHsv)(e.target.value));\n    }\n  };\n\n  var handleColorSelection = function handleColorSelection(color) {\n    var h = colorAsHsv.h;\n    var hue = h ? h : 1;\n\n    var newHsv = _objectSpread({}, color, {\n      h: hue\n    });\n\n    handleOnChange((0, _services.hsvToHex)(newHsv));\n    setColorAsHsv(newHsv);\n  };\n\n  var handleHueSelection = function handleHueSelection(hue) {\n    var s = colorAsHsv.s,\n        v = colorAsHsv.v;\n    var satVal = s && v ? {\n      s: s,\n      v: v\n    } : {\n      s: 1,\n      v: 1\n    };\n\n    var newHsv = _objectSpread({}, satVal, {\n      h: hue\n    });\n\n    handleOnChange((0, _services.hsvToHex)(newHsv));\n    setColorAsHsv(newHsv);\n  };\n\n  var handleSwatchSelection = function handleSwatchSelection(color) {\n    handleOnChange(color);\n    setColorAsHsv((0, _services.hexToHsv)(color));\n    handleFinalSelection();\n  };\n\n  var buttonOrInput;\n\n  if (button) {\n    buttonOrInput = (0, _react.cloneElement)(button, {\n      onClick: handleToggle,\n      id: id,\n      disabled: disabled,\n      'data-test-subj': testSubjAnchor\n    });\n  } else {\n    var showColor = color && (0, _services.isValidHex)(color);\n    buttonOrInput = _react.default.createElement(_form.EuiFormControlLayout, {\n      icon: !readOnly ? {\n        type: 'arrowDown',\n        side: 'right'\n      } : null,\n      readOnly: readOnly,\n      fullWidth: fullWidth,\n      compressed: compressed,\n      onKeyDown: handleToggleOnKeyDown\n    }, _react.default.createElement(\"div\", {\n      // Used to pass the chosen color through to form layout SVG using currentColor\n      style: {\n        color: showColor ? color : undefined\n      }\n    }, _react.default.createElement(_i18n.EuiI18n, {\n      tokens: ['euiColorPicker.openLabel', 'euiColorPicker.closeLabel'],\n      defaults: ['Press the escape key to close the popover', 'Press the down key to open a popover containing color options']\n    }, function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          openLabel = _ref3[0],\n          closeLabel = _ref3[1];\n\n      return _react.default.createElement(_form.EuiFieldText, {\n        onClick: handleInputActivity,\n        onKeyDown: handleInputActivity,\n        value: color ? color.toUpperCase() : '',\n        placeholder: !color ? 'Transparent' : undefined,\n        id: id,\n        onChange: handleColorInput,\n        maxLength: 7,\n        icon: showColor ? 'swatchInput' : 'stopSlash',\n        inputRef: setInputRef,\n        isInvalid: isInvalid,\n        compressed: compressed,\n        disabled: disabled,\n        readOnly: readOnly,\n        fullWidth: fullWidth,\n        autoComplete: \"off\",\n        \"data-test-subj\": testSubjAnchor,\n        \"aria-label\": isColorSelectorShown ? openLabel : closeLabel\n      });\n    })));\n  }\n\n  return _react.default.createElement(_popover.EuiPopover, {\n    ownFocus: popoverShouldOwnFocus,\n    button: buttonOrInput,\n    isOpen: isColorSelectorShown,\n    closePopover: handleFinalSelection,\n    zIndex: popoverZIndex,\n    panelClassName: panelClasses,\n    display: button ? 'inlineBlock' : 'block',\n    attachToAnchor: button ? false : true,\n    anchorPosition: \"downLeft\",\n    panelPaddingSize: \"s\"\n  }, _react.default.createElement(\"div\", {\n    className: classes,\n    \"data-test-subj\": testSubjPopover\n  }, _react.default.createElement(_focus_trap.EuiFocusTrap, {\n    clickOutsideDisables: true\n  }, _react.default.createElement(_accessibility.EuiScreenReaderOnly, null, _react.default.createElement(\"p\", {\n    \"aria-live\": \"polite\"\n  }, _react.default.createElement(_i18n.EuiI18n, {\n    token: \"euiColorPicker.screenReaderAnnouncement\",\n    default: \"A popup with a range of selectable colors opened. Tab forward to cycle through colors choices or press escape to close this popup.\"\n  }))), mode !== 'swatch' && _react.default.createElement(\"div\", {\n    onKeyDown: handleOnKeyDown\n  }, _react.default.createElement(_saturation.EuiSaturation, {\n    id: id,\n    color: _typeof(colorAsHsv) === 'object' ? colorAsHsv : undefined,\n    hex: color,\n    onChange: handleColorSelection,\n    ref: satruationRef\n  }), _react.default.createElement(_hue.EuiHue, {\n    id: id,\n    hue: _typeof(colorAsHsv) === 'object' ? colorAsHsv.h : undefined,\n    hex: color,\n    onChange: handleHueSelection\n  })), mode !== 'picker' && _react.default.createElement(_flex.EuiFlexGroup, {\n    wrap: true,\n    responsive: false,\n    gutterSize: \"s\",\n    role: \"listbox\"\n  }, swatches.map(function (swatch, index) {\n    return _react.default.createElement(_flex.EuiFlexItem, {\n      grow: false,\n      key: swatch\n    }, _react.default.createElement(_i18n.EuiI18n, {\n      token: \"euiColorPicker.swatchAriaLabel\",\n      values: {\n        swatch: swatch\n      },\n      default: \"Select {swatch} as the color\"\n    }, function (swatchAriaLabel) {\n      return _react.default.createElement(_color_picker_swatch.EuiColorPickerSwatch, {\n        className: swatchClass,\n        color: swatch,\n        onClick: function onClick() {\n          return handleSwatchSelection(swatch);\n        },\n        \"aria-label\": swatchAriaLabel,\n        role: \"option\",\n        ref: index === 0 ? swatchRef : undefined\n      });\n    }));\n  })))));\n};\n\nexports.EuiColorPicker = EuiColorPicker;\nEuiColorPicker.propTypes = {\n  /**\n   *  Custom element to use instead of text input\n   */\n  button: _propTypes.default.node,\n  className: _propTypes.default.string,\n\n  /**\n   *  Hex string (3 or 6 character). Empty string will register as 'transparent'\n   */\n  color: _propTypes.default.string,\n\n  /**\n   *  Use the compressed style for EuiFieldText\n   */\n  compressed: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  id: _propTypes.default.string,\n\n  /**\n   *  Custom validation flag\n   */\n  isInvalid: _propTypes.default.bool,\n\n  /**\n   * Choose between swatches with gradient picker (default), swatches only, or gradient picker only.\n   */\n  mode: _propTypes.default.oneOf(['default', 'swatch', 'picker']),\n\n  /**\n   * Function called when the popover closes\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   *  (hex: string) => void\n   */\n  onChange: _propTypes.default.func.isRequired,\n\n  /**\n   * Function called when the popover opens\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   *  Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\n   */\n  swatches: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\n   *  Custom z-index for the popover\n   */\n  popoverZIndex: _propTypes.default.number\n};\nEuiColorPicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiColorPicker\",\n  \"props\": {\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Use the compressed style for EuiFieldText\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"mode\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'swatch'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'picker'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Choose between swatches with gradient picker (default), swatches only, or gradient picker only.\"\n    },\n    \"readOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"swatches\": {\n      \"defaultValue\": {\n        \"value\": \"VISUALIZATION_COLORS\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\"\n    },\n    \"button\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Custom element to use instead of text input\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Hex string (3 or 6 character). Empty string will register as 'transparent'\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Custom validation flag\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function called when the popover closes\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"(hex: string) => void\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function called when the popover opens\"\n    },\n    \"popoverZIndex\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Custom z-index for the popover\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/color_picker/color_picker.js"],"names":["EuiColorPicker","button","className","color","compressed","disabled","fullWidth","id","isInvalid","mode","onBlur","onChange","onFocus","readOnly","swatches","VISUALIZATION_COLORS","popoverZIndex","isColorSelectorShown","setIsColorSelectorShown","colorAsHsv","setColorAsHsv","lastHex","setLastHex","inputRef","setInputRef","popoverShouldOwnFocus","setPopoverShouldOwnFocus","satruationRef","swatchRef","newColorAsHsv","classes","panelClasses","swatchClass","testSubjAnchor","testSubjPopover","handleOnChange","hex","closeColorSelector","shouldDelay","setTimeout","showColorSelector","shouldFocusInside","handleToggle","handleFinalSelection","focus","handleOnKeyDown","e","keyCode","keyCodes","ENTER","handleInputActivity","preventDefault","handleToggleOnKeyDown","DOWN","nextFocusEl","current","handleColorInput","target","value","handleColorSelection","h","hue","newHsv","handleHueSelection","s","v","satVal","handleSwatchSelection","buttonOrInput","onClick","showColor","type","side","undefined","openLabel","closeLabel","toUpperCase","map","swatch","index","swatchAriaLabel","propTypes","PropTypes","node","string","bool","oneOf","func","isRequired","arrayOf","number"],"mappings":"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","sourcesContent":["import React, { cloneElement, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiColorPickerSwatch } from './color_picker_swatch';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport { EuiFieldText, EuiFormControlLayout } from '../form';\nimport { EuiI18n } from '../i18n';\nimport { EuiPopover } from '../popover';\nimport {\n  VISUALIZATION_COLORS,\n  keyCodes,\n  hexToHsv,\n  hsvToHex,\n  isValidHex,\n} from '../../services';\n\nimport { EuiHue } from './hue';\nimport { EuiSaturation } from './saturation';\n\nexport const EuiColorPicker = ({\n  button,\n  className,\n  color,\n  compressed = false,\n  disabled,\n  fullWidth = false,\n  id,\n  isInvalid,\n  mode = 'default',\n  onBlur,\n  onChange,\n  onFocus,\n  readOnly = false,\n  swatches = VISUALIZATION_COLORS,\n  popoverZIndex,\n}) => {\n  const [isColorSelectorShown, setIsColorSelectorShown] = useState(false);\n  const [colorAsHsv, setColorAsHsv] = useState(\n    color ? hexToHsv(color) : hexToHsv('')\n  );\n  const [lastHex, setLastHex] = useState(color);\n  const [inputRef, setInputRef] = useState(null); // Ideally this is uses `useRef`, but `EuiFieldText` isn't ready for that\n  const [popoverShouldOwnFocus, setPopoverShouldOwnFocus] = useState(false);\n\n  const satruationRef = useRef(null);\n  const swatchRef = useRef(null);\n\n  useEffect(() => {\n    // Mimics `componentDidMount` and `componentDidUpdate`\n    if (lastHex !== color) {\n      // Only react to outside changes\n      const newColorAsHsv = color ? hexToHsv(color) : hexToHsv('');\n      setColorAsHsv(newColorAsHsv);\n    }\n  }, [color]);\n\n  const classes = classNames('euiColorPicker', className);\n  const panelClasses = classNames('euiColorPicker__popoverPanel', {\n    'euiColorPicker__popoverPanel--pickerOnly': mode === 'picker',\n    'euiColorPicker__popoverPanel--customButton': button,\n  });\n  const swatchClass = 'euiColorPicker__swatchSelect';\n  const testSubjAnchor = 'colorPickerAnchor';\n  const testSubjPopover = 'colorPickerPopover';\n\n  const handleOnChange = hex => {\n    setLastHex(hex);\n    onChange(hex);\n  };\n\n  const closeColorSelector = (shouldDelay = false) => {\n    if (onBlur) {\n      onBlur();\n    }\n\n    if (shouldDelay) {\n      setTimeout(() => setIsColorSelectorShown(false));\n    } else {\n      setIsColorSelectorShown(false);\n    }\n  };\n\n  const showColorSelector = (shouldFocusInside = false) => {\n    if (isColorSelectorShown || readOnly) return;\n    if (onFocus) {\n      onFocus();\n    }\n\n    setPopoverShouldOwnFocus(shouldFocusInside);\n    setIsColorSelectorShown(true);\n  };\n\n  const handleToggle = () => {\n    if (isColorSelectorShown) {\n      closeColorSelector();\n    } else {\n      showColorSelector(true);\n    }\n  };\n\n  const handleFinalSelection = () => {\n    // When the trigger is an input, focus the input so you can adjust\n    if (inputRef) {\n      inputRef.focus();\n    }\n\n    closeColorSelector(true);\n  };\n\n  const handleOnKeyDown = e => {\n    if (e.keyCode === keyCodes.ENTER) {\n      if (isColorSelectorShown) {\n        handleFinalSelection();\n      } else {\n        showColorSelector();\n      }\n    }\n  };\n\n  const handleInputActivity = e => {\n    if (e.keyCode === keyCodes.ENTER) {\n      e.preventDefault();\n      handleToggle();\n    } else if (!e.keyCode) {\n      showColorSelector();\n    }\n  };\n\n  const handleToggleOnKeyDown = e => {\n    if (e.keyCode === keyCodes.DOWN) {\n      e.preventDefault();\n      if (isColorSelectorShown) {\n        const nextFocusEl = mode !== 'swatch' ? satruationRef : swatchRef;\n        if (nextFocusEl.current) {\n          nextFocusEl.current.focus();\n        }\n      } else {\n        showColorSelector(true);\n      }\n    }\n  };\n\n  const handleColorInput = e => {\n    handleOnChange(e.target.value);\n    if (isValidHex(e.target.value)) {\n      setColorAsHsv(hexToHsv(e.target.value));\n    }\n  };\n\n  const handleColorSelection = color => {\n    const { h } = colorAsHsv;\n    const hue = h ? h : 1;\n    const newHsv = { ...color, h: hue };\n    handleOnChange(hsvToHex(newHsv));\n    setColorAsHsv(newHsv);\n  };\n\n  const handleHueSelection = hue => {\n    const { s, v } = colorAsHsv;\n    const satVal = s && v ? { s, v } : { s: 1, v: 1 };\n    const newHsv = { ...satVal, h: hue };\n    handleOnChange(hsvToHex(newHsv));\n    setColorAsHsv(newHsv);\n  };\n\n  const handleSwatchSelection = color => {\n    handleOnChange(color);\n    setColorAsHsv(hexToHsv(color));\n\n    handleFinalSelection();\n  };\n\n  let buttonOrInput;\n  if (button) {\n    buttonOrInput = cloneElement(button, {\n      onClick: handleToggle,\n      id: id,\n      disabled: disabled,\n      'data-test-subj': testSubjAnchor,\n    });\n  } else {\n    const showColor = color && isValidHex(color);\n    buttonOrInput = (\n      <EuiFormControlLayout\n        icon={\n          !readOnly\n            ? {\n                type: 'arrowDown',\n                side: 'right',\n              }\n            : null\n        }\n        readOnly={readOnly}\n        fullWidth={fullWidth}\n        compressed={compressed}\n        onKeyDown={handleToggleOnKeyDown}>\n        <div\n          // Used to pass the chosen color through to form layout SVG using currentColor\n          style={{ color: showColor ? color : undefined }}>\n          <EuiI18n\n            tokens={['euiColorPicker.openLabel', 'euiColorPicker.closeLabel']}\n            defaults={[\n              'Press the escape key to close the popover',\n              'Press the down key to open a popover containing color options',\n            ]}>\n            {([openLabel, closeLabel]) => (\n              <EuiFieldText\n                onClick={handleInputActivity}\n                onKeyDown={handleInputActivity}\n                value={color ? color.toUpperCase() : ''}\n                placeholder={!color ? 'Transparent' : undefined}\n                id={id}\n                onChange={handleColorInput}\n                maxLength={7}\n                icon={showColor ? 'swatchInput' : 'stopSlash'}\n                inputRef={setInputRef}\n                isInvalid={isInvalid}\n                compressed={compressed}\n                disabled={disabled}\n                readOnly={readOnly}\n                fullWidth={fullWidth}\n                autoComplete=\"off\"\n                data-test-subj={testSubjAnchor}\n                aria-label={isColorSelectorShown ? openLabel : closeLabel}\n              />\n            )}\n          </EuiI18n>\n        </div>\n      </EuiFormControlLayout>\n    );\n  }\n\n  return (\n    <EuiPopover\n      ownFocus={popoverShouldOwnFocus}\n      button={buttonOrInput}\n      isOpen={isColorSelectorShown}\n      closePopover={handleFinalSelection}\n      zIndex={popoverZIndex}\n      panelClassName={panelClasses}\n      display={button ? 'inlineBlock' : 'block'}\n      attachToAnchor={button ? false : true}\n      anchorPosition=\"downLeft\"\n      panelPaddingSize=\"s\">\n      <div className={classes} data-test-subj={testSubjPopover}>\n        <EuiFocusTrap clickOutsideDisables={true}>\n          <EuiScreenReaderOnly>\n            <p aria-live=\"polite\">\n              <EuiI18n\n                token=\"euiColorPicker.screenReaderAnnouncement\"\n                default=\"A popup with a range of selectable colors opened.\n                Tab forward to cycle through colors choices or press\n                escape to close this popup.\"\n              />\n            </p>\n          </EuiScreenReaderOnly>\n          {mode !== 'swatch' && (\n            <div onKeyDown={handleOnKeyDown}>\n              <EuiSaturation\n                id={id}\n                color={typeof colorAsHsv === 'object' ? colorAsHsv : undefined}\n                hex={color}\n                onChange={handleColorSelection}\n                ref={satruationRef}\n              />\n              <EuiHue\n                id={id}\n                hue={typeof colorAsHsv === 'object' ? colorAsHsv.h : undefined}\n                hex={color}\n                onChange={handleHueSelection}\n              />\n            </div>\n          )}\n          {mode !== 'picker' && (\n            <EuiFlexGroup wrap responsive={false} gutterSize=\"s\" role=\"listbox\">\n              {swatches.map((swatch, index) => (\n                <EuiFlexItem grow={false} key={swatch}>\n                  <EuiI18n\n                    token=\"euiColorPicker.swatchAriaLabel\"\n                    values={{ swatch }}\n                    default=\"Select {swatch} as the color\">\n                    {swatchAriaLabel => (\n                      <EuiColorPickerSwatch\n                        className={swatchClass}\n                        color={swatch}\n                        onClick={() => handleSwatchSelection(swatch)}\n                        aria-label={swatchAriaLabel}\n                        role=\"option\"\n                        ref={index === 0 ? swatchRef : undefined}\n                      />\n                    )}\n                  </EuiI18n>\n                </EuiFlexItem>\n              ))}\n            </EuiFlexGroup>\n          )}\n        </EuiFocusTrap>\n      </div>\n    </EuiPopover>\n  );\n};\n\nEuiColorPicker.propTypes = {\n  /**\n   *  Custom element to use instead of text input\n   */\n  button: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   *  Hex string (3 or 6 character). Empty string will register as 'transparent'\n   */\n  color: PropTypes.string,\n  /**\n   *  Use the compressed style for EuiFieldText\n   */\n  compressed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  /**\n   *  Custom validation flag\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Choose between swatches with gradient picker (default), swatches only, or gradient picker only.\n   */\n  mode: PropTypes.oneOf(['default', 'swatch', 'picker']),\n  /**\n   * Function called when the popover closes\n   */\n  onBlur: PropTypes.func,\n  /**\n   *  (hex: string) => void\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Function called when the popover opens\n   */\n  onFocus: PropTypes.func,\n  /**\n   *  Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\n   */\n  swatches: PropTypes.arrayOf(PropTypes.string),\n  /**\n   *  Custom z-index for the popover\n   */\n  popoverZIndex: PropTypes.number,\n};\n"]}]}