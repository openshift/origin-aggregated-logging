{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/range/dual_range.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/range/dual_range.js","mtime":1565204169737},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiDualRange = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _services = require(\"../../../services\");\n\nvar _number = require(\"../../../services/number\");\n\nvar _range_highlight = require(\"./range_highlight\");\n\nvar _range_input = require(\"./range_input\");\n\nvar _range_label = require(\"./range_label\");\n\nvar _range_slider = require(\"./range_slider\");\n\nvar _range_thumb = require(\"./range_thumb\");\n\nvar _range_track = require(\"./range_track\");\n\nvar _range_wrapper = require(\"./range_wrapper\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiDualRange =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiDualRange, _Component);\n\n  function EuiDualRange() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiDualRange);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiDualRange)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      hasFocus: false,\n      rangeSliderRefAvailable: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"rangeSliderRef\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRangeSliderRefUpdate\", function (ref) {\n      _this.rangeSliderRef = ref;\n\n      _this.setState({\n        rangeSliderRefAvailable: !!ref\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_determineInvalidThumbMovement\", function (newVal, lower, upper, e) {\n      // If the values are invalid, find whether the new value is in the upper\n      // or lower half and move the appropriate handle to the new value,\n      // while the other handle gets moved to the opposite bound (if invalid)\n      var lowerHalf = Math.abs(_this.props.max - _this.props.min) / 2 + _this.props.min;\n\n      var newValIsLow = (0, _number.isWithinRange)(_this.props.min, lowerHalf, newVal);\n\n      if (newValIsLow) {\n        lower = newVal;\n        upper = !_this.upperValueIsValid ? _this.props.max : upper;\n      } else {\n        lower = !_this.lowerValueIsValid ? _this.props.min : lower;\n        upper = newVal;\n      }\n\n      _this._handleOnChange(lower, upper, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_determineValidThumbMovement\", function (newVal, lower, upper, e) {\n      // Lower thumb targeted or right-moving swap has occured\n      if (Math.abs(lower - newVal) < Math.abs(upper - newVal)) {\n        lower = newVal;\n      } // Upper thumb targeted or left-moving swap has occured\n      else {\n          upper = newVal;\n        }\n\n      _this._handleOnChange(lower, upper, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_determineThumbMovement\", function (newVal, e) {\n      // Determine thumb movement based on slider interaction\n      if (!_this.isValid) {\n        // Non-standard positioning follows\n        _this._determineInvalidThumbMovement(newVal, _this.lowerValue, _this.upperValue, e);\n      } else {\n        // Standard positioning based on click event proximity to thumb locations\n        _this._determineValidThumbMovement(newVal, _this.lowerValue, _this.upperValue, e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleOnChange\", function (lower, upper, e) {\n      var isValid = (0, _number.isWithinRange)(_this.props.min, upper, lower) && (0, _number.isWithinRange)(lower, _this.props.max, upper);\n\n      _this.props.onChange([lower, upper], isValid, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSliderChange\", function (e) {\n      _this._determineThumbMovement(e.target.value, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_resetToRangeEnds\", function (e) {\n      // Arbitrary decision to pass `min` instead of `max`. Result is the same.\n      _this._determineInvalidThumbMovement(_this.props.min, _this.lowerValue, _this.upperValue, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_isDirectionalKeyPress\", function (e) {\n      return [_services.keyCodes.UP, _services.keyCodes.RIGHT, _services.keyCodes.DOWN, _services.keyCodes.LEFT].indexOf(e.keyCode) > -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputKeyDown\", function (e) {\n      // Relevant only when initial values are both `''` and `showInput` is set\n      if (_this._isDirectionalKeyPress(e) && !_this.isValid) {\n        e.preventDefault();\n\n        _this._resetToRangeEnds(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleLowerInputChange\", function (e) {\n      _this._handleOnChange(e.target.value, _this.upperValue, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleUpperInputChange\", function (e) {\n      _this._handleOnChange(_this.lowerValue, e.target.value, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleKeyDown\", function (value, e) {\n      var newVal = Number(value);\n      var stepRemainder = 0;\n      var step = _this.props.step || 1;\n\n      switch (e.keyCode) {\n        case _services.keyCodes.UP:\n        case _services.keyCodes.RIGHT:\n          e.preventDefault();\n          newVal += step;\n          stepRemainder = (newVal - _this.props.min) % step;\n\n          if (step !== 1 && stepRemainder > 0) {\n            newVal = newVal - stepRemainder;\n          }\n\n          break;\n\n        case _services.keyCodes.DOWN:\n        case _services.keyCodes.LEFT:\n          e.preventDefault();\n          newVal -= step;\n          stepRemainder = (newVal - _this.props.min) % step;\n\n          if (step !== 1 && stepRemainder > 0) {\n            newVal = newVal + (step - stepRemainder);\n          }\n\n          break;\n      }\n\n      return newVal;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleLowerKeyDown\", function (e) {\n      var lower = _this.lowerValue;\n\n      switch (e.keyCode) {\n        case _services.keyCodes.TAB:\n          return;\n\n        default:\n          if (!_this.lowerValueIsValid) {\n            // Relevant only when initial value is `''` and `showInput` is not set\n            e.preventDefault();\n\n            _this._resetToRangeEnds(e);\n\n            return;\n          }\n\n          lower = _this._handleKeyDown(lower, e);\n      }\n\n      if (lower >= _this.upperValue || lower < _this.props.min) return;\n\n      _this._handleOnChange(lower, _this.upperValue, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleUpperKeyDown\", function (e) {\n      var upper = _this.upperValue;\n\n      switch (e.keyCode) {\n        case _services.keyCodes.TAB:\n          return;\n\n        default:\n          if (!_this.upperValueIsValid) {\n            // Relevant only when initial value is `''` and `showInput` is not set\n            e.preventDefault();\n\n            _this._resetToRangeEnds(e);\n\n            return;\n          }\n\n          upper = _this._handleKeyDown(upper, e);\n      }\n\n      if (upper <= _this.lowerValue || upper > _this.props.max) return;\n\n      _this._handleOnChange(_this.lowerValue, upper, e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"calculateThumbPositionStyle\", function (value) {\n      // Calculate the left position based on value\n      var decimal = (value - _this.props.min) / (_this.props.max - _this.props.min); // Must be between 0-100%\n\n      var valuePosition = decimal <= 1 ? decimal : 1;\n      valuePosition = valuePosition >= 0 ? valuePosition : 0;\n      var EUI_THUMB_SIZE = 16;\n      var thumbToTrackRatio = EUI_THUMB_SIZE / _this.rangeSliderRef.clientWidth;\n      var trackPositionScale = (1 - thumbToTrackRatio) * 100;\n      return {\n        left: \"\".concat(valuePosition * trackPositionScale, \"%\")\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleHasFocus\", function () {\n      var shouldFocused = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !_this.state.hasFocus;\n\n      _this.setState({\n        hasFocus: shouldFocused\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(EuiDualRange, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          compressed = _this$props.compressed,\n          disabled = _this$props.disabled,\n          fullWidth = _this$props.fullWidth,\n          id = _this$props.id,\n          max = _this$props.max,\n          min = _this$props.min,\n          name = _this$props.name,\n          step = _this$props.step,\n          showLabels = _this$props.showLabels,\n          showInput = _this$props.showInput,\n          showTicks = _this$props.showTicks,\n          tickInterval = _this$props.tickInterval,\n          ticks = _this$props.ticks,\n          levels = _this$props.levels,\n          onChange = _this$props.onChange,\n          showRange = _this$props.showRange,\n          value = _this$props.value,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"compressed\", \"disabled\", \"fullWidth\", \"id\", \"max\", \"min\", \"name\", \"step\", \"showLabels\", \"showInput\", \"showTicks\", \"tickInterval\", \"ticks\", \"levels\", \"onChange\", \"showRange\", \"value\", \"style\"]);\n\n      var classes = (0, _classnames.default)('euiDualRange', className);\n      var digitTolerance = Math.max(String(min).length, String(max).length);\n      return _react.default.createElement(_range_wrapper.EuiRangeWrapper, {\n        className: classes,\n        fullWidth: fullWidth\n      }, showInput && _react.default.createElement(_range_input.EuiRangeInput, {\n        digitTolerance: digitTolerance,\n        side: \"min\",\n        min: min,\n        max: Number(this.upperValue),\n        step: step,\n        value: this.lowerValue,\n        disabled: disabled,\n        compressed: compressed,\n        onChange: this.handleLowerInputChange,\n        onKeyDown: this.handleInputKeyDown,\n        name: \"\".concat(name, \"-minValue\"),\n        \"aria-describedby\": this.props['aria-describedby'],\n        \"aria-label\": this.props['aria-label']\n      }), showLabels && _react.default.createElement(_range_label.EuiRangeLabel, {\n        side: \"min\",\n        disabled: disabled\n      }, min), _react.default.createElement(_range_track.EuiRangeTrack, {\n        disabled: disabled,\n        max: max,\n        min: min,\n        step: step,\n        showTicks: showTicks,\n        tickInterval: tickInterval,\n        ticks: ticks,\n        levels: levels,\n        onChange: this.handleSliderChange,\n        value: value\n      }, _react.default.createElement(_range_slider.EuiRangeSlider, _extends({\n        className: \"euiDualRange__slider\",\n        ref: this.handleRangeSliderRefUpdate,\n        id: id,\n        name: name,\n        min: min,\n        max: max,\n        step: step,\n        disabled: disabled,\n        onChange: this.handleSliderChange,\n        style: style,\n        showTicks: showTicks,\n        hasFocus: this.state.hasFocus,\n        \"aria-hidden\": true,\n        tabIndex: -1,\n        showRange: showRange\n      }, rest)), this.state.rangeSliderRefAvailable && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_range_thumb.EuiRangeThumb, {\n        min: min,\n        max: Number(this.upperValue),\n        value: this.lowerValue,\n        disabled: disabled,\n        showTicks: showTicks,\n        showInput: showInput,\n        onKeyDown: this.handleLowerKeyDown,\n        onFocus: function onFocus() {\n          return _this2.toggleHasFocus(true);\n        },\n        onBlur: function onBlur() {\n          return _this2.toggleHasFocus(false);\n        },\n        style: this.calculateThumbPositionStyle(this.lowerValue || min),\n        \"aria-describedby\": this.props['aria-describedby'],\n        \"aria-label\": this.props['aria-label']\n      }), _react.default.createElement(_range_thumb.EuiRangeThumb, {\n        min: Number(this.lowerValue),\n        max: max,\n        value: this.upperValue,\n        disabled: disabled,\n        showTicks: showTicks,\n        showInput: showInput,\n        onKeyDown: this.handleUpperKeyDown,\n        onFocus: function onFocus() {\n          return _this2.toggleHasFocus(true);\n        },\n        onBlur: function onBlur() {\n          return _this2.toggleHasFocus(false);\n        },\n        style: this.calculateThumbPositionStyle(this.upperValue || max),\n        \"aria-describedby\": this.props['aria-describedby'],\n        \"aria-label\": this.props['aria-label']\n      })), showRange && this.isValid && _react.default.createElement(_range_highlight.EuiRangeHighlight, {\n        hasFocus: this.state.hasFocus,\n        showTicks: showTicks,\n        min: Number(min),\n        max: Number(max),\n        lowerValue: Number(this.lowerValue),\n        upperValue: Number(this.upperValue)\n      })), showLabels && _react.default.createElement(_range_label.EuiRangeLabel, {\n        disabled: disabled\n      }, max), showInput && _react.default.createElement(_range_input.EuiRangeInput, {\n        digitTolerance: digitTolerance,\n        side: \"max\",\n        min: Number(this.lowerValue),\n        max: max,\n        step: step,\n        value: this.upperValue,\n        disabled: disabled,\n        compressed: compressed,\n        onChange: this.handleUpperInputChange,\n        onKeyDown: this.handleInputKeyDown,\n        name: \"\".concat(name, \"-maxValue\"),\n        \"aria-describedby\": this.props['aria-describedby'],\n        \"aria-label\": this.props['aria-label']\n      }));\n    }\n  }, {\n    key: \"lowerValue\",\n    get: function get() {\n      return this.props.value ? this.props.value[0] : this.props.min;\n    }\n  }, {\n    key: \"upperValue\",\n    get: function get() {\n      return this.props.value ? this.props.value[1] : this.props.max;\n    }\n  }, {\n    key: \"lowerValueIsValid\",\n    get: function get() {\n      return (0, _number.isWithinRange)(this.props.min, this.upperValue, this.lowerValue);\n    }\n  }, {\n    key: \"upperValueIsValid\",\n    get: function get() {\n      return (0, _number.isWithinRange)(this.lowerValue, this.props.max, this.upperValue);\n    }\n  }, {\n    key: \"isValid\",\n    get: function get() {\n      return this.lowerValueIsValid && this.upperValueIsValid;\n    }\n  }]);\n\n  return EuiDualRange;\n}(_react.Component);\n\nexports.EuiDualRange = EuiDualRange;\nEuiDualRange.propTypes = {\n  name: _propTypes.default.string,\n  id: _propTypes.default.string,\n  min: _propTypes.default.number.isRequired,\n  max: _propTypes.default.number.isRequired,\n  step: _propTypes.default.number,\n\n  /**\n   * Array containing lower and upper values. Fallback is `min` and `max` respectively\n   */\n  value: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])),\n  fullWidth: _propTypes.default.bool,\n  compressed: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Shows static min/max labels on the sides of the range slider\n   */\n  showLabels: _propTypes.default.bool,\n\n  /**\n   * Displays a input controls for direct manipulation\n   */\n  showInput: _propTypes.default.bool,\n\n  /**\n   * Shows clickable tick marks and labels at the given interval (`step`/`tickInterval`)\n   */\n  showTicks: _propTypes.default.bool,\n\n  /**\n   * Modifies the number of tick marks and at what interval\n   */\n  tickInterval: _propTypes.default.number,\n\n  /**\n   * Specified ticks at specified values\n   */\n  ticks: _propTypes.default.arrayOf(_propTypes.default.shape({\n    value: _propTypes.default.number.isRequired,\n    label: _propTypes.default.node.isRequired\n  })),\n\n  /**\n   * Function signature: `([lowerValue, upperValue], isValid, event)`\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Create colored indicators for certain intervals\n   */\n  levels: _propTypes.default.arrayOf(_propTypes.default.shape({\n    min: _propTypes.default.number,\n    max: _propTypes.default.number,\n    color: _propTypes.default.oneOf(_range_track.LEVEL_COLORS)\n  })),\n\n  /**\n   * Shows a thick line from lower value to upper value\n   */\n  showRange: _propTypes.default.bool\n};\nEuiDualRange.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1,\n  fullWidth: false,\n  compressed: false,\n  showLabels: false,\n  showInput: false,\n  showRange: true,\n  showTicks: false,\n  levels: []\n};\nEuiDualRange.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleRangeSliderRefUpdate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"ref\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"lowerValue\",\n    \"docblock\": null,\n    \"modifiers\": [\"get\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"upperValue\",\n    \"docblock\": null,\n    \"modifiers\": [\"get\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"lowerValueIsValid\",\n    \"docblock\": null,\n    \"modifiers\": [\"get\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"upperValueIsValid\",\n    \"docblock\": null,\n    \"modifiers\": [\"get\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"isValid\",\n    \"docblock\": null,\n    \"modifiers\": [\"get\"],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"_determineInvalidThumbMovement\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"newVal\",\n      \"type\": null\n    }, {\n      \"name\": \"lower\",\n      \"type\": null\n    }, {\n      \"name\": \"upper\",\n      \"type\": null\n    }, {\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_determineValidThumbMovement\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"newVal\",\n      \"type\": null\n    }, {\n      \"name\": \"lower\",\n      \"type\": null\n    }, {\n      \"name\": \"upper\",\n      \"type\": null\n    }, {\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_determineThumbMovement\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"newVal\",\n      \"type\": null\n    }, {\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_handleOnChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"lower\",\n      \"type\": null\n    }, {\n      \"name\": \"upper\",\n      \"type\": null\n    }, {\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleSliderChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_resetToRangeEnds\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_isDirectionalKeyPress\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleInputKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleLowerInputChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleUpperInputChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"_handleKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }, {\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleLowerKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleUpperKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"calculateThumbPositionStyle\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleHasFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"shouldFocused\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiDualRange\",\n  \"props\": {\n    \"min\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"max\": {\n      \"defaultValue\": {\n        \"value\": \"100\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"step\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showLabels\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Shows static min/max labels on the sides of the range slider\"\n    },\n    \"showInput\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Displays a input controls for direct manipulation\"\n    },\n    \"showRange\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Shows a thick line from lower value to upper value\"\n    },\n    \"showTicks\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Shows clickable tick marks and labels at the given interval (`step`/`tickInterval`)\"\n    },\n    \"levels\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"min\": {\n              \"name\": \"number\",\n              \"required\": false\n            },\n            \"max\": {\n              \"name\": \"number\",\n              \"required\": false\n            },\n            \"color\": {\n              \"name\": \"enum\",\n              \"computed\": true,\n              \"value\": \"LEVEL_COLORS\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Create colored indicators for certain intervals\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"union\",\n          \"value\": [{\n            \"name\": \"number\"\n          }, {\n            \"name\": \"string\"\n          }]\n        }\n      },\n      \"required\": false,\n      \"description\": \"Array containing lower and upper values. Fallback is `min` and `max` respectively\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tickInterval\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Modifies the number of tick marks and at what interval\"\n    },\n    \"ticks\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"value\": {\n              \"name\": \"number\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"node\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Specified ticks at specified values\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function signature: `([lowerValue, upperValue], isValid, event)`\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/range/dual_range.js"],"names":["EuiDualRange","hasFocus","rangeSliderRefAvailable","ref","rangeSliderRef","setState","newVal","lower","upper","e","lowerHalf","Math","abs","props","max","min","newValIsLow","upperValueIsValid","lowerValueIsValid","_handleOnChange","isValid","_determineInvalidThumbMovement","lowerValue","upperValue","_determineValidThumbMovement","onChange","_determineThumbMovement","target","value","keyCodes","UP","RIGHT","DOWN","LEFT","indexOf","keyCode","_isDirectionalKeyPress","preventDefault","_resetToRangeEnds","Number","stepRemainder","step","TAB","_handleKeyDown","decimal","valuePosition","EUI_THUMB_SIZE","thumbToTrackRatio","clientWidth","trackPositionScale","left","shouldFocused","state","className","compressed","disabled","fullWidth","id","name","showLabels","showInput","showTicks","tickInterval","ticks","levels","showRange","style","rest","classes","digitTolerance","String","length","handleLowerInputChange","handleInputKeyDown","handleSliderChange","handleRangeSliderRefUpdate","handleLowerKeyDown","toggleHasFocus","calculateThumbPositionStyle","handleUpperKeyDown","handleUpperInputChange","Component","propTypes","PropTypes","string","number","isRequired","arrayOf","oneOfType","bool","shape","label","node","func","color","oneOf","LEVEL_COLORS","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { keyCodes } from '../../../services';\nimport { isWithinRange } from '../../../services/number';\n\nimport { EuiRangeHighlight } from './range_highlight';\nimport { EuiRangeInput } from './range_input';\nimport { EuiRangeLabel } from './range_label';\nimport { EuiRangeSlider } from './range_slider';\nimport { EuiRangeThumb } from './range_thumb';\nimport { EuiRangeTrack, LEVEL_COLORS } from './range_track';\nimport { EuiRangeWrapper } from './range_wrapper';\n\nexport class EuiDualRange extends Component {\n  state = {\n    hasFocus: false,\n    rangeSliderRefAvailable: false,\n  };\n\n  rangeSliderRef = null;\n  handleRangeSliderRefUpdate = ref => {\n    this.rangeSliderRef = ref;\n    this.setState({\n      rangeSliderRefAvailable: !!ref,\n    });\n  };\n\n  get lowerValue() {\n    return this.props.value ? this.props.value[0] : this.props.min;\n  }\n  get upperValue() {\n    return this.props.value ? this.props.value[1] : this.props.max;\n  }\n  get lowerValueIsValid() {\n    return isWithinRange(this.props.min, this.upperValue, this.lowerValue);\n  }\n  get upperValueIsValid() {\n    return isWithinRange(this.lowerValue, this.props.max, this.upperValue);\n  }\n  get isValid() {\n    return this.lowerValueIsValid && this.upperValueIsValid;\n  }\n\n  _determineInvalidThumbMovement = (newVal, lower, upper, e) => {\n    // If the values are invalid, find whether the new value is in the upper\n    // or lower half and move the appropriate handle to the new value,\n    // while the other handle gets moved to the opposite bound (if invalid)\n    const lowerHalf =\n      Math.abs(this.props.max - this.props.min) / 2 + this.props.min;\n    const newValIsLow = isWithinRange(this.props.min, lowerHalf, newVal);\n    if (newValIsLow) {\n      lower = newVal;\n      upper = !this.upperValueIsValid ? this.props.max : upper;\n    } else {\n      lower = !this.lowerValueIsValid ? this.props.min : lower;\n      upper = newVal;\n    }\n    this._handleOnChange(lower, upper, e);\n  };\n\n  _determineValidThumbMovement = (newVal, lower, upper, e) => {\n    // Lower thumb targeted or right-moving swap has occured\n    if (Math.abs(lower - newVal) < Math.abs(upper - newVal)) {\n      lower = newVal;\n    }\n    // Upper thumb targeted or left-moving swap has occured\n    else {\n      upper = newVal;\n    }\n    this._handleOnChange(lower, upper, e);\n  };\n\n  _determineThumbMovement = (newVal, e) => {\n    // Determine thumb movement based on slider interaction\n    if (!this.isValid) {\n      // Non-standard positioning follows\n      this._determineInvalidThumbMovement(\n        newVal,\n        this.lowerValue,\n        this.upperValue,\n        e\n      );\n    } else {\n      // Standard positioning based on click event proximity to thumb locations\n      this._determineValidThumbMovement(\n        newVal,\n        this.lowerValue,\n        this.upperValue,\n        e\n      );\n    }\n  };\n\n  _handleOnChange = (lower, upper, e) => {\n    const isValid =\n      isWithinRange(this.props.min, upper, lower) &&\n      isWithinRange(lower, this.props.max, upper);\n    this.props.onChange([lower, upper], isValid, e);\n  };\n\n  handleSliderChange = e => {\n    this._determineThumbMovement(e.target.value, e);\n  };\n\n  _resetToRangeEnds = e => {\n    // Arbitrary decision to pass `min` instead of `max`. Result is the same.\n    this._determineInvalidThumbMovement(\n      this.props.min,\n      this.lowerValue,\n      this.upperValue,\n      e\n    );\n  };\n\n  _isDirectionalKeyPress = e => {\n    return (\n      [keyCodes.UP, keyCodes.RIGHT, keyCodes.DOWN, keyCodes.LEFT].indexOf(\n        e.keyCode\n      ) > -1\n    );\n  };\n\n  handleInputKeyDown = e => {\n    // Relevant only when initial values are both `''` and `showInput` is set\n    if (this._isDirectionalKeyPress(e) && !this.isValid) {\n      e.preventDefault();\n      this._resetToRangeEnds(e);\n    }\n  };\n\n  handleLowerInputChange = e => {\n    this._handleOnChange(e.target.value, this.upperValue, e);\n  };\n\n  handleUpperInputChange = e => {\n    this._handleOnChange(this.lowerValue, e.target.value, e);\n  };\n\n  _handleKeyDown = (value, e) => {\n    let newVal = Number(value);\n    let stepRemainder = 0;\n    const step = this.props.step || 1;\n    switch (e.keyCode) {\n      case keyCodes.UP:\n      case keyCodes.RIGHT:\n        e.preventDefault();\n        newVal += step;\n        stepRemainder = (newVal - this.props.min) % step;\n        if (step !== 1 && stepRemainder > 0) {\n          newVal = newVal - stepRemainder;\n        }\n        break;\n      case keyCodes.DOWN:\n      case keyCodes.LEFT:\n        e.preventDefault();\n        newVal -= step;\n        stepRemainder = (newVal - this.props.min) % step;\n        if (step !== 1 && stepRemainder > 0) {\n          newVal = newVal + (step - stepRemainder);\n        }\n        break;\n    }\n    return newVal;\n  };\n\n  handleLowerKeyDown = e => {\n    let lower = this.lowerValue;\n    switch (e.keyCode) {\n      case keyCodes.TAB:\n        return;\n      default:\n        if (!this.lowerValueIsValid) {\n          // Relevant only when initial value is `''` and `showInput` is not set\n          e.preventDefault();\n          this._resetToRangeEnds(e);\n          return;\n        }\n        lower = this._handleKeyDown(lower, e);\n    }\n    if (lower >= this.upperValue || lower < this.props.min) return;\n    this._handleOnChange(lower, this.upperValue, e);\n  };\n\n  handleUpperKeyDown = e => {\n    let upper = this.upperValue;\n    switch (e.keyCode) {\n      case keyCodes.TAB:\n        return;\n      default:\n        if (!this.upperValueIsValid) {\n          // Relevant only when initial value is `''` and `showInput` is not set\n          e.preventDefault();\n          this._resetToRangeEnds(e);\n          return;\n        }\n        upper = this._handleKeyDown(upper, e);\n    }\n    if (upper <= this.lowerValue || upper > this.props.max) return;\n    this._handleOnChange(this.lowerValue, upper, e);\n  };\n\n  calculateThumbPositionStyle = value => {\n    // Calculate the left position based on value\n    const decimal =\n      (value - this.props.min) / (this.props.max - this.props.min);\n    // Must be between 0-100%\n    let valuePosition = decimal <= 1 ? decimal : 1;\n    valuePosition = valuePosition >= 0 ? valuePosition : 0;\n\n    const EUI_THUMB_SIZE = 16;\n    const thumbToTrackRatio = EUI_THUMB_SIZE / this.rangeSliderRef.clientWidth;\n    const trackPositionScale = (1 - thumbToTrackRatio) * 100;\n    return { left: `${valuePosition * trackPositionScale}%` };\n  };\n\n  toggleHasFocus = (shouldFocused = !this.state.hasFocus) => {\n    this.setState({\n      hasFocus: shouldFocused,\n    });\n  };\n\n  render() {\n    const {\n      className,\n      compressed,\n      disabled,\n      fullWidth,\n      id,\n      max,\n      min,\n      name,\n      step,\n      showLabels,\n      showInput,\n      showTicks,\n      tickInterval,\n      ticks,\n      levels,\n      onChange,\n      showRange,\n      value,\n      style,\n      ...rest\n    } = this.props;\n\n    const classes = classNames('euiDualRange', className);\n    const digitTolerance = Math.max(String(min).length, String(max).length);\n\n    return (\n      <EuiRangeWrapper className={classes} fullWidth={fullWidth}>\n        {showInput && (\n          <EuiRangeInput\n            digitTolerance={digitTolerance}\n            side=\"min\"\n            min={min}\n            max={Number(this.upperValue)}\n            step={step}\n            value={this.lowerValue}\n            disabled={disabled}\n            compressed={compressed}\n            onChange={this.handleLowerInputChange}\n            onKeyDown={this.handleInputKeyDown}\n            name={`${name}-minValue`}\n            aria-describedby={this.props['aria-describedby']}\n            aria-label={this.props['aria-label']}\n          />\n        )}\n        {showLabels && (\n          <EuiRangeLabel side=\"min\" disabled={disabled}>\n            {min}\n          </EuiRangeLabel>\n        )}\n        <EuiRangeTrack\n          disabled={disabled}\n          max={max}\n          min={min}\n          step={step}\n          showTicks={showTicks}\n          tickInterval={tickInterval}\n          ticks={ticks}\n          levels={levels}\n          onChange={this.handleSliderChange}\n          value={value}>\n          <EuiRangeSlider\n            className=\"euiDualRange__slider\"\n            ref={this.handleRangeSliderRefUpdate}\n            id={id}\n            name={name}\n            min={min}\n            max={max}\n            step={step}\n            disabled={disabled}\n            onChange={this.handleSliderChange}\n            style={style}\n            showTicks={showTicks}\n            hasFocus={this.state.hasFocus}\n            aria-hidden={true}\n            tabIndex={-1}\n            showRange={showRange}\n            {...rest}\n          />\n\n          {this.state.rangeSliderRefAvailable && (\n            <React.Fragment>\n              <EuiRangeThumb\n                min={min}\n                max={Number(this.upperValue)}\n                value={this.lowerValue}\n                disabled={disabled}\n                showTicks={showTicks}\n                showInput={showInput}\n                onKeyDown={this.handleLowerKeyDown}\n                onFocus={() => this.toggleHasFocus(true)}\n                onBlur={() => this.toggleHasFocus(false)}\n                style={this.calculateThumbPositionStyle(this.lowerValue || min)}\n                aria-describedby={this.props['aria-describedby']}\n                aria-label={this.props['aria-label']}\n              />\n              <EuiRangeThumb\n                min={Number(this.lowerValue)}\n                max={max}\n                value={this.upperValue}\n                disabled={disabled}\n                showTicks={showTicks}\n                showInput={showInput}\n                onKeyDown={this.handleUpperKeyDown}\n                onFocus={() => this.toggleHasFocus(true)}\n                onBlur={() => this.toggleHasFocus(false)}\n                style={this.calculateThumbPositionStyle(this.upperValue || max)}\n                aria-describedby={this.props['aria-describedby']}\n                aria-label={this.props['aria-label']}\n              />\n            </React.Fragment>\n          )}\n\n          {showRange && this.isValid && (\n            <EuiRangeHighlight\n              hasFocus={this.state.hasFocus}\n              showTicks={showTicks}\n              min={Number(min)}\n              max={Number(max)}\n              lowerValue={Number(this.lowerValue)}\n              upperValue={Number(this.upperValue)}\n            />\n          )}\n        </EuiRangeTrack>\n        {showLabels && <EuiRangeLabel disabled={disabled}>{max}</EuiRangeLabel>}\n        {showInput && (\n          <EuiRangeInput\n            digitTolerance={digitTolerance}\n            side=\"max\"\n            min={Number(this.lowerValue)}\n            max={max}\n            step={step}\n            value={this.upperValue}\n            disabled={disabled}\n            compressed={compressed}\n            onChange={this.handleUpperInputChange}\n            onKeyDown={this.handleInputKeyDown}\n            name={`${name}-maxValue`}\n            aria-describedby={this.props['aria-describedby']}\n            aria-label={this.props['aria-label']}\n          />\n        )}\n      </EuiRangeWrapper>\n    );\n  }\n}\n\nEuiDualRange.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  step: PropTypes.number,\n  /**\n   * Array containing lower and upper values. Fallback is `min` and `max` respectively\n   */\n  value: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  fullWidth: PropTypes.bool,\n  compressed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  /**\n   * Shows static min/max labels on the sides of the range slider\n   */\n  showLabels: PropTypes.bool,\n  /**\n   * Displays a input controls for direct manipulation\n   */\n  showInput: PropTypes.bool,\n  /**\n   * Shows clickable tick marks and labels at the given interval (`step`/`tickInterval`)\n   */\n  showTicks: PropTypes.bool,\n  /**\n   * Modifies the number of tick marks and at what interval\n   */\n  tickInterval: PropTypes.number,\n  /**\n   * Specified ticks at specified values\n   */\n  ticks: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      label: PropTypes.node.isRequired,\n    })\n  ),\n  /**\n   * Function signature: `([lowerValue, upperValue], isValid, event)`\n   */\n  onChange: PropTypes.func,\n  /**\n   * Create colored indicators for certain intervals\n   */\n  levels: PropTypes.arrayOf(\n    PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      color: PropTypes.oneOf(LEVEL_COLORS),\n    })\n  ),\n  /**\n   * Shows a thick line from lower value to upper value\n   */\n  showRange: PropTypes.bool,\n};\n\nEuiDualRange.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1,\n  fullWidth: false,\n  compressed: false,\n  showLabels: false,\n  showInput: false,\n  showRange: true,\n  showTicks: false,\n  levels: [],\n};\n"]}]}