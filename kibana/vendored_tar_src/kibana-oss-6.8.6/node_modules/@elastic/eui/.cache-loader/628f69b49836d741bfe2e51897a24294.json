{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/datagrid/column_selector.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/datagrid/column_selector.tsx","mtime":1567534071247},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColumnSelector = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _popover = require(\"../popover\");\n\nvar _button = require(\"../button\");\n\nvar _flex = require(\"../flex\");\n\nvar _form = require(\"../form\");\n\nvar _drag_and_drop = require(\"../drag_and_drop\");\n\nvar _icon = require(\"../icon\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useColumnSelector = function useColumnSelector(availableColumns) {\n  var _useState = (0, _react.useState)(availableColumns),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortedColumns = _useState2[0],\n      setSortedColumns = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(availableColumns),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visibleColumns = _useState4[0],\n      setVisibleColumns = _useState4[1];\n\n  var visibleColumnIds = visibleColumns.reduce(function (visibleColumnIds, _ref) {\n    var id = _ref.id;\n    visibleColumnIds.add(id);\n    return visibleColumnIds;\n  }, new Set());\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOpen = _useState6[0],\n      setIsOpen = _useState6[1];\n\n  function onDragEnd(_ref2) {\n    var sourceIndex = _ref2.source.index,\n        destination = _ref2.destination;\n    var destinationIndex = destination.index;\n\n    var nextSortedColumns = _toConsumableArray(sortedColumns);\n\n    nextSortedColumns[sourceIndex] = sortedColumns[destinationIndex];\n    nextSortedColumns[destinationIndex] = sortedColumns[sourceIndex];\n    setSortedColumns(nextSortedColumns);\n    var nextVisibleColumns = nextSortedColumns.filter(function (_ref3) {\n      var id = _ref3.id;\n      return visibleColumnIds.has(id);\n    });\n    setVisibleColumns(nextVisibleColumns);\n  }\n\n  var numberOfHiddenFields = availableColumns.length - visibleColumns.length;\n\n  var ColumnSelector = function ColumnSelector() {\n    return _react.default.createElement(_popover.EuiPopover, {\n      \"data-test-subj\": \"dataGridColumnSelectorPopover\",\n      isOpen: isOpen,\n      closePopover: function closePopover() {\n        return setIsOpen(false);\n      },\n      anchorPosition: \"downLeft\",\n      ownFocus: true,\n      panelPaddingSize: \"s\",\n      panelClassName: \"euiDataGridColumnSelectorPopover\",\n      button: _react.default.createElement(_button.EuiButtonEmpty, {\n        size: \"xs\",\n        iconType: \"eyeClosed\",\n        color: \"text\",\n        className: numberOfHiddenFields > 0 ? 'euiDataGrid__controlBtn--active' : null,\n        onClick: function onClick() {\n          return setIsOpen(!isOpen);\n        }\n      }, numberOfHiddenFields > 0 ? \"\".concat(numberOfHiddenFields, \" hidden fields\") : 'Hide fields')\n    }, _react.default.createElement(_drag_and_drop.EuiDragDropContext, {\n      onDragEnd: onDragEnd\n    }, _react.default.createElement(_drag_and_drop.EuiDroppable, {\n      droppableId: \"columnOrder\",\n      className: \"euiDataGridColumnSelector\"\n    }, _react.default.createElement(_react.Fragment, null, sortedColumns.map(function (_ref4, index) {\n      var id = _ref4.id;\n      return _react.default.createElement(_drag_and_drop.EuiDraggable, {\n        key: id,\n        draggableId: id,\n        index: index\n      }, function (provided, state) {\n        return _react.default.createElement(\"div\", {\n          className: \"euiDataGridColumnSelector__item \".concat(state.isDragging && 'euiDataGridColumnSelector__item-isDragging')\n        }, _react.default.createElement(_flex.EuiFlexGroup, {\n          gutterSize: \"m\",\n          alignItems: \"center\"\n        }, _react.default.createElement(_flex.EuiFlexItem, null, _react.default.createElement(_form.EuiSwitch, {\n          name: id,\n          label: id,\n          checked: visibleColumnIds.has(id),\n          compressed: true,\n          onChange: function onChange(_ref5) {\n            var checked = _ref5.currentTarget.checked;\n            var nextVisibleColumns = sortedColumns.filter(function (_ref6) {\n              var columnId = _ref6.id;\n              return checked ? visibleColumnIds.has(columnId) || id === columnId : visibleColumnIds.has(columnId) && id !== columnId;\n            });\n            setVisibleColumns(nextVisibleColumns);\n          }\n        })), _react.default.createElement(_flex.EuiFlexItem, _extends({\n          grow: false\n        }, provided.dragHandleProps), _react.default.createElement(\"div\", provided.dragHandleProps, _react.default.createElement(_icon.EuiIcon, {\n          type: \"grab\",\n          color: \"subdued\"\n        })))));\n      });\n    })))), _react.default.createElement(_popover.EuiPopoverFooter, null, _react.default.createElement(_flex.EuiFlexGroup, {\n      gutterSize: \"s\",\n      justifyContent: \"spaceBetween\"\n    }, _react.default.createElement(_flex.EuiFlexItem, null, _react.default.createElement(_button.EuiButtonEmpty, {\n      size: \"xs\",\n      flush: \"left\",\n      onClick: function onClick() {\n        return setVisibleColumns(sortedColumns);\n      }\n    }, \"Show all\")), _react.default.createElement(_flex.EuiFlexItem, null, _react.default.createElement(_button.EuiButtonEmpty, {\n      size: \"xs\",\n      flush: \"right\",\n      onClick: function onClick() {\n        return setVisibleColumns([]);\n      }\n    }, \"Hide all\")))));\n  };\n\n  return [ColumnSelector, visibleColumns];\n};\n\nexports.useColumnSelector = useColumnSelector;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/datagrid/column_selector.tsx"],"names":["useColumnSelector","availableColumns","sortedColumns","setSortedColumns","visibleColumns","setVisibleColumns","visibleColumnIds","reduce","id","add","Set","isOpen","setIsOpen","onDragEnd","sourceIndex","source","index","destination","destinationIndex","nextSortedColumns","nextVisibleColumns","filter","has","numberOfHiddenFields","length","ColumnSelector","map","provided","state","isDragging","checked","currentTarget","columnId","dragHandleProps"],"mappings":"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","sourcesContent":["import React, { Fragment, FunctionComponent, useState } from 'react';\nimport { EuiDataGridColumn } from './data_grid_types';\n// @ts-ignore-next-line\nimport { EuiPopover, EuiPopoverFooter } from '../popover';\n// @ts-ignore-next-line\nimport { EuiButtonEmpty } from '../button';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\n// @ts-ignore-next-line\nimport { EuiSwitch } from '../form';\nimport {\n  EuiDragDropContext,\n  EuiDraggable,\n  EuiDroppable,\n} from '../drag_and_drop';\nimport { DropResult } from 'react-beautiful-dnd';\nimport { EuiIcon } from '../icon';\n\nexport const useColumnSelector = (\n  availableColumns: EuiDataGridColumn[]\n): [FunctionComponent<any>, EuiDataGridColumn[]] => {\n  const [sortedColumns, setSortedColumns] = useState(availableColumns);\n\n  const [visibleColumns, setVisibleColumns] = useState(availableColumns);\n  const visibleColumnIds = visibleColumns.reduce((visibleColumnIds, { id }) => {\n    visibleColumnIds.add(id);\n    return visibleColumnIds;\n  }, new Set());\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onDragEnd({\n    source: { index: sourceIndex },\n    destination,\n  }: DropResult) {\n    const destinationIndex = destination!.index;\n    const nextSortedColumns = [...sortedColumns];\n\n    nextSortedColumns[sourceIndex] = sortedColumns[destinationIndex];\n    nextSortedColumns[destinationIndex] = sortedColumns[sourceIndex];\n\n    setSortedColumns(nextSortedColumns);\n\n    const nextVisibleColumns = nextSortedColumns.filter(({ id }) =>\n      visibleColumnIds.has(id)\n    );\n    setVisibleColumns(nextVisibleColumns);\n  }\n\n  const numberOfHiddenFields = availableColumns.length - visibleColumns.length;\n\n  const ColumnSelector = () => (\n    <EuiPopover\n      data-test-subj=\"dataGridColumnSelectorPopover\"\n      isOpen={isOpen}\n      closePopover={() => setIsOpen(false)}\n      anchorPosition=\"downLeft\"\n      ownFocus\n      panelPaddingSize=\"s\"\n      panelClassName=\"euiDataGridColumnSelectorPopover\"\n      button={\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"eyeClosed\"\n          color=\"text\"\n          className={\n            numberOfHiddenFields > 0 ? 'euiDataGrid__controlBtn--active' : null\n          }\n          onClick={() => setIsOpen(!isOpen)}>\n          {numberOfHiddenFields > 0\n            ? `${numberOfHiddenFields} hidden fields`\n            : 'Hide fields'}\n        </EuiButtonEmpty>\n      }>\n      <EuiDragDropContext onDragEnd={onDragEnd}>\n        <EuiDroppable\n          droppableId=\"columnOrder\"\n          className=\"euiDataGridColumnSelector\">\n          <Fragment>\n            {sortedColumns.map(({ id }, index) => (\n              <EuiDraggable key={id} draggableId={id} index={index}>\n                {(provided, state) => (\n                  <div\n                    className={`euiDataGridColumnSelector__item ${state.isDragging &&\n                      'euiDataGridColumnSelector__item-isDragging'}`}>\n                    <EuiFlexGroup gutterSize=\"m\" alignItems=\"center\">\n                      <EuiFlexItem>\n                        <EuiSwitch\n                          name={id}\n                          label={id}\n                          checked={visibleColumnIds.has(id)}\n                          compressed\n                          onChange={({\n                            currentTarget: { checked },\n                          }: React.FormEvent<HTMLInputElement>) => {\n                            const nextVisibleColumns = sortedColumns.filter(\n                              ({ id: columnId }) =>\n                                checked\n                                  ? visibleColumnIds.has(columnId) ||\n                                    id === columnId\n                                  : visibleColumnIds.has(columnId) &&\n                                    id !== columnId\n                            );\n                            setVisibleColumns(nextVisibleColumns);\n                          }}\n                        />\n                      </EuiFlexItem>\n                      <EuiFlexItem grow={false} {...provided.dragHandleProps}>\n                        <div {...provided.dragHandleProps}>\n                          <EuiIcon type=\"grab\" color=\"subdued\" />\n                        </div>\n                      </EuiFlexItem>\n                    </EuiFlexGroup>\n                  </div>\n                )}\n              </EuiDraggable>\n            ))}\n          </Fragment>\n        </EuiDroppable>\n      </EuiDragDropContext>\n      <EuiPopoverFooter>\n        <EuiFlexGroup gutterSize=\"s\" justifyContent=\"spaceBetween\">\n          <EuiFlexItem>\n            <EuiButtonEmpty\n              size=\"xs\"\n              flush=\"left\"\n              onClick={() => setVisibleColumns(sortedColumns)}>\n              Show all\n            </EuiButtonEmpty>\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <EuiButtonEmpty\n              size=\"xs\"\n              flush=\"right\"\n              onClick={() => setVisibleColumns([])}>\n              Hide all\n            </EuiButtonEmpty>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n      </EuiPopoverFooter>\n    </EuiPopover>\n  );\n\n  return [ColumnSelector, visibleColumns];\n};\n"]}]}