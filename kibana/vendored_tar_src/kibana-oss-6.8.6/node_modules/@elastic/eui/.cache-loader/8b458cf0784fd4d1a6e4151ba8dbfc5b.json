{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/button/button_icon/button_icon.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/button/button_icon/button_icon.tsx","mtime":1567631511595},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiButtonIcon = exports.COLORS = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _services = require(\"../../../services\");\n\nvar _common = require(\"../../common\");\n\nvar _icon = require(\"../../icon\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar colorToClassNameMap = {\n  danger: 'euiButtonIcon--danger',\n  disabled: 'euiButtonIcon--disabled',\n  ghost: 'euiButtonIcon--ghost',\n  primary: 'euiButtonIcon--primary',\n  subdued: 'euiButtonIcon--subdued',\n  success: 'euiButtonIcon--success',\n  text: 'euiButtonIcon--text',\n  warning: 'euiButtonIcon--warning'\n};\nvar COLORS = (0, _common.keysOf)(colorToClassNameMap);\nexports.COLORS = COLORS;\n\nvar EuiButtonIcon = function EuiButtonIcon(_ref) {\n  var className = _ref.className,\n      iconType = _ref.iconType,\n      _ref$iconSize = _ref.iconSize,\n      iconSize = _ref$iconSize === void 0 ? 'm' : _ref$iconSize,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      isDisabled = _ref.isDisabled,\n      href = _ref.href,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      target = _ref.target,\n      rel = _ref.rel,\n      buttonRef = _ref.buttonRef,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"iconType\", \"iconSize\", \"color\", \"isDisabled\", \"href\", \"type\", \"target\", \"rel\", \"buttonRef\"]);\n\n  if (!rest['aria-label'] && !rest['aria-labelledby']) {\n    console.warn(\"EuiButtonIcon requires aria-label or aria-labelledby to be specified because icon-only\\n      buttons are screen-reader-inaccessible without them.\");\n  }\n\n  var classes = (0, _classnames.default)('euiButtonIcon', colorToClassNameMap[color], className); // Add an icon to the button if one exists.\n\n  var buttonIcon;\n\n  if (iconType) {\n    buttonIcon = _react.default.createElement(_icon.EuiIcon, {\n      className: \"euiButtonIcon__icon\",\n      type: iconType,\n      size: iconSize,\n      \"aria-hidden\": \"true\"\n    });\n  } // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n\n  if (href && !isDisabled) {\n    var secureRel = (0, _services.getSecureRelForTarget)({\n      href: href,\n      target: target,\n      rel: rel\n    });\n    return _react.default.createElement(\"a\", _extends({\n      className: classes,\n      href: href,\n      target: target,\n      rel: secureRel,\n      ref: buttonRef\n    }, rest), buttonIcon);\n  }\n\n  return _react.default.createElement(\"button\", _extends({\n    disabled: isDisabled,\n    className: classes,\n    type: type,\n    ref: buttonRef\n  }, rest), buttonIcon);\n};\n\nexports.EuiButtonIcon = EuiButtonIcon;\nEuiButtonIcon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiButtonIcon\",\n  \"props\": {\n    \"iconSize\": {\n      \"defaultValue\": {\n        \"value\": \"'m'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/button/button_icon/button_icon.tsx"],"names":["colorToClassNameMap","danger","disabled","ghost","primary","subdued","success","text","warning","COLORS","EuiButtonIcon","className","iconType","iconSize","color","isDisabled","href","type","target","rel","buttonRef","rest","console","warn","classes","buttonIcon","secureRel"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAMA;;AAEA;;AACA;;AAQA;;;;;;;;;;AA2CA,IAAMA,mBAA2D,GAAG;AAClEC,EAAAA,MAAM,EAAE,uBAD0D;AAElEC,EAAAA,QAAQ,EAAE,yBAFwD;AAGlEC,EAAAA,KAAK,EAAE,sBAH2D;AAIlEC,EAAAA,OAAO,EAAE,wBAJyD;AAKlEC,EAAAA,OAAO,EAAE,wBALyD;AAMlEC,EAAAA,OAAO,EAAE,wBANyD;AAOlEC,EAAAA,IAAI,EAAE,qBAP4D;AAQlEC,EAAAA,OAAO,EAAE;AARyD,CAApE;AAWO,IAAMC,MAAM,GAAG,oBAAOT,mBAAP,CAAf;;;AAEA,IAAMU,aAAuC,GAAG,SAA1CA,aAA0C,OAYjD;AAAA,MAXJC,SAWI,QAXJA,SAWI;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,2BATJC,QASI;AAAA,MATJA,QASI,8BATO,GASP;AAAA,wBARJC,KAQI;AAAA,MARJA,KAQI,2BARI,SAQJ;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,uBALJC,IAKI;AAAA,MALJA,IAKI,0BALG,QAKH;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,GAGI,QAHJA,GAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,IACC;;AACJ,MAAI,CAACA,IAAI,CAAC,YAAD,CAAL,IAAuB,CAACA,IAAI,CAAC,iBAAD,CAAhC,EAAqD;AACnDC,IAAAA,OAAO,CAACC,IAAR;AAID;;AACD,MAAMC,OAAO,GAAG,yBACd,eADc,EAEdxB,mBAAmB,CAACc,KAAD,CAFL,EAGdH,SAHc,CAAhB,CAPI,CAaJ;;AACA,MAAIc,UAAJ;;AAEA,MAAIb,QAAJ,EAAc;AACZa,IAAAA,UAAU,GACR,6BAAC,aAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,IAAI,EAAEb,QAFR;AAGE,MAAA,IAAI,EAAEC,QAHR;AAIE,qBAAY;AAJd,MADF;AAQD,GAzBG,CA2BJ;AACA;;;AACA,MAAIG,IAAI,IAAI,CAACD,UAAb,EAAyB;AACvB,QAAMW,SAAS,GAAG,qCAAsB;AAAEV,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,MAAM,EAANA,MAAR;AAAgBC,MAAAA,GAAG,EAAHA;AAAhB,KAAtB,CAAlB;AAEA,WACE;AACE,MAAA,SAAS,EAAEK,OADb;AAEE,MAAA,IAAI,EAAER,IAFR;AAGE,MAAA,MAAM,EAAEE,MAHV;AAIE,MAAA,GAAG,EAAEQ,SAJP;AAKE,MAAA,GAAG,EAAEN;AALP,OAMMC,IANN,GAOGI,UAPH,CADF;AAWD;;AAED,SACE;AACE,IAAA,QAAQ,EAAEV,UADZ;AAEE,IAAA,SAAS,EAAES,OAFb;AAGE,IAAA,IAAI,EAAEP,IAHR;AAIE,IAAA,GAAG,EAAEG;AAJP,KAKMC,IALN,GAMGI,UANH,CADF;AAUD,CAnEM","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { getSecureRelForTarget } from '../../../services';\nimport { keysOf } from '../../common';\nimport { EuiIcon } from '../../icon';\nvar colorToClassNameMap = {\n  danger: 'euiButtonIcon--danger',\n  disabled: 'euiButtonIcon--disabled',\n  ghost: 'euiButtonIcon--ghost',\n  primary: 'euiButtonIcon--primary',\n  subdued: 'euiButtonIcon--subdued',\n  success: 'euiButtonIcon--success',\n  text: 'euiButtonIcon--text',\n  warning: 'euiButtonIcon--warning'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nexport var EuiButtonIcon = ({\n  className,\n  iconType,\n  iconSize = 'm',\n  color = 'primary',\n  isDisabled,\n  href,\n  type = 'button',\n  target,\n  rel,\n  buttonRef,\n  ...rest\n}) => {\n  if (!rest['aria-label'] && !rest['aria-labelledby']) {\n    console.warn(`EuiButtonIcon requires aria-label or aria-labelledby to be specified because icon-only\n      buttons are screen-reader-inaccessible without them.`);\n  }\n\n  const classes = classNames('euiButtonIcon', colorToClassNameMap[color], className); // Add an icon to the button if one exists.\n\n  let buttonIcon;\n\n  if (iconType) {\n    buttonIcon = <EuiIcon className=\"euiButtonIcon__icon\" type={iconType} size={iconSize} aria-hidden=\"true\" />;\n  } // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n\n  if (href && !isDisabled) {\n    const secureRel = getSecureRelForTarget({\n      href,\n      target,\n      rel\n    });\n    return <a className={classes} href={href} target={target} rel={secureRel} ref={buttonRef} {...rest}>\n        {buttonIcon}\n      </a>;\n  }\n\n  return <button disabled={isDisabled} className={classes} type={type} ref={buttonRef} {...rest}>\n      {buttonIcon}\n    </button>;\n};"]}]}