{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/window_event/window_event_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/window_event/window_event_example.js","mtime":1565204169576},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindowEventExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _services2 = require(\"../../../../src/services\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _basic_window_event = require(\"./basic_window_event\");\n\nvar _window_event_conflict = require(\"./window_event_conflict\");\n\nvar _mouse_position = require(\"./mouse_position\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar basicSource = require('!!raw-loader!./basic_window_event');\n\nvar basicHtml = (0, _services.renderToHtml)(_basic_window_event.BasicWindowEvent);\n\nvar conflictSource = require('!!raw-loader!./window_event_conflict');\n\nvar conflictHtml = (0, _services.renderToHtml)(_window_event_conflict.WindowEventConflict);\n\nvar mousePositionSource = require('!!raw-loader!./mouse_position');\n\nvar mousePositionHtml = (0, _services.renderToHtml)(_mouse_position.MousePosition);\nvar WindowEventExample = {\n  title: 'Window Events',\n  sections: [{\n    title: 'Basic example: closing a modal on escape',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: basicSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: basicHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Use an \", _react.default.createElement(_components2.EuiCode, null, \"EuiWindowEvent\"), \" to safely and declaratively manage adding and auto-removing event listeners to the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"window\"), \". This is preferable to setting up your own window event listeners because it will remove old listeners when your component unmounts, preventing you from accidentally leaving them around forever.\"), _react.default.createElement(\"p\", null, \"This modal example registers a listener on the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"keydown\"), \" event and listens for ESC key presses, which closes the open modal.\")),\n    components: {\n      EuiWindowEvent: _services2.EuiWindowEvent\n    },\n    props: {\n      EuiWindowEvent: _services2.EuiWindowEvent\n    },\n    demo: _react.default.createElement(_basic_window_event.BasicWindowEvent, null)\n  }, {\n    title: 'Avoiding event conflicts',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: conflictSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: conflictHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiCallOut, {\n      title: \"Be careful with global listeners\",\n      color: \"warning\",\n      iconType: \"alert\"\n    }, _react.default.createElement(\"p\", null, \"Since window event listeners are global, they can conflict with other event listeners if you aren't careful.\")), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(\"p\", null, \"The safest and best way to avoid these conflicts is to use\", ' ', _react.default.createElement(_components2.EuiCode, null, \"event.stopPropagation()\"), \" at the lowest, most specific level where you are responding to a DOM event. This will prevent the event from bubbling up to the window, and the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"WindowEvent\"), \" listener will never be triggered, avoiding the conflict.\")),\n    components: {\n      EuiWindowEvent: _services2.EuiWindowEvent\n    },\n    demo: _react.default.createElement(_window_event_conflict.WindowEventConflict, null)\n  }, {\n    title: 'Tracking mouse position',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: mousePositionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: mousePositionHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"For some DOM events, you have to listen on the window. One example of this is tracking \", _react.default.createElement(\"em\", null, \"mouse position\"), \". Below, when you click the toggle switch, your mouse position is tracked. When you toggle off, tracking stops.\"), _react.default.createElement(\"p\", null, \"If you were manually attaching window listeners, you might forget to remove the listener and be silently responding to mouse events in the background for the life of your app. The\", ' ', _react.default.createElement(_components2.EuiCode, null, \"WindowEvent\"), \" component manages that unmount/unregister process for you.\")),\n    components: {\n      EuiWindowEvent: _services2.EuiWindowEvent\n    },\n    demo: _react.default.createElement(_mouse_position.MousePosition, null)\n  }]\n};\nexports.WindowEventExample = WindowEventExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/window_event/window_event_example.js"],"names":["basicSource","require","basicHtml","BasicWindowEvent","conflictSource","conflictHtml","WindowEventConflict","mousePositionSource","mousePositionHtml","MousePosition","WindowEventExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","components","EuiWindowEvent","props","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAIA;;;;AAPA,IAAMA,WAAW,GAAGC,OAAO,CAAC,mCAAD,CAA3B;;AACA,IAAMC,SAAS,GAAG,4BAAaC,oCAAb,CAAlB;;AAGA,IAAMC,cAAc,GAAGH,OAAO,CAAC,sCAAD,CAA9B;;AACA,IAAMI,YAAY,GAAG,4BAAaC,0CAAb,CAArB;;AAGA,IAAMC,mBAAmB,GAAGN,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAMO,iBAAiB,GAAG,4BAAaC,6BAAb,CAA1B;AAEO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,KAAK,EAAE,eADyB;AAEhCC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,KAAK,EAAE,0CADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEjB;AAFR,KADM,EAKN;AACEc,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEf;AAFR,KALM,CAFV;AAYEiB,IAAAA,IAAI,EACF,0CACE,mDACS,6BAAC,oBAAD,yBADT,yFAEyD,GAFzD,EAGE,6BAAC,oBAAD,iBAHF,wMADF,EASE,0FACiD,GADjD,EAEE,6BAAC,oBAAD,kBAFF,yEATF,CAbJ;AA6BEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KA7Bd;AA8BEC,IAAAA,KAAK,EAAE;AAAED,MAAAA,cAAc,EAAdA;AAAF,KA9BT;AA+BEE,IAAAA,IAAI,EAAE,6BAAC,oCAAD;AA/BR,GADQ,EAkCR;AACEZ,IAAAA,KAAK,EAAE,0BADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEb;AAFR,KADM,EAKN;AACEU,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,0CACE,6BAAC,uBAAD;AACE,MAAA,KAAK,EAAC,kCADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAC;AAHX,OAIE,uJAJF,CADF,EAUE,6BAAC,sBAAD,OAVF,EAWE,sGAC6D,GAD7D,EAEE,6BAAC,oBAAD,kCAFF,sJAI4D,GAJ5D,EAKE,6BAAC,oBAAD,sBALF,8DAXF,CAbJ;AAkCEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KAlCd;AAmCEE,IAAAA,IAAI,EAAE,6BAAC,0CAAD;AAnCR,GAlCQ,EAuER;AACEZ,IAAAA,KAAK,EAAE,yBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,0CACE,mIAEsB,0DAFtB,oHADF,EAOE,+NAG+C,GAH/C,EAIE,6BAAC,oBAAD,sBAJF,gEAPF,CAbJ;AA6BEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KA7Bd;AA8BEE,IAAAA,IAAI,EAAE,6BAAC,6BAAD;AA9BR,GAvEQ;AAFsB,CAA3B","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiWindowEvent } from '../../../../src/services';\n\nimport { EuiCode, EuiCallOut, EuiSpacer } from '../../../../src/components';\n\nimport { BasicWindowEvent } from './basic_window_event';\nconst basicSource = require('!!raw-loader!./basic_window_event');\nconst basicHtml = renderToHtml(BasicWindowEvent);\n\nimport { WindowEventConflict } from './window_event_conflict';\nconst conflictSource = require('!!raw-loader!./window_event_conflict');\nconst conflictHtml = renderToHtml(WindowEventConflict);\n\nimport { MousePosition } from './mouse_position';\nconst mousePositionSource = require('!!raw-loader!./mouse_position');\nconst mousePositionHtml = renderToHtml(MousePosition);\n\nexport const WindowEventExample = {\n  title: 'Window Events',\n  sections: [\n    {\n      title: 'Basic example: closing a modal on escape',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: basicSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: basicHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Use an <EuiCode>EuiWindowEvent</EuiCode> to safely and declaratively\n            manage adding and auto-removing event listeners to the{' '}\n            <EuiCode>window</EuiCode>. This is preferable to setting up your own\n            window event listeners because it will remove old listeners when\n            your component unmounts, preventing you from accidentally leaving\n            them around forever.\n          </p>\n          <p>\n            This modal example registers a listener on the{' '}\n            <EuiCode>keydown</EuiCode> event and listens for ESC key presses,\n            which closes the open modal.\n          </p>\n        </div>\n      ),\n      components: { EuiWindowEvent },\n      props: { EuiWindowEvent },\n      demo: <BasicWindowEvent />,\n    },\n    {\n      title: 'Avoiding event conflicts',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: conflictSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: conflictHtml,\n        },\n      ],\n      text: (\n        <div>\n          <EuiCallOut\n            title=\"Be careful with global listeners\"\n            color=\"warning\"\n            iconType=\"alert\">\n            <p>\n              Since window event listeners are global, they can conflict with\n              other event listeners if you aren&apos;t careful.\n            </p>\n          </EuiCallOut>\n          <EuiSpacer />\n          <p>\n            The safest and best way to avoid these conflicts is to use{' '}\n            <EuiCode>event.stopPropagation()</EuiCode> at the lowest, most\n            specific level where you are responding to a DOM event. This will\n            prevent the event from bubbling up to the window, and the{' '}\n            <EuiCode>WindowEvent</EuiCode> listener will never be triggered,\n            avoiding the conflict.\n          </p>\n        </div>\n      ),\n      components: { EuiWindowEvent },\n      demo: <WindowEventConflict />,\n    },\n    {\n      title: 'Tracking mouse position',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: mousePositionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: mousePositionHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            For some DOM events, you have to listen on the window. One example\n            of this is tracking <em>mouse position</em>. Below, when you click\n            the toggle switch, your mouse position is tracked. When you toggle\n            off, tracking stops.\n          </p>\n          <p>\n            If you were manually attaching window listeners, you might forget to\n            remove the listener and be silently responding to mouse events in\n            the background for the life of your app. The{' '}\n            <EuiCode>WindowEvent</EuiCode> component manages that\n            unmount/unregister process for you.\n          </p>\n        </div>\n      ),\n      components: { EuiWindowEvent },\n      demo: <MousePosition />,\n    },\n  ],\n};\n"]}]}