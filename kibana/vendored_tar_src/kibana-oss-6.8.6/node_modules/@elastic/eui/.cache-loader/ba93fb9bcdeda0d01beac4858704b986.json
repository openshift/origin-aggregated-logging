{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/search_bar/filters/filters.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/search_bar/filters/filters.js","mtime":1565204169980},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilterConfigType = exports.createFilter = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _is_filter = require(\"./is_filter\");\n\nvar _field_value_selection_filter = require(\"./field_value_selection_filter\");\n\nvar _field_value_toggle_filter = require(\"./field_value_toggle_filter\");\n\nvar _field_value_toggle_group_filter = require(\"./field_value_toggle_group_filter\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createFilter = function createFilter(index, config, query, onChange) {\n  var props = {\n    index: index,\n    config: config,\n    query: query,\n    onChange: onChange\n  };\n\n  switch (config.type) {\n    case 'is':\n      return _react.default.createElement(_is_filter.IsFilter, props);\n\n    case 'field_value_selection':\n      return _react.default.createElement(_field_value_selection_filter.FieldValueSelectionFilter, props);\n\n    case 'field_value_toggle':\n      return _react.default.createElement(_field_value_toggle_filter.FieldValueToggleFilter, props);\n\n    case 'field_value_toggle_group':\n      return _react.default.createElement(_field_value_toggle_group_filter.FieldValueToggleGroupFilter, props);\n\n    default:\n      throw new Error(\"Unknown search filter type [\".concat(config.type, \"]\"));\n  }\n};\n\nexports.createFilter = createFilter;\n\nvar FilterConfigType = _propTypes.default.oneOfType([_is_filter.IsFilterConfigType, _field_value_selection_filter.FieldValueSelectionFilterConfigType, _field_value_toggle_filter.FieldValueToggleFilterConfigType, _field_value_toggle_group_filter.FieldValueToggleGroupFilterConfigType]);\n\nexports.FilterConfigType = FilterConfigType;\ncreateFilter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"createFilter\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/search_bar/filters/filters.js"],"names":["createFilter","index","config","query","onChange","props","type","Error","FilterConfigType","PropTypes","oneOfType","IsFilterConfigType","FieldValueSelectionFilterConfigType","FieldValueToggleFilterConfigType","FieldValueToggleGroupFilterConfigType"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;AAIA;;AAIA;;;;AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAoC;AAC9D,MAAMC,KAAK,GAAG;AAAEJ,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,MAAM,EAANA,MAAT;AAAiBC,IAAAA,KAAK,EAALA,KAAjB;AAAwBC,IAAAA,QAAQ,EAARA;AAAxB,GAAd;;AACA,UAAQF,MAAM,CAACI,IAAf;AACE,SAAK,IAAL;AACE,aAAO,6BAAC,mBAAD,EAAcD,KAAd,CAAP;;AACF,SAAK,uBAAL;AACE,aAAO,6BAAC,uDAAD,EAA+BA,KAA/B,CAAP;;AACF,SAAK,oBAAL;AACE,aAAO,6BAAC,iDAAD,EAA4BA,KAA5B,CAAP;;AACF,SAAK,0BAAL;AACE,aAAO,6BAAC,4DAAD,EAAiCA,KAAjC,CAAP;;AACF;AACE,YAAM,IAAIE,KAAJ,uCAAyCL,MAAM,CAACI,IAAhD,OAAN;AAVJ;AAYD,CAdM;;;;AAgBA,IAAME,gBAAgB,GAAGC,mBAAUC,SAAV,CAAoB,CAClDC,6BADkD,EAElDC,iEAFkD,EAGlDC,2DAHkD,EAIlDC,sEAJkD,CAApB,CAAzB","sourcesContent":["import React from 'react';\nimport { IsFilter, IsFilterConfigType } from './is_filter';\nimport {\n  FieldValueSelectionFilter,\n  FieldValueSelectionFilterConfigType,\n} from './field_value_selection_filter';\nimport {\n  FieldValueToggleFilter,\n  FieldValueToggleFilterConfigType,\n} from './field_value_toggle_filter';\nimport {\n  FieldValueToggleGroupFilter,\n  FieldValueToggleGroupFilterConfigType,\n} from './field_value_toggle_group_filter';\nimport PropTypes from 'prop-types';\n\nexport const createFilter = (index, config, query, onChange) => {\n  const props = { index, config, query, onChange };\n  switch (config.type) {\n    case 'is':\n      return <IsFilter {...props} />;\n    case 'field_value_selection':\n      return <FieldValueSelectionFilter {...props} />;\n    case 'field_value_toggle':\n      return <FieldValueToggleFilter {...props} />;\n    case 'field_value_toggle_group':\n      return <FieldValueToggleGroupFilter {...props} />;\n    default:\n      throw new Error(`Unknown search filter type [${config.type}]`);\n  }\n};\n\nexport const FilterConfigType = PropTypes.oneOfType([\n  IsFilterConfigType,\n  FieldValueSelectionFilterConfigType,\n  FieldValueToggleFilterConfigType,\n  FieldValueToggleGroupFilterConfigType,\n]);\n"]}]}