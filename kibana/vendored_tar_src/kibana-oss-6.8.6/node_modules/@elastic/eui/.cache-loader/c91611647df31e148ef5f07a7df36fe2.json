{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/key_pad_menu/key_pad_menu_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/key_pad_menu/key_pad_menu_example.js","mtime":1565204169508},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeyPadMenuExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _key_pad_menu = _interopRequireDefault(require(\"./key_pad_menu\"));\n\nvar _key_pad_menu_item_button = _interopRequireDefault(require(\"./key_pad_menu_item_button\"));\n\nvar _key_pad_beta = _interopRequireDefault(require(\"./key_pad_beta\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar keyPadMenuSource = require('!!raw-loader!./key_pad_menu');\n\nvar keyPadMenuHtml = (0, _services.renderToHtml)(_key_pad_menu.default);\nvar keyPadMenuSnippet = \"<EuiKeyPadMenu>\\n  <EuiKeyPadMenuItem label={label1} href=\\\"#\\\">\\n    <EuiIcon type={icon1} size=\\\"l\\\" />\\n  </EuiKeyPadMenuItem>\\n\\n  <EuiKeyPadMenuItem label={label2} href=\\\"#\\\">\\n    <EuiIcon type={icon2} size=\\\"l\\\" />\\n  </EuiKeyPadMenuItem>\\n</EuiKeyPadMenu>\\n\";\n\nvar keyPadMenuItemButtonSource = require('!!raw-loader!./key_pad_menu_item_button');\n\nvar keyPadMenuItemButtonHtml = (0, _services.renderToHtml)(_key_pad_menu_item_button.default);\nvar keyPadMenuItemButtonSnippet = \"<EuiKeyPadMenuItemButton\\n  label={label}\\n  onClick={this.handleClick}>\\n  <EuiIcon type={icon} size=\\\"l\\\" />\\n</EuiKeyPadMenuItemButton>\\n\";\n\nvar keyPadBetaSource = require('!!raw-loader!./key_pad_beta');\n\nvar keyPadBetaHtml = (0, _services.renderToHtml)(_key_pad_beta.default);\nvar keyPadBetaSnippet = \"<EuiKeyPadMenuItem\\n  label={label}\\n  href=\\\"#\\\"\\n  betaBadgeLabel={betaBadgeLabel}\\n  betaBadgeTooltipContent={tooltipContent}\\n  betaBadgeIconType={badgeIconType}>\\n  <EuiIcon type={menuItemIcon} size=\\\"l\\\" />\\n</EuiKeyPadMenuItem>\\n\";\nvar KeyPadMenuExample = {\n  title: 'Key Pad Menu',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: keyPadMenuSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: keyPadMenuHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"The KeyPadMenu component presents KeyPadMenuItems in a tiled format, with a fixed width which will accommodate three items and then wrap.\"),\n    props: {\n      EuiKeyPadMenu: _components2.EuiKeyPadMenu,\n      EuiKeyPadMenuItem: _components2.EuiKeyPadMenuItem\n    },\n    snippet: keyPadMenuSnippet,\n    demo: _react.default.createElement(_key_pad_menu.default, null)\n  }, {\n    title: 'Item Button',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: keyPadMenuItemButtonSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: keyPadMenuItemButtonHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"The KeyPadMenuItem component is a link by default, but you can swap it out for a KeyPadMenuItemButton if you want \", _react.default.createElement(_components2.EuiCode, null, \"onClick\"), ' ', \"behavior.\"),\n    snippet: keyPadMenuItemButtonSnippet,\n    demo: _react.default.createElement(_key_pad_menu_item_button.default, null)\n  }, {\n    title: 'Beta item',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: keyPadBetaSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: keyPadBetaHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"If the item links to a module that is not GA (beta, lab, etc), you can add a \", _react.default.createElement(_components2.EuiCode, null, \"betaBadgeLabel\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"betaBadgeTooltipContent\"), \" to the card and it will properly create and position an \", _react.default.createElement(_components2.EuiCode, null, \"EuiBetaBadge\"), \".\"), _react.default.createElement(\"p\", null, \"Supplying just a label will only show the first letter in the badge and supply the full label to the tooltip. You can also pass an\", ' ', _react.default.createElement(_components2.EuiCode, null, \"iconType\"), \" to replace the letter only badge and the label will still become the title.\")),\n    snippet: keyPadBetaSnippet,\n    demo: _react.default.createElement(_key_pad_beta.default, null)\n  }]\n};\nexports.KeyPadMenuExample = KeyPadMenuExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/key_pad_menu/key_pad_menu_example.js"],"names":["keyPadMenuSource","require","keyPadMenuHtml","KeyPadMenu","keyPadMenuSnippet","keyPadMenuItemButtonSource","keyPadMenuItemButtonHtml","KeyPadMenuItemButton","keyPadMenuItemButtonSnippet","keyPadBetaSource","keyPadBetaHtml","KeyPadBeta","keyPadBetaSnippet","KeyPadMenuExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiKeyPadMenu","EuiKeyPadMenuItem","snippet","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAMA;;AAcA;;AAUA;;;;AAvBA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,6BAAD,CAAhC;;AACA,IAAMC,cAAc,GAAG,4BAAaC,qBAAb,CAAvB;AACA,IAAMC,iBAAiB,8QAAvB;;AAYA,IAAMC,0BAA0B,GAAGJ,OAAO,CAAC,yCAAD,CAA1C;;AACA,IAAMK,wBAAwB,GAAG,4BAAaC,iCAAb,CAAjC;AACA,IAAMC,2BAA2B,iJAAjC;;AAQA,IAAMC,gBAAgB,GAAGR,OAAO,CAAC,6BAAD,CAAhC;;AACA,IAAMS,cAAc,GAAG,4BAAaC,qBAAb,CAAvB;AACA,IAAMC,iBAAiB,iPAAvB;AAUO,IAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,cADwB;AAE/BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEpB;AAFR,KADM,EAKN;AACEiB,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAElB;AAFR,KALM,CADV;AAWEoB,IAAAA,IAAI,EACF,oLAZJ;AAiBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAbA,0BAAF;AAAiBC,MAAAA,iBAAiB,EAAjBA;AAAjB,KAjBT;AAkBEC,IAAAA,OAAO,EAAEtB,iBAlBX;AAmBEuB,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AAnBR,GADQ,EAsBR;AACEb,IAAAA,KAAK,EAAE,aADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEf;AAFR,KADM,EAKN;AACEY,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEd;AAFR,KALM,CAFV;AAYEgB,IAAAA,IAAI,EACF,8JAE6C,6BAAC,oBAAD,kBAF7C,EAEwE,GAFxE,cAbJ;AAmBEI,IAAAA,OAAO,EAAElB,2BAnBX;AAoBEmB,IAAAA,IAAI,EAAE,6BAAC,iCAAD;AApBR,GAtBQ,EA4CR;AACEb,IAAAA,KAAK,EAAE,WADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEV;AAFR,KALM,CAFV;AAYEY,IAAAA,IAAI,EACF,0CACE,yHAEY,6BAAC,oBAAD,yBAFZ,UAEkD,GAFlD,EAGE,6BAAC,oBAAD,kCAHF,+DAIkC,6BAAC,oBAAD,uBAJlC,MADF,EAOE,8KAEiE,GAFjE,EAGE,6BAAC,oBAAD,mBAHF,iFAPF,CAbJ;AA4BEI,IAAAA,OAAO,EAAEd,iBA5BX;AA6BEe,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AA7BR,GA5CQ;AAFqB,CAA1B","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiKeyPadMenu,\n  EuiKeyPadMenuItem,\n} from '../../../../src/components';\n\nimport KeyPadMenu from './key_pad_menu';\nconst keyPadMenuSource = require('!!raw-loader!./key_pad_menu');\nconst keyPadMenuHtml = renderToHtml(KeyPadMenu);\nconst keyPadMenuSnippet = `<EuiKeyPadMenu>\n  <EuiKeyPadMenuItem label={label1} href=\"#\">\n    <EuiIcon type={icon1} size=\"l\" />\n  </EuiKeyPadMenuItem>\n\n  <EuiKeyPadMenuItem label={label2} href=\"#\">\n    <EuiIcon type={icon2} size=\"l\" />\n  </EuiKeyPadMenuItem>\n</EuiKeyPadMenu>\n`;\n\nimport KeyPadMenuItemButton from './key_pad_menu_item_button';\nconst keyPadMenuItemButtonSource = require('!!raw-loader!./key_pad_menu_item_button');\nconst keyPadMenuItemButtonHtml = renderToHtml(KeyPadMenuItemButton);\nconst keyPadMenuItemButtonSnippet = `<EuiKeyPadMenuItemButton\n  label={label}\n  onClick={this.handleClick}>\n  <EuiIcon type={icon} size=\"l\" />\n</EuiKeyPadMenuItemButton>\n`;\n\nimport KeyPadBeta from './key_pad_beta';\nconst keyPadBetaSource = require('!!raw-loader!./key_pad_beta');\nconst keyPadBetaHtml = renderToHtml(KeyPadBeta);\nconst keyPadBetaSnippet = `<EuiKeyPadMenuItem\n  label={label}\n  href=\"#\"\n  betaBadgeLabel={betaBadgeLabel}\n  betaBadgeTooltipContent={tooltipContent}\n  betaBadgeIconType={badgeIconType}>\n  <EuiIcon type={menuItemIcon} size=\"l\" />\n</EuiKeyPadMenuItem>\n`;\n\nexport const KeyPadMenuExample = {\n  title: 'Key Pad Menu',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: keyPadMenuSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: keyPadMenuHtml,\n        },\n      ],\n      text: (\n        <p>\n          The KeyPadMenu component presents KeyPadMenuItems in a tiled format,\n          with a fixed width which will accommodate three items and then wrap.\n        </p>\n      ),\n      props: { EuiKeyPadMenu, EuiKeyPadMenuItem },\n      snippet: keyPadMenuSnippet,\n      demo: <KeyPadMenu />,\n    },\n    {\n      title: 'Item Button',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: keyPadMenuItemButtonSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: keyPadMenuItemButtonHtml,\n        },\n      ],\n      text: (\n        <p>\n          The KeyPadMenuItem component is a link by default, but you can swap it\n          out for a KeyPadMenuItemButton if you want <EuiCode>onClick</EuiCode>{' '}\n          behavior.\n        </p>\n      ),\n      snippet: keyPadMenuItemButtonSnippet,\n      demo: <KeyPadMenuItemButton />,\n    },\n    {\n      title: 'Beta item',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: keyPadBetaSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: keyPadBetaHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            If the item links to a module that is not GA (beta, lab, etc), you\n            can add a <EuiCode>betaBadgeLabel</EuiCode> and{' '}\n            <EuiCode>betaBadgeTooltipContent</EuiCode> to the card and it will\n            properly create and position an <EuiCode>EuiBetaBadge</EuiCode>.\n          </p>\n          <p>\n            Supplying just a label will only show the first letter in the badge\n            and supply the full label to the tooltip. You can also pass an{' '}\n            <EuiCode>iconType</EuiCode> to replace the letter only badge and the\n            label will still become the title.\n          </p>\n        </div>\n      ),\n      snippet: keyPadBetaSnippet,\n      demo: <KeyPadBeta />,\n    },\n  ],\n};\n"]}]}