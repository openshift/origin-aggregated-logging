{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/basic_table/in_memory_table.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/basic_table/in_memory_table.js","mtime":1565204169602},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiInMemoryTable = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _basic_table = require(\"./basic_table\");\n\nvar _pagination_bar = require(\"./pagination_bar\");\n\nvar _predicate = require(\"../../services/predicate\");\n\nvar _sort = require(\"../../services/sort\");\n\nvar _search_bar = require(\"../search_bar\");\n\nvar _spacer = require(\"../spacer/spacer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// same as ColumnType from EuiBasicTable, but need to modify the `sortable` type\nvar ColumnType = _propTypes.default.oneOfType([_propTypes.default.shape(_objectSpread({}, _basic_table.FieldDataColumnTypeShape, {\n  sortable: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func])\n})), _basic_table.ComputedColumnType, _basic_table.ActionsColumnType]);\n\nvar InMemoryTablePropTypes = {\n  columns: _propTypes.default.arrayOf(ColumnType).isRequired,\n  items: _propTypes.default.array,\n  loading: _propTypes.default.bool,\n  message: _propTypes.default.node,\n  error: _propTypes.default.string,\n  compressed: _propTypes.default.bool,\n  search: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n    defaultQuery: _search_bar.QueryType,\n    box: _propTypes.default.shape(_objectSpread({}, _search_bar.SearchBoxConfigPropTypes, {\n      schema: _propTypes.default.oneOfType([// here we enable the user to just assign 'true' to the schema, in which case\n      // we will auto-generate it out of the columns configuration\n      _propTypes.default.bool, _search_bar.SearchBoxConfigPropTypes.schema])\n    })),\n    filters: _search_bar.SearchFiltersFiltersType,\n    onChange: _propTypes.default.func,\n    executeQueryOptions: _propTypes.default.shape({\n      defaultFields: _propTypes.default.arrayOf(_propTypes.default.string),\n      isClauseMatcher: _propTypes.default.func,\n      explain: _propTypes.default.bool\n    })\n  })]),\n  pagination: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n    pageSizeOptions: _propTypes.default.arrayOf(_propTypes.default.number)\n  }), _propTypes.default.shape({\n    initialPageIndex: _propTypes.default.number,\n    initialPageSize: _propTypes.default.number,\n    pageSizeOptions: _propTypes.default.arrayOf(_propTypes.default.number)\n  })]),\n  sorting: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n    sort: _sort.PropertySortType\n  })]),\n\n  /**\n   * Set `allowNeutralSort` to false to force column sorting. Defaults to true.\n   */\n  allowNeutralSort: _propTypes.default.bool,\n  selection: _basic_table.SelectionType,\n  itemId: _basic_table.ItemIdType,\n  rowProps: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  cellProps: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  onTableChange: _propTypes.default.func\n};\n\nvar getInitialQuery = function getInitialQuery(search) {\n  if (!search) {\n    return;\n  }\n\n  var query = search.defaultQuery || '';\n  return (0, _predicate.isString)(query) ? _search_bar.EuiSearchBar.Query.parse(query) : query;\n};\n\nvar getInitialPagination = function getInitialPagination(pagination) {\n  if (!pagination) {\n    return {\n      pageIndex: undefined,\n      pageSize: undefined\n    };\n  }\n\n  var _pagination$initialPa = pagination.initialPageIndex,\n      initialPageIndex = _pagination$initialPa === void 0 ? 0 : _pagination$initialPa,\n      initialPageSize = pagination.initialPageSize,\n      _pagination$pageSizeO = pagination.pageSizeOptions,\n      pageSizeOptions = _pagination$pageSizeO === void 0 ? _pagination_bar.defaults.pageSizeOptions : _pagination$pageSizeO,\n      hidePerPageOptions = pagination.hidePerPageOptions;\n\n  if (!hidePerPageOptions && initialPageSize && (!pageSizeOptions || !pageSizeOptions.includes(initialPageSize))) {\n    throw new Error(\"EuiInMemoryTable received initialPageSize \".concat(initialPageSize, \", which wasn't provided within pageSizeOptions.\"));\n  }\n\n  var defaultPageSize = pageSizeOptions ? pageSizeOptions[0] : _pagination_bar.defaults.pageSizeOptions[0];\n  return {\n    pageIndex: initialPageIndex,\n    pageSize: initialPageSize || defaultPageSize,\n    pageSizeOptions: pageSizeOptions,\n    hidePerPageOptions: hidePerPageOptions\n  };\n};\n\nfunction findColumnByProp(columns, prop, value) {\n  for (var i = 0; i < columns.length; i++) {\n    var column = columns[i];\n\n    if (column[prop] === value) {\n      return column;\n    }\n  }\n}\n\nvar getInitialSorting = function getInitialSorting(columns, sorting) {\n  if (!sorting || !sorting.sort) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined\n    };\n  }\n\n  var _sorting$sort = sorting.sort,\n      sortable = _sorting$sort.field,\n      sortDirection = _sorting$sort.direction; // sortable could be a column's `field` or its `name`\n  // for backwards compatibility `field` must be checked first\n\n  var sortColumn = findColumnByProp(columns, 'field', sortable);\n\n  if (sortColumn == null) {\n    sortColumn = findColumnByProp(columns, 'name', sortable);\n  }\n\n  if (sortColumn == null) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined\n    };\n  }\n\n  var sortName = sortColumn.name;\n  return {\n    sortName: sortName,\n    sortDirection: sortDirection\n  };\n};\n\nvar EuiInMemoryTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiInMemoryTable, _Component);\n\n  _createClass(EuiInMemoryTable, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.items !== prevState.prevProps.items) {\n        // We have new items because an external search has completed, so reset pagination state.\n        return {\n          prevProps: _objectSpread({}, prevState.prevProps, {\n            items: nextProps.items\n          }),\n          pageIndex: 0\n        };\n      }\n\n      var _getInitialSorting = getInitialSorting(nextProps.columns, nextProps.sorting),\n          sortName = _getInitialSorting.sortName,\n          sortDirection = _getInitialSorting.sortDirection;\n\n      if (sortName !== prevState.prevProps.sortName || sortDirection !== prevState.prevProps.sortDirection) {\n        return {\n          sortName: sortName,\n          sortDirection: sortDirection\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function EuiInMemoryTable(props) {\n    var _this;\n\n    _classCallCheck(this, EuiInMemoryTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiInMemoryTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onTableChange\", function (_ref) {\n      var _ref$page = _ref.page,\n          page = _ref$page === void 0 ? {} : _ref$page,\n          _ref$sort = _ref.sort,\n          sort = _ref$sort === void 0 ? {} : _ref$sort;\n      var pageIndex = page.index,\n          pageSize = page.size;\n      var sortName = sort.field,\n          sortDirection = sort.direction; // To keep backwards compatibility reportedSortName needs to be tracked separately\n      // from sortName; sortName gets stored internally while reportedSortName is sent to the callback\n\n      var reportedSortName = sortName; // EuiBasicTable returns the column's `field` if it exists instead of `name`,\n      // map back to `name` if this is the case\n\n      for (var i = 0; i < _this.props.columns.length; i++) {\n        var column = _this.props.columns[i];\n\n        if (column.field === sortName) {\n          sortName = column.name;\n          break;\n        }\n      } // Allow going back to 'neutral' sorting\n\n\n      if (_this.state.allowNeutralSort && _this.state.sortName === sortName && _this.state.sortDirection === 'desc' && sortDirection === 'asc') {\n        sortName = '';\n        reportedSortName = '';\n        sortDirection = '';\n      }\n\n      if (_this.props.onTableChange) {\n        _this.props.onTableChange({\n          page: page,\n          sort: {\n            field: reportedSortName,\n            direction: sortDirection\n          }\n        });\n      }\n\n      _this.setState({\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        sortName: sortName,\n        sortDirection: sortDirection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onQueryChange\", function (_ref2) {\n      var query = _ref2.query,\n          queryText = _ref2.queryText,\n          error = _ref2.error;\n\n      if (_this.props.search.onChange) {\n        var shouldQueryInMemory = _this.props.search.onChange({\n          query: query,\n          queryText: queryText,\n          error: error\n        });\n\n        if (!shouldQueryInMemory) {\n          return;\n        }\n      } // Reset pagination state.\n\n\n      _this.setState({\n        query: query,\n        pageIndex: 0\n      });\n    });\n\n    var columns = props.columns,\n        search = props.search,\n        pagination = props.pagination,\n        sorting = props.sorting,\n        allowNeutralSort = props.allowNeutralSort;\n\n    var _getInitialPagination = getInitialPagination(pagination),\n        _pageIndex = _getInitialPagination.pageIndex,\n        _pageSize = _getInitialPagination.pageSize,\n        pageSizeOptions = _getInitialPagination.pageSizeOptions,\n        hidePerPageOptions = _getInitialPagination.hidePerPageOptions;\n\n    var _getInitialSorting2 = getInitialSorting(columns, sorting),\n        _sortName = _getInitialSorting2.sortName,\n        _sortDirection = _getInitialSorting2.sortDirection;\n\n    _this.state = {\n      prevProps: {\n        items: props.items,\n        sortName: _sortName,\n        sortDirection: _sortDirection\n      },\n      query: getInitialQuery(search),\n      pageIndex: _pageIndex,\n      pageSize: _pageSize,\n      pageSizeOptions: pageSizeOptions,\n      sortName: _sortName,\n      sortDirection: _sortDirection,\n      allowNeutralSort: allowNeutralSort === false ? false : true,\n      hidePerPageOptions: hidePerPageOptions\n    };\n    return _this;\n  }\n\n  _createClass(EuiInMemoryTable, [{\n    key: \"renderSearchBar\",\n    value: function renderSearchBar() {\n      var search = this.props.search;\n\n      if (search) {\n        var _ref3 = (0, _predicate.isBoolean)(search) ? {} : search,\n            onChange = _ref3.onChange,\n            searchBarProps = _objectWithoutProperties(_ref3, [\"onChange\"]);\n\n        if (searchBarProps.box && searchBarProps.box.schema === true) {\n          searchBarProps.box.schema = this.resolveSearchSchema();\n        }\n\n        return _react.default.createElement(_search_bar.EuiSearchBar, _extends({\n          onChange: this.onQueryChange\n        }, searchBarProps));\n      }\n    }\n  }, {\n    key: \"resolveSearchSchema\",\n    value: function resolveSearchSchema() {\n      var columns = this.props.columns;\n      return columns.reduce(function (schema, column) {\n        if (column.field) {\n          var type = column.dataType || 'string';\n          schema.fields[column.field] = {\n            type: type\n          };\n        }\n\n        return schema;\n      }, {\n        strict: true,\n        fields: {}\n      });\n    }\n  }, {\n    key: \"getItemSorter\",\n    value: function getItemSorter() {\n      var _this$state = this.state,\n          sortName = _this$state.sortName,\n          sortDirection = _this$state.sortDirection;\n      var columns = this.props.columns;\n      var sortColumn = columns.find(function (_ref4) {\n        var name = _ref4.name;\n        return name === sortName;\n      });\n\n      if (sortColumn == null) {\n        // can't return a non-function so return a function that says everything is the same\n        return function () {\n          return function () {\n            return 0;\n          };\n        };\n      }\n\n      var sortable = sortColumn.sortable;\n\n      if (typeof sortable === 'function') {\n        return _sort.Comparators.value(sortable, _sort.Comparators.default(sortDirection));\n      }\n\n      return _sort.Comparators.property(sortColumn.field, _sort.Comparators.default(sortDirection));\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      var executeQueryOptions = this.props.executeQueryOptions;\n      var items = this.state.prevProps.items;\n\n      if (!items.length) {\n        return {\n          items: [],\n          totalItemCount: 0\n        };\n      }\n\n      var _this$state2 = this.state,\n          query = _this$state2.query,\n          sortName = _this$state2.sortName,\n          pageIndex = _this$state2.pageIndex,\n          pageSize = _this$state2.pageSize;\n      var matchingItems = query ? _search_bar.EuiSearchBar.Query.execute(query, items, executeQueryOptions) : items;\n      var sortedItems = sortName ? matchingItems.slice(0) // avoid mutating the source array\n      .sort(this.getItemSorter()) // sort, causes mutation\n      : matchingItems;\n      var visibleItems = pageSize ? function () {\n        var startIndex = pageIndex * pageSize;\n        return sortedItems.slice(startIndex, Math.min(startIndex + pageSize, sortedItems.length));\n      }() : sortedItems;\n      return {\n        items: visibleItems,\n        totalItemCount: matchingItems.length\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          columns = _this$props.columns,\n          loading = _this$props.loading,\n          message = _this$props.message,\n          error = _this$props.error,\n          selection = _this$props.selection,\n          isSelectable = _this$props.isSelectable,\n          hasActions = _this$props.hasActions,\n          compressed = _this$props.compressed,\n          hasPagination = _this$props.pagination,\n          hasSorting = _this$props.sorting,\n          itemIdToExpandedRowMap = _this$props.itemIdToExpandedRowMap,\n          itemId = _this$props.itemId,\n          rowProps = _this$props.rowProps,\n          cellProps = _this$props.cellProps,\n          _unuseditems = _this$props.items,\n          search = _this$props.search,\n          onTableChange = _this$props.onTableChange,\n          executeQueryOptions = _this$props.executeQueryOptions,\n          allowNeutralSort = _this$props.allowNeutralSort,\n          rest = _objectWithoutProperties(_this$props, [\"columns\", \"loading\", \"message\", \"error\", \"selection\", \"isSelectable\", \"hasActions\", \"compressed\", \"pagination\", \"sorting\", \"itemIdToExpandedRowMap\", \"itemId\", \"rowProps\", \"cellProps\", \"items\", \"search\", \"onTableChange\", \"executeQueryOptions\", \"allowNeutralSort\"]);\n\n      var _this$state3 = this.state,\n          pageIndex = _this$state3.pageIndex,\n          pageSize = _this$state3.pageSize,\n          pageSizeOptions = _this$state3.pageSizeOptions,\n          sortName = _this$state3.sortName,\n          sortDirection = _this$state3.sortDirection,\n          hidePerPageOptions = _this$state3.hidePerPageOptions;\n\n      var _this$getItems = this.getItems(),\n          items = _this$getItems.items,\n          totalItemCount = _this$getItems.totalItemCount;\n\n      var pagination = !hasPagination ? undefined : {\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        pageSizeOptions: pageSizeOptions,\n        totalItemCount: totalItemCount,\n        hidePerPageOptions: hidePerPageOptions\n      }; // Data loaded from a server can have a default sort order which is meaningful to the\n      // user, but can't be reproduced with client-side sort logic. So we allow the table to display\n      // rows in the order in which they're initially loaded by providing an undefined sorting prop.\n\n      var sorting = !hasSorting ? undefined : {\n        sort: !sortName && !sortDirection ? undefined : {\n          field: sortName,\n          direction: sortDirection\n        },\n        allowNeutralSort: this.state.allowNeutralSort\n      };\n      var searchBar = this.renderSearchBar();\n\n      var table = _react.default.createElement(_basic_table.EuiBasicTable, _extends({\n        items: items,\n        itemId: itemId,\n        rowProps: rowProps,\n        cellProps: cellProps,\n        columns: columns,\n        pagination: pagination,\n        sorting: sorting,\n        selection: selection,\n        isSelectable: isSelectable,\n        hasActions: hasActions,\n        onChange: this.onTableChange,\n        error: error,\n        loading: loading,\n        noItemsMessage: message,\n        compressed: compressed,\n        itemIdToExpandedRowMap: itemIdToExpandedRowMap\n      }, rest));\n\n      if (!searchBar) {\n        return table;\n      }\n\n      return _react.default.createElement(\"div\", null, searchBar, _react.default.createElement(_spacer.EuiSpacer, {\n        size: \"l\"\n      }), table);\n    }\n  }]);\n\n  return EuiInMemoryTable;\n}(_react.Component);\n\nexports.EuiInMemoryTable = EuiInMemoryTable;\n\n_defineProperty(EuiInMemoryTable, \"propTypes\", InMemoryTablePropTypes);\n\n_defineProperty(EuiInMemoryTable, \"defaultProps\", {\n  items: [],\n  pagination: false,\n  sorting: false,\n  responsive: true,\n  executeQueryOptions: {}\n});\n\nEuiInMemoryTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"nextProps\",\n      \"type\": null\n    }, {\n      \"name\": \"prevState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onTableChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ page = {}, sort = {} }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onQueryChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ query, queryText, error }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderSearchBar\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"resolveSearchSchema\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"getItemSorter\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"getItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiInMemoryTable\",\n  \"props\": {\n    \"items\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"bool\"\n        }, {\n          \"name\": \"shape\",\n          \"value\": {\n            \"pageSizeOptions\": {\n              \"name\": \"arrayOf\",\n              \"value\": {\n                \"name\": \"number\"\n              },\n              \"required\": false\n            }\n          }\n        }, {\n          \"name\": \"shape\",\n          \"value\": {\n            \"initialPageIndex\": {\n              \"name\": \"number\",\n              \"required\": false\n            },\n            \"initialPageSize\": {\n              \"name\": \"number\",\n              \"required\": false\n            },\n            \"pageSizeOptions\": {\n              \"name\": \"arrayOf\",\n              \"value\": {\n                \"name\": \"number\"\n              },\n              \"required\": false\n            }\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"sorting\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"bool\"\n        }, {\n          \"name\": \"shape\",\n          \"value\": {\n            \"sort\": {\n              \"name\": \"custom\",\n              \"raw\": \"PropertySortType\",\n              \"required\": false\n            }\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"responsive\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"executeQueryOptions\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"custom\",\n          \"raw\": \"ColumnType\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"message\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"search\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"bool\"\n        }, {\n          \"name\": \"shape\",\n          \"value\": {\n            \"defaultQuery\": {\n              \"name\": \"custom\",\n              \"raw\": \"QueryType\",\n              \"required\": false\n            },\n            \"box\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"schema\": {\n                  \"name\": \"union\",\n                  \"value\": [{\n                    \"name\": \"bool\"\n                  }, {\n                    \"name\": \"custom\",\n                    \"raw\": \"SearchBoxConfigPropTypes.schema\"\n                  }],\n                  \"required\": false\n                }\n              },\n              \"required\": false\n            },\n            \"filters\": {\n              \"name\": \"custom\",\n              \"raw\": \"SearchFiltersFiltersType\",\n              \"required\": false\n            },\n            \"onChange\": {\n              \"name\": \"func\",\n              \"required\": false\n            },\n            \"executeQueryOptions\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"defaultFields\": {\n                  \"name\": \"arrayOf\",\n                  \"value\": {\n                    \"name\": \"string\"\n                  },\n                  \"required\": false\n                },\n                \"isClauseMatcher\": {\n                  \"name\": \"func\",\n                  \"required\": false\n                },\n                \"explain\": {\n                  \"name\": \"bool\",\n                  \"required\": false\n                }\n              },\n              \"required\": false\n            }\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowNeutralSort\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set `allowNeutralSort` to false to force column sorting. Defaults to true.\"\n    },\n    \"selection\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"SelectionType\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"itemId\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"ItemIdType\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rowProps\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"func\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cellProps\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"func\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onTableChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/basic_table/in_memory_table.js"],"names":["ColumnType","PropTypes","oneOfType","shape","FieldDataColumnTypeShape","sortable","bool","func","ComputedColumnType","ActionsColumnType","InMemoryTablePropTypes","columns","arrayOf","isRequired","items","array","loading","message","node","error","string","compressed","search","defaultQuery","QueryType","box","SearchBoxConfigPropTypes","schema","filters","SearchFiltersFiltersType","onChange","executeQueryOptions","defaultFields","isClauseMatcher","explain","pagination","pageSizeOptions","number","initialPageIndex","initialPageSize","sorting","sort","PropertySortType","allowNeutralSort","selection","SelectionType","itemId","ItemIdType","rowProps","object","cellProps","onTableChange","getInitialQuery","query","EuiSearchBar","Query","parse","getInitialPagination","pageIndex","undefined","pageSize","paginationBarDefaults","hidePerPageOptions","includes","Error","defaultPageSize","findColumnByProp","prop","value","i","length","column","getInitialSorting","sortName","sortDirection","field","direction","sortColumn","name","EuiInMemoryTable","nextProps","prevState","prevProps","props","page","index","size","reportedSortName","state","setState","queryText","shouldQueryInMemory","searchBarProps","resolveSearchSchema","onQueryChange","reduce","type","dataType","fields","strict","find","Comparators","default","property","totalItemCount","matchingItems","execute","sortedItems","slice","getItemSorter","visibleItems","startIndex","Math","min","isSelectable","hasActions","hasPagination","hasSorting","itemIdToExpandedRowMap","_unuseditems","rest","getItems","searchBar","renderSearchBar","table","Component","responsive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EuiBasicTable,\n  SelectionType,\n  ItemIdType,\n  FieldDataColumnTypeShape,\n  ComputedColumnType,\n  ActionsColumnType,\n} from './basic_table';\nimport { defaults as paginationBarDefaults } from './pagination_bar';\nimport { isBoolean, isString } from '../../services/predicate';\nimport { Comparators, PropertySortType } from '../../services/sort';\nimport {\n  QueryType,\n  SearchFiltersFiltersType,\n  SearchBoxConfigPropTypes,\n  EuiSearchBar,\n} from '../search_bar';\nimport { EuiSpacer } from '../spacer/spacer';\n\n// same as ColumnType from EuiBasicTable, but need to modify the `sortable` type\nconst ColumnType = PropTypes.oneOfType([\n  PropTypes.shape({\n    ...FieldDataColumnTypeShape,\n    sortable: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  }),\n  ComputedColumnType,\n  ActionsColumnType,\n]);\n\nconst InMemoryTablePropTypes = {\n  columns: PropTypes.arrayOf(ColumnType).isRequired,\n  items: PropTypes.array,\n  loading: PropTypes.bool,\n  message: PropTypes.node,\n  error: PropTypes.string,\n  compressed: PropTypes.bool,\n  search: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      defaultQuery: QueryType,\n      box: PropTypes.shape({\n        ...SearchBoxConfigPropTypes,\n        schema: PropTypes.oneOfType([\n          // here we enable the user to just assign 'true' to the schema, in which case\n          // we will auto-generate it out of the columns configuration\n          PropTypes.bool,\n          SearchBoxConfigPropTypes.schema,\n        ]),\n      }),\n      filters: SearchFiltersFiltersType,\n      onChange: PropTypes.func,\n      executeQueryOptions: PropTypes.shape({\n        defaultFields: PropTypes.arrayOf(PropTypes.string),\n        isClauseMatcher: PropTypes.func,\n        explain: PropTypes.bool,\n      }),\n    }),\n  ]),\n  pagination: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\n    }),\n    PropTypes.shape({\n      initialPageIndex: PropTypes.number,\n      initialPageSize: PropTypes.number,\n      pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\n    }),\n  ]),\n  sorting: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      sort: PropertySortType,\n    }),\n  ]),\n  /**\n   * Set `allowNeutralSort` to false to force column sorting. Defaults to true.\n   */\n  allowNeutralSort: PropTypes.bool,\n  selection: SelectionType,\n  itemId: ItemIdType,\n  rowProps: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  cellProps: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onTableChange: PropTypes.func,\n};\n\nconst getInitialQuery = search => {\n  if (!search) {\n    return;\n  }\n\n  const query = search.defaultQuery || '';\n  return isString(query) ? EuiSearchBar.Query.parse(query) : query;\n};\n\nconst getInitialPagination = pagination => {\n  if (!pagination) {\n    return {\n      pageIndex: undefined,\n      pageSize: undefined,\n    };\n  }\n\n  const {\n    initialPageIndex = 0,\n    initialPageSize,\n    pageSizeOptions = paginationBarDefaults.pageSizeOptions,\n    hidePerPageOptions,\n  } = pagination;\n\n  if (\n    !hidePerPageOptions &&\n    initialPageSize &&\n    (!pageSizeOptions || !pageSizeOptions.includes(initialPageSize))\n  ) {\n    throw new Error(\n      `EuiInMemoryTable received initialPageSize ${initialPageSize}, which wasn't provided within pageSizeOptions.`\n    );\n  }\n\n  const defaultPageSize = pageSizeOptions\n    ? pageSizeOptions[0]\n    : paginationBarDefaults.pageSizeOptions[0];\n\n  return {\n    pageIndex: initialPageIndex,\n    pageSize: initialPageSize || defaultPageSize,\n    pageSizeOptions,\n    hidePerPageOptions,\n  };\n};\n\nfunction findColumnByProp(columns, prop, value) {\n  for (let i = 0; i < columns.length; i++) {\n    const column = columns[i];\n    if (column[prop] === value) {\n      return column;\n    }\n  }\n}\n\nconst getInitialSorting = (columns, sorting) => {\n  if (!sorting || !sorting.sort) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined,\n    };\n  }\n\n  const { field: sortable, direction: sortDirection } = sorting.sort;\n\n  // sortable could be a column's `field` or its `name`\n  // for backwards compatibility `field` must be checked first\n  let sortColumn = findColumnByProp(columns, 'field', sortable);\n  if (sortColumn == null) {\n    sortColumn = findColumnByProp(columns, 'name', sortable);\n  }\n\n  if (sortColumn == null) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined,\n    };\n  }\n\n  const sortName = sortColumn.name;\n\n  return {\n    sortName,\n    sortDirection,\n  };\n};\n\nexport class EuiInMemoryTable extends Component {\n  static propTypes = InMemoryTablePropTypes;\n  static defaultProps = {\n    items: [],\n    pagination: false,\n    sorting: false,\n    responsive: true,\n    executeQueryOptions: {},\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.items !== prevState.prevProps.items) {\n      // We have new items because an external search has completed, so reset pagination state.\n      return {\n        prevProps: {\n          ...prevState.prevProps,\n          items: nextProps.items,\n        },\n        pageIndex: 0,\n      };\n    }\n    const { sortName, sortDirection } = getInitialSorting(\n      nextProps.columns,\n      nextProps.sorting\n    );\n    if (\n      sortName !== prevState.prevProps.sortName ||\n      sortDirection !== prevState.prevProps.sortDirection\n    ) {\n      return {\n        sortName,\n        sortDirection,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { columns, search, pagination, sorting, allowNeutralSort } = props;\n    const {\n      pageIndex,\n      pageSize,\n      pageSizeOptions,\n      hidePerPageOptions,\n    } = getInitialPagination(pagination);\n    const { sortName, sortDirection } = getInitialSorting(columns, sorting);\n\n    this.state = {\n      prevProps: {\n        items: props.items,\n        sortName,\n        sortDirection,\n      },\n      query: getInitialQuery(search),\n      pageIndex,\n      pageSize,\n      pageSizeOptions,\n      sortName,\n      sortDirection,\n      allowNeutralSort: allowNeutralSort === false ? false : true,\n      hidePerPageOptions,\n    };\n  }\n\n  onTableChange = ({ page = {}, sort = {} }) => {\n    const { index: pageIndex, size: pageSize } = page;\n\n    let { field: sortName, direction: sortDirection } = sort;\n\n    // To keep backwards compatibility reportedSortName needs to be tracked separately\n    // from sortName; sortName gets stored internally while reportedSortName is sent to the callback\n    let reportedSortName = sortName;\n\n    // EuiBasicTable returns the column's `field` if it exists instead of `name`,\n    // map back to `name` if this is the case\n    for (let i = 0; i < this.props.columns.length; i++) {\n      const column = this.props.columns[i];\n      if (column.field === sortName) {\n        sortName = column.name;\n        break;\n      }\n    }\n\n    // Allow going back to 'neutral' sorting\n    if (\n      this.state.allowNeutralSort &&\n      this.state.sortName === sortName &&\n      this.state.sortDirection === 'desc' &&\n      sortDirection === 'asc'\n    ) {\n      sortName = '';\n      reportedSortName = '';\n      sortDirection = '';\n    }\n\n    if (this.props.onTableChange) {\n      this.props.onTableChange({\n        page,\n        sort: {\n          field: reportedSortName,\n          direction: sortDirection,\n        },\n      });\n    }\n\n    this.setState({\n      pageIndex,\n      pageSize,\n      sortName,\n      sortDirection,\n    });\n  };\n\n  onQueryChange = ({ query, queryText, error }) => {\n    if (this.props.search.onChange) {\n      const shouldQueryInMemory = this.props.search.onChange({\n        query,\n        queryText,\n        error,\n      });\n      if (!shouldQueryInMemory) {\n        return;\n      }\n    }\n\n    // Reset pagination state.\n    this.setState({\n      query,\n      pageIndex: 0,\n    });\n  };\n\n  renderSearchBar() {\n    const { search } = this.props;\n    if (search) {\n      const {\n        onChange, // eslint-disable-line no-unused-vars\n        ...searchBarProps\n      } = isBoolean(search) ? {} : search;\n\n      if (searchBarProps.box && searchBarProps.box.schema === true) {\n        searchBarProps.box.schema = this.resolveSearchSchema();\n      }\n\n      return <EuiSearchBar onChange={this.onQueryChange} {...searchBarProps} />;\n    }\n  }\n\n  resolveSearchSchema() {\n    const { columns } = this.props;\n    return columns.reduce(\n      (schema, column) => {\n        if (column.field) {\n          const type = column.dataType || 'string';\n          schema.fields[column.field] = { type };\n        }\n        return schema;\n      },\n      { strict: true, fields: {} }\n    );\n  }\n\n  getItemSorter() {\n    const { sortName, sortDirection } = this.state;\n\n    const { columns } = this.props;\n\n    const sortColumn = columns.find(({ name }) => name === sortName);\n\n    if (sortColumn == null) {\n      // can't return a non-function so return a function that says everything is the same\n      return () => () => 0;\n    }\n\n    const sortable = sortColumn.sortable;\n\n    if (typeof sortable === 'function') {\n      return Comparators.value(sortable, Comparators.default(sortDirection));\n    }\n\n    return Comparators.property(\n      sortColumn.field,\n      Comparators.default(sortDirection)\n    );\n  }\n\n  getItems() {\n    const { executeQueryOptions } = this.props;\n    const {\n      prevProps: { items },\n    } = this.state;\n\n    if (!items.length) {\n      return {\n        items: [],\n        totalItemCount: 0,\n      };\n    }\n\n    const { query, sortName, pageIndex, pageSize } = this.state;\n\n    const matchingItems = query\n      ? EuiSearchBar.Query.execute(query, items, executeQueryOptions)\n      : items;\n\n    const sortedItems = sortName\n      ? matchingItems\n          .slice(0) // avoid mutating the source array\n          .sort(this.getItemSorter()) // sort, causes mutation\n      : matchingItems;\n\n    const visibleItems = pageSize\n      ? (() => {\n          const startIndex = pageIndex * pageSize;\n          return sortedItems.slice(\n            startIndex,\n            Math.min(startIndex + pageSize, sortedItems.length)\n          );\n        })()\n      : sortedItems;\n\n    return {\n      items: visibleItems,\n      totalItemCount: matchingItems.length,\n    };\n  }\n\n  render() {\n    const {\n      columns,\n      loading,\n      message,\n      error,\n      selection,\n      isSelectable,\n      hasActions,\n      compressed,\n      pagination: hasPagination,\n      sorting: hasSorting,\n      itemIdToExpandedRowMap,\n      itemId,\n      rowProps,\n      cellProps,\n      items: _unuseditems, // eslint-disable-line no-unused-vars\n      search, // eslint-disable-line no-unused-vars\n      onTableChange, // eslint-disable-line no-unused-vars\n      executeQueryOptions, // eslint-disable-line no-unused-vars\n      allowNeutralSort, // eslint-disable-line no-unused-vars\n      ...rest\n    } = this.props;\n\n    const {\n      pageIndex,\n      pageSize,\n      pageSizeOptions,\n      sortName,\n      sortDirection,\n      hidePerPageOptions,\n    } = this.state;\n\n    const { items, totalItemCount } = this.getItems();\n\n    const pagination = !hasPagination\n      ? undefined\n      : {\n          pageIndex,\n          pageSize,\n          pageSizeOptions,\n          totalItemCount,\n          hidePerPageOptions,\n        };\n\n    // Data loaded from a server can have a default sort order which is meaningful to the\n    // user, but can't be reproduced with client-side sort logic. So we allow the table to display\n    // rows in the order in which they're initially loaded by providing an undefined sorting prop.\n    const sorting = !hasSorting\n      ? undefined\n      : {\n          sort:\n            !sortName && !sortDirection\n              ? undefined\n              : {\n                  field: sortName,\n                  direction: sortDirection,\n                },\n          allowNeutralSort: this.state.allowNeutralSort,\n        };\n\n    const searchBar = this.renderSearchBar();\n\n    const table = (\n      <EuiBasicTable\n        items={items}\n        itemId={itemId}\n        rowProps={rowProps}\n        cellProps={cellProps}\n        columns={columns}\n        pagination={pagination}\n        sorting={sorting}\n        selection={selection}\n        isSelectable={isSelectable}\n        hasActions={hasActions}\n        onChange={this.onTableChange}\n        error={error}\n        loading={loading}\n        noItemsMessage={message}\n        compressed={compressed}\n        itemIdToExpandedRowMap={itemIdToExpandedRowMap}\n        {...rest}\n      />\n    );\n\n    if (!searchBar) {\n      return table;\n    }\n\n    return (\n      <div>\n        {searchBar}\n        <EuiSpacer size=\"l\" />\n        {table}\n      </div>\n    );\n  }\n}\n"]}]}