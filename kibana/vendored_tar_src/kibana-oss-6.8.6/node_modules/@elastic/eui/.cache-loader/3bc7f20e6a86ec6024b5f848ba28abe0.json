{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/expression/expression.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/expression/expression.tsx","mtime":1565204169686},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiExpression = exports.COLORS = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _common = require(\"../common\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar colorToClassNameMap = {\n  subdued: 'euiExpression--subdued',\n  primary: 'euiExpression--primary',\n  secondary: 'euiExpression--secondary',\n  accent: 'euiExpression--accent',\n  warning: 'euiExpression--warning',\n  danger: 'euiExpression--danger'\n};\nvar COLORS = (0, _common.keysOf)(colorToClassNameMap);\nexports.COLORS = COLORS;\n\nvar EuiExpression = function EuiExpression(_ref) {\n  var className = _ref.className,\n      description = _ref.description,\n      descriptionProps = _ref.descriptionProps,\n      value = _ref.value,\n      valueProps = _ref.valueProps,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'secondary' : _ref$color,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? false : _ref$isActive,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"description\", \"descriptionProps\", \"value\", \"valueProps\", \"color\", \"uppercase\", \"isActive\", \"onClick\"]);\n\n  var classes = (0, _classnames.default)('euiExpression', className, {\n    'euiExpression-isActive': isActive,\n    'euiExpression-isClickable': onClick,\n    'euiExpression-isUppercase': uppercase\n  }, colorToClassNameMap[color]);\n  var Component = onClick ? 'button' : 'span';\n  return _react.default.createElement(Component, _extends({\n    className: classes,\n    onClick: onClick\n  }, rest), _react.default.createElement(\"span\", _extends({\n    className: \"euiExpression__description\"\n  }, descriptionProps), description), ' ', _react.default.createElement(\"span\", _extends({\n    className: \"euiExpression__value\"\n  }, valueProps), value));\n};\n\nexports.EuiExpression = EuiExpression;\nEuiExpression.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n\n  /**\n     * First part of the expression\n     */\n\n  /**\n     * First part of the expression\n     */\n  description: _propTypes.default.node.isRequired,\n  descriptionProps: _propTypes.default.any,\n\n  /**\n     * Second part of the expression\n     */\n\n  /**\n     * Second part of the expression\n     */\n  value: _propTypes.default.node.isRequired,\n  valueProps: _propTypes.default.any,\n\n  /**\n     * Color of the `description`\n     */\n\n  /**\n     * Color of the `description`\n     */\n  color: _propTypes.default.oneOf([\"subdued\", \"primary\", \"secondary\", \"accent\", \"warning\", \"danger\"]),\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n  uppercase: _propTypes.default.bool,\n\n  /**\n     * Adds an solid border at the bottom\n     */\n\n  /**\n     * Adds an solid border at the bottom\n     */\n  isActive: _propTypes.default.bool,\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n  onClick: _propTypes.default.oneOfType([_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.func.isRequired]), _propTypes.default.func])\n};\nEuiExpression.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiExpression\",\n  \"props\": {\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'secondary'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"subdued\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"primary\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"secondary\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"accent\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"warning\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"danger\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Color of the `description`\"\n    },\n    \"uppercase\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Should the `description` auto-uppercase?\"\n    },\n    \"isActive\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Adds an solid border at the bottom\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"description\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"First part of the expression\"\n    },\n    \"descriptionProps\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"Second part of the expression\"\n    },\n    \"valueProps\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"union\",\n          \"value\": [{\n            \"name\": \"func\"\n          }, {\n            \"name\": \"func\"\n          }]\n        }, {\n          \"name\": \"func\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Turns the component into a button and adds an editable style border at the bottom\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/expression/expression.tsx"],"names":["colorToClassNameMap","subdued","primary","secondary","accent","warning","danger","COLORS","EuiExpression","className","description","descriptionProps","value","valueProps","color","uppercase","isActive","onClick","rest","classes","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAMA;;AACA;;;;;;;;;;AAEA,IAAMA,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,wBADiB;AAE1BC,EAAAA,OAAO,EAAE,wBAFiB;AAG1BC,EAAAA,SAAS,EAAE,0BAHe;AAI1BC,EAAAA,MAAM,EAAE,uBAJkB;AAK1BC,EAAAA,OAAO,EAAE,wBALiB;AAM1BC,EAAAA,MAAM,EAAE;AANkB,CAA5B;AASO,IAAMC,MAAM,GAAG,oBAAOP,mBAAP,CAAf;;;AAwCA,IAAMQ,aAEZ,GAAG,SAFSA,aAET,OAWE;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,WASI,QATJA,WASI;AAAA,MARJC,gBAQI,QARJA,gBAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,wBALJC,KAKI;AAAA,MALJA,KAKI,2BALI,WAKJ;AAAA,4BAJJC,SAII;AAAA,MAJJA,SAII,+BAJQ,IAIR;AAAA,2BAHJC,QAGI;AAAA,MAHJA,QAGI,8BAHO,KAGP;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAG,yBACd,eADc,EAEdV,SAFc,EAGd;AACE,8BAA0BO,QAD5B;AAEE,iCAA6BC,OAF/B;AAGE,iCAA6BF;AAH/B,GAHc,EAQdf,mBAAmB,CAACc,KAAD,CARL,CAAhB;AAWA,MAAMM,SAAS,GAAGH,OAAO,GAAG,QAAH,GAAc,MAAvC;AAEA,SACE,6BAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,OAAtB;AAA+B,IAAA,OAAO,EAAEF;AAAxC,KAAqDC,IAArD,GACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAiDP,gBAAjD,GACGD,WADH,CADF,EAGU,GAHV,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2CG,UAA3C,GACGD,KADH,CAJF,CADF;AAUD,CArCM","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nvar colorToClassNameMap = {\n  subdued: 'euiExpression--subdued',\n  primary: 'euiExpression--primary',\n  secondary: 'euiExpression--secondary',\n  accent: 'euiExpression--accent',\n  warning: 'euiExpression--warning',\n  danger: 'euiExpression--danger'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nexport var EuiExpression = ({\n  className,\n  description,\n  descriptionProps,\n  value,\n  valueProps,\n  color = 'secondary',\n  uppercase = true,\n  isActive = false,\n  onClick,\n  ...rest\n}) => {\n  const classes = classNames('euiExpression', className, {\n    'euiExpression-isActive': isActive,\n    'euiExpression-isClickable': onClick,\n    'euiExpression-isUppercase': uppercase\n  }, colorToClassNameMap[color]);\n  const Component = onClick ? 'button' : 'span';\n  return <Component className={classes} onClick={onClick} {...rest}>\n      <span className=\"euiExpression__description\" {...descriptionProps}>\n        {description}\n      </span>{' '}\n      <span className=\"euiExpression__value\" {...valueProps}>\n        {value}\n      </span>\n    </Component>;\n};\nEuiExpression.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * First part of the expression\n     */\n\n  /**\n     * First part of the expression\n     */\n  description: PropTypes.node.isRequired,\n  descriptionProps: PropTypes.any,\n\n  /**\n     * Second part of the expression\n     */\n\n  /**\n     * Second part of the expression\n     */\n  value: PropTypes.node.isRequired,\n  valueProps: PropTypes.any,\n\n  /**\n     * Color of the `description`\n     */\n\n  /**\n     * Color of the `description`\n     */\n  color: PropTypes.oneOf([\"subdued\", \"primary\", \"secondary\", \"accent\", \"warning\", \"danger\"]),\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n  uppercase: PropTypes.bool,\n\n  /**\n     * Adds an solid border at the bottom\n     */\n\n  /**\n     * Adds an solid border at the bottom\n     */\n  isActive: PropTypes.bool,\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n  onClick: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.func, PropTypes.func.isRequired]), PropTypes.func])\n};"]}]}