{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/date_picker/date_picker_range.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/date_picker/date_picker_range.js","mtime":1565204169660},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiDatePickerRange = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _text = require(\"../text\");\n\nvar _icon = require(\"../icon\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar EuiDatePickerRange = function EuiDatePickerRange(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      startDateControl = _ref.startDateControl,\n      endDateControl = _ref.endDateControl,\n      iconType = _ref.iconType,\n      fullWidth = _ref.fullWidth,\n      isCustom = _ref.isCustom,\n      readOnly = _ref.readOnly,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"startDateControl\", \"endDateControl\", \"iconType\", \"fullWidth\", \"isCustom\", \"readOnly\"]);\n\n  var classes = (0, _classnames.default)('euiDatePickerRange', {\n    'euiDatePickerRange--fullWidth': fullWidth,\n    'euiDatePickerRange--readOnly': readOnly\n  }, className); // Set the icon for the entire group instead of per control\n\n  var optionalIcon;\n\n  if (iconType) {\n    var icon = typeof iconType === 'string' ? iconType : 'calendar';\n    optionalIcon = _react.default.createElement(\"span\", {\n      className: \"euiDatePickerRange__icon\"\n    }, _react.default.createElement(_icon.EuiIcon, {\n      type: icon\n    }));\n  } else {\n    optionalIcon = null;\n  }\n\n  var startControl = startDateControl;\n  var endControl = endDateControl;\n\n  if (!isCustom) {\n    startControl = (0, _react.cloneElement)(startDateControl, {\n      showIcon: false,\n      fullWidth: fullWidth,\n      readOnly: readOnly\n    });\n    endControl = (0, _react.cloneElement)(endDateControl, {\n      showIcon: false,\n      fullWidth: fullWidth,\n      readOnly: readOnly\n    });\n  }\n\n  return _react.default.createElement(\"div\", _extends({\n    className: classes\n  }, rest), children ? children : _react.default.createElement(_react.Fragment, null, optionalIcon, startControl, _react.default.createElement(_text.EuiText, {\n    className: \"euiDatePickerRange__delimeter\",\n    size: \"s\",\n    color: \"subdued\"\n  }, \"\\u2192\"), endControl));\n};\n\nexports.EuiDatePickerRange = EuiDatePickerRange;\nEuiDatePickerRange.propTypes = {\n  /**\n   * The start date `EuiDatePicker` element\n   */\n  startDateControl: _propTypes.default.node.isRequired,\n\n  /**\n   * The end date `EuiDatePicker` element\n   */\n  endDateControl: _propTypes.default.node.isRequired,\n\n  /**\n   * Pass either an icon type or set to `false` to remove icon entirely\n   */\n  iconType: _propTypes.default.oneOfType([_propTypes.default.bool, _icon.IconPropType]),\n  fullWidth: _propTypes.default.bool,\n\n  /**\n   * Won't apply any additional props to start and end date components\n   */\n  isCustom: _propTypes.default.bool,\n\n  /**\n   * Including any children will replace all innerds with the provided children\n   */\n  children: _propTypes.default.node\n};\nEuiDatePickerRange.defaultProps = {\n  iconType: true\n};\nEuiDatePickerRange.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiDatePickerRange\",\n  \"props\": {\n    \"iconType\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"bool\"\n        }, {\n          \"name\": \"custom\",\n          \"raw\": \"IconPropType\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Pass either an icon type or set to `false` to remove icon entirely\"\n    },\n    \"startDateControl\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"The start date `EuiDatePicker` element\"\n    },\n    \"endDateControl\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"The end date `EuiDatePicker` element\"\n    },\n    \"fullWidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isCustom\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Won't apply any additional props to start and end date components\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Including any children will replace all innerds with the provided children\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/date_picker/date_picker_range.js"],"names":["EuiDatePickerRange","children","className","startDateControl","endDateControl","iconType","fullWidth","isCustom","readOnly","rest","classes","optionalIcon","icon","startControl","endControl","showIcon","propTypes","PropTypes","node","isRequired","oneOfType","bool","IconPropType","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;AAEO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,OAU5B;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,gBAOI,QAPJA,gBAOI;AAAA,MANJC,cAMI,QANJA,cAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAG,yBACd,oBADc,EAEd;AACE,qCAAiCJ,SADnC;AAEE,oCAAgCE;AAFlC,GAFc,EAMdN,SANc,CAAhB,CADI,CAUJ;;AACA,MAAIS,YAAJ;;AACA,MAAIN,QAAJ,EAAc;AACZ,QAAMO,IAAI,GAAG,OAAOP,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0C,UAAvD;AACAM,IAAAA,YAAY,GACV;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE,6BAAC,aAAD;AAAS,MAAA,IAAI,EAAEC;AAAf,MADF,CADF;AAKD,GAPD,MAOO;AACLD,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,MAAIE,YAAY,GAAGV,gBAAnB;AACA,MAAIW,UAAU,GAAGV,cAAjB;;AAEA,MAAI,CAACG,QAAL,EAAe;AACbM,IAAAA,YAAY,GAAG,yBAAaV,gBAAb,EAA+B;AAC5CY,MAAAA,QAAQ,EAAE,KADkC;AAE5CT,MAAAA,SAAS,EAAEA,SAFiC;AAG5CE,MAAAA,QAAQ,EAAEA;AAHkC,KAA/B,CAAf;AAMAM,IAAAA,UAAU,GAAG,yBAAaV,cAAb,EAA6B;AACxCW,MAAAA,QAAQ,EAAE,KAD8B;AAExCT,MAAAA,SAAS,EAAEA,SAF6B;AAGxCE,MAAAA,QAAQ,EAAEA;AAH8B,KAA7B,CAAb;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAA6BD,IAA7B,GACGR,QAAQ,GACPA,QADO,GAGP,6BAAC,eAAD,QACGU,YADH,EAEGE,YAFH,EAGE,6BAAC,aAAD;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,KAAK,EAAC;AAHR,cAHF,EASGC,UATH,CAJJ,CADF;AAmBD,CArEM;;;AAuEPd,kBAAkB,CAACgB,SAAnB,GAA+B;AAC7B;;;AAGAb,EAAAA,gBAAgB,EAAEc,mBAAUC,IAAV,CAAeC,UAJJ;;AAK7B;;;AAGAf,EAAAA,cAAc,EAAEa,mBAAUC,IAAV,CAAeC,UARF;;AAS7B;;;AAGAd,EAAAA,QAAQ,EAAEY,mBAAUG,SAAV,CAAoB,CAACH,mBAAUI,IAAX,EAAiBC,kBAAjB,CAApB,CAZmB;AAa7BhB,EAAAA,SAAS,EAAEW,mBAAUI,IAbQ;;AAc7B;;;AAGAd,EAAAA,QAAQ,EAAEU,mBAAUI,IAjBS;;AAkB7B;;;AAGApB,EAAAA,QAAQ,EAAEgB,mBAAUC;AArBS,CAA/B;AAwBAlB,kBAAkB,CAACuB,YAAnB,GAAkC;AAChClB,EAAAA,QAAQ,EAAE;AADsB,CAAlC","sourcesContent":["import React, { cloneElement, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiText } from '../text';\nimport { IconPropType, EuiIcon } from '../icon';\n\nexport const EuiDatePickerRange = ({\n  children,\n  className,\n  startDateControl,\n  endDateControl,\n  iconType,\n  fullWidth,\n  isCustom,\n  readOnly,\n  ...rest\n}) => {\n  const classes = classNames(\n    'euiDatePickerRange',\n    {\n      'euiDatePickerRange--fullWidth': fullWidth,\n      'euiDatePickerRange--readOnly': readOnly,\n    },\n    className\n  );\n\n  // Set the icon for the entire group instead of per control\n  let optionalIcon;\n  if (iconType) {\n    const icon = typeof iconType === 'string' ? iconType : 'calendar';\n    optionalIcon = (\n      <span className=\"euiDatePickerRange__icon\">\n        <EuiIcon type={icon} />\n      </span>\n    );\n  } else {\n    optionalIcon = null;\n  }\n\n  let startControl = startDateControl;\n  let endControl = endDateControl;\n\n  if (!isCustom) {\n    startControl = cloneElement(startDateControl, {\n      showIcon: false,\n      fullWidth: fullWidth,\n      readOnly: readOnly,\n    });\n\n    endControl = cloneElement(endDateControl, {\n      showIcon: false,\n      fullWidth: fullWidth,\n      readOnly: readOnly,\n    });\n  }\n\n  return (\n    <div className={classes} {...rest}>\n      {children ? (\n        children\n      ) : (\n        <Fragment>\n          {optionalIcon}\n          {startControl}\n          <EuiText\n            className=\"euiDatePickerRange__delimeter\"\n            size=\"s\"\n            color=\"subdued\">\n            →\n          </EuiText>\n          {endControl}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nEuiDatePickerRange.propTypes = {\n  /**\n   * The start date `EuiDatePicker` element\n   */\n  startDateControl: PropTypes.node.isRequired,\n  /**\n   * The end date `EuiDatePicker` element\n   */\n  endDateControl: PropTypes.node.isRequired,\n  /**\n   * Pass either an icon type or set to `false` to remove icon entirely\n   */\n  iconType: PropTypes.oneOfType([PropTypes.bool, IconPropType]),\n  fullWidth: PropTypes.bool,\n  /**\n   * Won't apply any additional props to start and end date components\n   */\n  isCustom: PropTypes.bool,\n  /**\n   * Including any children will replace all innerds with the provided children\n   */\n  children: PropTypes.node,\n};\n\nEuiDatePickerRange.defaultProps = {\n  iconType: true,\n};\n"]}]}