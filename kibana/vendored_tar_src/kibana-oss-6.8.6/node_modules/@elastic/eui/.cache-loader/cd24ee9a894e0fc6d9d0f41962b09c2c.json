{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/copy/copy.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/copy/copy.tsx","mtime":1565204169656},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiCopy = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _services = require(\"../../services\");\n\nvar _tool_tip = require(\"../tool_tip\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiCopy =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EuiCopy, _React$Component);\n\n  function EuiCopy(props) {\n    var _this;\n\n    _classCallCheck(this, EuiCopy);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiCopy).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"copy\", function () {\n      var isCopied = (0, _services.copyToClipboard)(_this.props.textToCopy);\n\n      if (isCopied) {\n        _this.setState({\n          tooltipText: _this.props.afterMessage\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"resetTooltipText\", function () {\n      _this.setState({\n        tooltipText: _this.props.beforeMessage\n      });\n    });\n\n    _this.state = {\n      tooltipText: _this.props.beforeMessage\n    };\n    return _this;\n  }\n\n  _createClass(EuiCopy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          textToCopy = _this$props.textToCopy,\n          beforeMessage = _this$props.beforeMessage,\n          afterMessage = _this$props.afterMessage,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"textToCopy\", \"beforeMessage\", \"afterMessage\"]);\n\n      return (// See `src/components/tool_tip/tool_tip.js` for explaination of below eslint-disable\n        // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n        _react.default.createElement(_tool_tip.EuiToolTip, _extends({\n          content: this.state.tooltipText,\n          onMouseOut: this.resetTooltipText\n        }, rest), children(this.copy))\n      );\n    }\n  }]);\n\n  return EuiCopy;\n}(_react.default.Component);\n\nexports.EuiCopy = EuiCopy;\n\n_defineProperty(EuiCopy, \"defaultProps\", {\n  afterMessage: 'Copied'\n});\n\nEuiCopy.propTypes = {\n  /**\n     * Text that will be copied to clipboard when copy function is executed.\n     */\n  textToCopy: _propTypes.default.string.isRequired,\n\n  /**\n     * Tooltip message displayed before copy function is called.\n     */\n  beforeMessage: _propTypes.default.node,\n\n  /**\n     * Tooltip message displayed after copy function is called that lets the user know that\n     * 'textToCopy' has been copied to the clipboard.\n     */\n  afterMessage: _propTypes.default.string,\n\n  /**\n     * Function that must return a component. First argument is 'copy' function.\n     * Use your own logic to create the component that users interact with when triggering copy.\n     */\n  children: _propTypes.default.func.isRequired,\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string\n};\nEuiCopy.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"copy\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"resetTooltipText\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiCopy\",\n  \"props\": {\n    \"afterMessage\": {\n      \"defaultValue\": {\n        \"value\": \"'Copied'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Tooltip message displayed after copy function is called that lets the user know that\\n'textToCopy' has been copied to the clipboard.\"\n    },\n    \"textToCopy\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Text that will be copied to clipboard when copy function is executed.\"\n    },\n    \"beforeMessage\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Tooltip message displayed before copy function is called.\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function that must return a component. First argument is 'copy' function.\\nUse your own logic to create the component that users interact with when triggering copy.\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/copy/copy.tsx"],"names":["EuiCopy","props","isCopied","textToCopy","setState","tooltipText","afterMessage","beforeMessage","state","children","rest","resetTooltipText","copy","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BaA,O;;;;;AAKX,mBAAYC,KAAZ,EAAiC;AAAA;;AAAA;;AAC/B,iFAAMA,KAAN;;AAD+B,mFAQ1B,YAAM;AACX,UAAMC,QAAQ,GAAG,+BAAgB,MAAKD,KAAL,CAAWE,UAA3B,CAAjB;;AACA,UAAID,QAAJ,EAAc;AACZ,cAAKE,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE,MAAKJ,KAAL,CAAWK;AADZ,SAAd;AAGD;AACF,KAfgC;;AAAA,+FAiBd,YAAM;AACvB,YAAKF,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,MAAKJ,KAAL,CAAWM;AADZ,OAAd;AAGD,KArBgC;;AAG/B,UAAKC,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE,MAAKJ,KAAL,CAAWM;AADb,KAAb;AAH+B;AAMhC;;;;6BAiBQ;AAAA,wBAOH,KAAKN,KAPF;AAAA,UAELQ,QAFK,eAELA,QAFK;AAAA,UAGLN,UAHK,eAGLA,UAHK;AAAA,UAILI,aAJK,eAILA,aAJK;AAAA,UAKLD,YALK,eAKLA,YALK;AAAA,UAMFI,IANE;;AASP,aACE;AACA;AACA,qCAAC,oBAAD;AACE,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWH,WADtB;AAEE,UAAA,UAAU,EAAE,KAAKM;AAFnB,WAGMD,IAHN,GAIGD,QAAQ,CAAC,KAAKG,IAAN,CAJX;AAHF;AAUD;;;;EA/C0BC,eAAMC,S;;;;gBAAtBd,O,kBACW;AACpBM,EAAAA,YAAY,EAAE;AADM,C","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { copyToClipboard } from '../../services';\nimport { EuiToolTip } from '../tool_tip';\nexport class EuiCopy extends React.Component {\n  static defaultProps = {\n    afterMessage: 'Copied'\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipText: this.props.beforeMessage\n    };\n  }\n\n  copy = () => {\n    const isCopied = copyToClipboard(this.props.textToCopy);\n\n    if (isCopied) {\n      this.setState({\n        tooltipText: this.props.afterMessage\n      });\n    }\n  };\n  resetTooltipText = () => {\n    this.setState({\n      tooltipText: this.props.beforeMessage\n    });\n  };\n\n  render() {\n    const {\n      children,\n      textToCopy,\n      beforeMessage,\n      afterMessage,\n      ...rest\n    } = this.props;\n    return (// See `src/components/tool_tip/tool_tip.js` for explaination of below eslint-disable\n      // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n      <EuiToolTip content={this.state.tooltipText} onMouseOut={this.resetTooltipText} {...rest}>\n        {children(this.copy)}\n      </EuiToolTip>\n    );\n  }\n\n}\nEuiCopy.propTypes = {\n  /**\n     * Text that will be copied to clipboard when copy function is executed.\n     */\n  textToCopy: PropTypes.string.isRequired,\n\n  /**\n     * Tooltip message displayed before copy function is called.\n     */\n  beforeMessage: PropTypes.node,\n\n  /**\n     * Tooltip message displayed after copy function is called that lets the user know that\n     * 'textToCopy' has been copied to the clipboard.\n     */\n  afterMessage: PropTypes.string,\n\n  /**\n     * Function that must return a component. First argument is 'copy' function.\n     * Use your own logic to create the component that users interact with when triggering copy.\n     */\n  children: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};"]}]}