{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/link/link_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/link/link_example.js","mtime":1565204169509},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _link = _interopRequireDefault(require(\"./link\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar linkSource = require('!!raw-loader!./link');\n\nvar linkHtml = (0, _services.renderToHtml)(_link.default);\nvar linkSnippet = [\"<EuiLink href=\\\"#\\\"><!-- Link text --></EuiLink>\\n\", \"<EuiLink href=\\\"#\\\" color=\\\"secondary\\\">\\n  <!-- Colored link text -->\\n</EuiLink>\\n\"];\nvar LinkExample = {\n  title: 'Link',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: linkSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: linkHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiLink\"), \" will apply the correct styling onto links and make sure they are accessible. Links can be passed a color. Note that the \", _react.default.createElement(_components2.EuiCode, null, \"ghost\"), \" type should only be used on dark backgrounds (regardless of theming). It will always create a white link.\"),\n    props: {\n      EuiLink: _components2.EuiLink\n    },\n    snippet: linkSnippet,\n    demo: _react.default.createElement(_link.default, null)\n  }]\n};\nexports.LinkExample = LinkExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/link/link_example.js"],"names":["linkSource","require","linkHtml","Link","linkSnippet","LinkExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiLink","snippet","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMC,QAAQ,GAAG,4BAAaC,aAAb,CAAjB;AACA,IAAMC,WAAW,GAAG,8IAApB;AASO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE,MADkB;AAEzBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEZ;AAFR,KADM,EAKN;AACES,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEV;AAFR,KALM,CADV;AAWEY,IAAAA,IAAI,EACF,wCACE,6BAAC,oBAAD,kBADF,+HAGW,6BAAC,oBAAD,gBAHX,+GAZJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KApBT;AAqBEC,IAAAA,OAAO,EAAEb,WArBX;AAsBEc,IAAAA,IAAI,EAAE,6BAAC,aAAD;AAtBR,GADQ;AAFe,CAApB","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiLink } from '../../../../src/components';\n\nimport Link from './link';\nconst linkSource = require('!!raw-loader!./link');\nconst linkHtml = renderToHtml(Link);\nconst linkSnippet = [\n  `<EuiLink href=\"#\"><!-- Link text --></EuiLink>\n`,\n  `<EuiLink href=\"#\" color=\"secondary\">\n  <!-- Colored link text -->\n</EuiLink>\n`,\n];\n\nexport const LinkExample = {\n  title: 'Link',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: linkSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: linkHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiLink</EuiCode> will apply the correct styling onto links\n          and make sure they are accessible. Links can be passed a color. Note\n          that the <EuiCode>ghost</EuiCode> type should only be used on dark\n          backgrounds (regardless of theming). It will always create a white\n          link.\n        </p>\n      ),\n      props: { EuiLink },\n      snippet: linkSnippet,\n      demo: <Link />,\n    },\n  ],\n};\n"]}]}