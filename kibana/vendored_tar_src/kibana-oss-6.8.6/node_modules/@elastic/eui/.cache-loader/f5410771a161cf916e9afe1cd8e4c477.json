{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/button/button.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/button/button.tsx","mtime":1567631511590},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiButton = exports.ICON_SIDES = exports.SIZES = exports.COLORS = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _common = require(\"../common\");\n\nvar _loading = require(\"../loading\");\n\nvar _services = require(\"../../services\");\n\nvar _icon = require(\"../icon\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar colorToClassNameMap = {\n  primary: 'euiButton--primary',\n  secondary: 'euiButton--secondary',\n  warning: 'euiButton--warning',\n  danger: 'euiButton--danger',\n  ghost: 'euiButton--ghost',\n  text: 'euiButton--text'\n};\nvar COLORS = (0, _common.keysOf)(colorToClassNameMap);\nexports.COLORS = COLORS;\nvar sizeToClassNameMap = {\n  s: 'euiButton--small',\n  m: null\n};\nvar SIZES = (0, _common.keysOf)(sizeToClassNameMap);\nexports.SIZES = SIZES;\nvar iconSideToClassNameMap = {\n  left: null,\n  right: 'euiButton--iconRight'\n};\nvar ICON_SIDES = (0, _common.keysOf)(iconSideToClassNameMap);\nexports.ICON_SIDES = ICON_SIDES;\n\nvar EuiButton = function EuiButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      iconType = _ref.iconType,\n      _ref$iconSide = _ref.iconSide,\n      iconSide = _ref$iconSide === void 0 ? 'left' : _ref$iconSide,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'm' : _ref$size,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? false : _ref$fill,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      href = _ref.href,\n      target = _ref.target,\n      rel = _ref.rel,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      buttonRef = _ref.buttonRef,\n      contentProps = _ref.contentProps,\n      textProps = _ref.textProps,\n      fullWidth = _ref.fullWidth,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"iconType\", \"iconSide\", \"color\", \"size\", \"fill\", \"isDisabled\", \"isLoading\", \"href\", \"target\", \"rel\", \"type\", \"buttonRef\", \"contentProps\", \"textProps\", \"fullWidth\"]);\n\n  // If in the loading state, force disabled to true\n  isDisabled = isLoading ? true : isDisabled;\n  var classes = (0, _classnames.default)('euiButton', color ? colorToClassNameMap[color] : null, size ? sizeToClassNameMap[size] : null, iconSide ? iconSideToClassNameMap[iconSide] : null, className, {\n    'euiButton--fill': fill,\n    'euiButton--fullWidth': fullWidth\n  });\n  var contentClassNames = (0, _classnames.default)('euiButton__content', contentProps && contentProps.className);\n  var textClassNames = (0, _classnames.default)('euiButton__text', textProps && textProps.className); // Add an icon to the button if one exists.\n\n  var buttonIcon;\n\n  if (isLoading) {\n    buttonIcon = _react.default.createElement(_loading.EuiLoadingSpinner, {\n      className: \"euiButton__spinner\",\n      size: \"m\"\n    });\n  } else if (iconType) {\n    buttonIcon = _react.default.createElement(_icon.EuiIcon, {\n      className: \"euiButton__icon\",\n      type: iconType,\n      size: \"m\",\n      \"aria-hidden\": \"true\"\n    });\n  }\n\n  var innerNode = _react.default.createElement(\"span\", _extends({}, contentProps, {\n    className: contentClassNames\n  }), buttonIcon, _react.default.createElement(\"span\", _extends({}, textProps, {\n    className: textClassNames\n  }), children)); // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n\n  if (href && !isDisabled) {\n    var secureRel = (0, _services.getSecureRelForTarget)({\n      href: href,\n      target: target,\n      rel: rel\n    });\n    return _react.default.createElement(\"a\", _extends({\n      className: classes,\n      href: href,\n      target: target,\n      rel: secureRel,\n      ref: buttonRef\n    }, rest), innerNode);\n  }\n\n  return _react.default.createElement(\"button\", _extends({\n    disabled: isDisabled,\n    className: classes,\n    type: type,\n    ref: buttonRef\n  }, rest), innerNode);\n};\n\nexports.EuiButton = EuiButton;\nEuiButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiButton\",\n  \"props\": {\n    \"iconSide\": {\n      \"defaultValue\": {\n        \"value\": \"'left'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'m'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"fill\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/button/button.tsx"],"names":["colorToClassNameMap","primary","secondary","warning","danger","ghost","text","COLORS","sizeToClassNameMap","s","m","SIZES","iconSideToClassNameMap","left","right","ICON_SIDES","EuiButton","children","className","iconType","iconSide","color","size","fill","isDisabled","isLoading","href","target","rel","type","buttonRef","contentProps","textProps","fullWidth","rest","classes","contentClassNames","textClassNames","buttonIcon","innerNode","secureRel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiLoadingSpinner } from '../loading';\nimport { getSecureRelForTarget } from '../../services';\nimport { EuiIcon } from '../icon';\nvar colorToClassNameMap = {\n  primary: 'euiButton--primary',\n  secondary: 'euiButton--secondary',\n  warning: 'euiButton--warning',\n  danger: 'euiButton--danger',\n  ghost: 'euiButton--ghost',\n  text: 'euiButton--text'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nvar sizeToClassNameMap = {\n  s: 'euiButton--small',\n  m: null\n};\nexport var SIZES = keysOf(sizeToClassNameMap);\nvar iconSideToClassNameMap = {\n  left: null,\n  right: 'euiButton--iconRight'\n};\nexport var ICON_SIDES = keysOf(iconSideToClassNameMap);\nexport var EuiButton = ({\n  children,\n  className,\n  iconType,\n  iconSide = 'left',\n  color = 'primary',\n  size = 'm',\n  fill = false,\n  isDisabled,\n  isLoading,\n  href,\n  target,\n  rel,\n  type = 'button',\n  buttonRef,\n  contentProps,\n  textProps,\n  fullWidth,\n  ...rest\n}) => {\n  // If in the loading state, force disabled to true\n  isDisabled = isLoading ? true : isDisabled;\n  const classes = classNames('euiButton', color ? colorToClassNameMap[color] : null, size ? sizeToClassNameMap[size] : null, iconSide ? iconSideToClassNameMap[iconSide] : null, className, {\n    'euiButton--fill': fill,\n    'euiButton--fullWidth': fullWidth\n  });\n  const contentClassNames = classNames('euiButton__content', contentProps && contentProps.className);\n  const textClassNames = classNames('euiButton__text', textProps && textProps.className); // Add an icon to the button if one exists.\n\n  let buttonIcon;\n\n  if (isLoading) {\n    buttonIcon = <EuiLoadingSpinner className=\"euiButton__spinner\" size=\"m\" />;\n  } else if (iconType) {\n    buttonIcon = <EuiIcon className=\"euiButton__icon\" type={iconType} size=\"m\" aria-hidden=\"true\" />;\n  }\n\n  const innerNode = <span {...contentProps} className={contentClassNames}>\n      {buttonIcon}\n      <span {...textProps} className={textClassNames}>\n        {children}\n      </span>\n    </span>; // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n  // this is a button and piggyback off its disabled styles.\n\n  if (href && !isDisabled) {\n    const secureRel = getSecureRelForTarget({\n      href,\n      target,\n      rel\n    });\n    return <a className={classes} href={href} target={target} rel={secureRel} ref={buttonRef} {...rest}>\n        {innerNode}\n      </a>;\n  }\n\n  return <button disabled={isDisabled} className={classes} type={type} ref={buttonRef} {...rest}>\n      {innerNode}\n    </button>;\n};"]}]}