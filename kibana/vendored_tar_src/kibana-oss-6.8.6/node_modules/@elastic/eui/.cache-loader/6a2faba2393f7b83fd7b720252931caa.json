{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/mobile/mobile_section.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/mobile/mobile_section.js","mtime":1565204169559},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.section = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"../../../components\");\n\nvar _services = require(\"../../../services\");\n\nvar _mobile = require(\"./mobile\");\n\nvar _props_info = require(\"./props_info\");\n\nvar _text = require(\"../../../../../src/components/text\");\n\nvar _code = require(\"../../../../../src/components/code\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar source = require('!!raw-loader!./mobile');\n\nvar html = (0, _services.renderToHtml)(_mobile.Table);\nvar exampleItem = \"{\\n  field: 'firstName',\\n  name: 'First Name',\\n  truncateText: true,\\n  mobileOptions: {\\n    render: (item) => (<span>{item.firstName} {item.lastName}</span>), // Custom renderer for mobile view only\\n    header: false,   // Won't show inline header in mobile view\\n    fullWidth: true, // Forces 100% width of the cell\\n    enlarge: true,   // Increase text size compared to rest of cells\\n    truncateText: false, // Only works if a 'render()' is also provided\\n  }\\n}\";\nvar section = {\n  title: 'Responsive tables',\n  source: [{\n    type: _components.GuideSectionTypes.JS,\n    code: source\n  }, {\n    type: _components.GuideSectionTypes.HTML,\n    code: html\n  }],\n  text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Allowing a table to be responsive means breaking each row down into its own section and individually displaying each table header above the cell contents. There are few times when you may want to exclude this behavior from your table, for instance, when the table has very few columns or the table does not break down easily into this format. For these use cases, you may set \", _react.default.createElement(_code.EuiCode, null, \"responsive = false\"), \".\"), _react.default.createElement(\"h4\", null, \"To make your table work responsively, please make sure you add the following \", _react.default.createElement(_text.EuiTextColor, {\n    color: \"danger\"\n  }, \"additional\"), \" props to the top level table component (\", _react.default.createElement(_code.EuiCode, null, \"EuiBasicTable\"), \" or\", ' ', _react.default.createElement(_code.EuiCode, null, \"EuiInMemoryTable\"), \"):\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_code.EuiCode, null, \"isSelectable\"), \": if the table has a single column of checkboxes for selecting rows\"), _react.default.createElement(\"li\", null, _react.default.createElement(_code.EuiCode, null, \"isExpandable\"), \": if the table has rows that can expand\"), _react.default.createElement(\"li\", null, _react.default.createElement(_code.EuiCode, null, \"hasActions\"), \": if the table has a column for actions which may/may not be hidden in hover\")), _react.default.createElement(\"h4\", null, \"The \", _react.default.createElement(_code.EuiCode, null, \"mobileOptions\"), \" object can be passed to the\", ' ', _react.default.createElement(_code.EuiCode, null, \"EuiTableRowCell\"), \" directly or with each column item provided to \", _react.default.createElement(_code.EuiCode, null, \"EuiBasicTable\"), \".\"), _react.default.createElement(_code.EuiCodeBlock, {\n    lang: \"javascript\"\n  }, exampleItem), _react.default.createElement(\"h4\", null, \"Note:\"), _react.default.createElement(\"p\", null, \"You can also change basic table row cell props like\", ' ', _react.default.createElement(_code.EuiCode, null, \"truncateText\"), \" and \", _react.default.createElement(_code.EuiCode, null, \"textOnly\"), \" for mobile layouts, though you must also be passing a mobile specific render function.\")),\n  props: _props_info.propsInfo,\n  demo: _react.default.createElement(_mobile.Table, null)\n};\nexports.section = section;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/mobile/mobile_section.js"],"names":["source","require","html","Table","exampleItem","section","title","type","GuideSectionTypes","JS","code","HTML","text","props","propsInfo","demo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAMC,IAAI,GAAG,4BAAaC,aAAb,CAAb;AAEA,IAAMC,WAAW,8dAAjB;AAaO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,mBADc;AAErBN,EAAAA,MAAM,EAAE,CACN;AACEO,IAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,IAAAA,IAAI,EAAEV;AAFR,GADM,EAKN;AACEO,IAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,IAAAA,IAAI,EAAER;AAFR,GALM,CAFa;AAYrBU,EAAAA,IAAI,EACF,0CACE,oaAMqB,6BAAC,aAAD,6BANrB,MADF,EASE,0HAEY,6BAAC,kBAAD;AAAc,IAAA,KAAK,EAAC;AAApB,kBAFZ,+CAGoC,6BAAC,aAAD,wBAHpC,SAGwE,GAHxE,EAIE,6BAAC,aAAD,2BAJF,OATF,EAeE,yCACE,yCACE,6BAAC,aAAD,uBADF,wEADF,EAKE,yCACE,6BAAC,aAAD,uBADF,4CALF,EAQE,yCACE,6BAAC,aAAD,qBADF,iFARF,CAfF,EA4BE,iDACM,6BAAC,aAAD,wBADN,kCACmE,GADnE,EAEE,6BAAC,aAAD,0BAFF,qDAGc,6BAAC,aAAD,wBAHd,MA5BF,EAiCE,6BAAC,kBAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,KAAiCR,WAAjC,CAjCF,EAkCE,iDAlCF,EAmCE,+FACsD,GADtD,EAEE,6BAAC,aAAD,uBAFF,WAEsC,6BAAC,aAAD,mBAFtC,4FAnCF,CAbmB;AAwDrBS,EAAAA,KAAK,EAAEC,qBAxDc;AAyDrBC,EAAAA,IAAI,EAAE,6BAAC,aAAD;AAzDe,CAAhB","sourcesContent":["import React from 'react';\nimport { GuideSectionTypes } from '../../../components';\nimport { renderToHtml } from '../../../services';\n\nimport { Table } from './mobile';\nimport { propsInfo } from './props_info';\nimport { EuiTextColor } from '../../../../../src/components/text';\nimport { EuiCode, EuiCodeBlock } from '../../../../../src/components/code';\nconst source = require('!!raw-loader!./mobile');\nconst html = renderToHtml(Table);\n\nconst exampleItem = `{\n  field: 'firstName',\n  name: 'First Name',\n  truncateText: true,\n  mobileOptions: {\n    render: (item) => (<span>{item.firstName} {item.lastName}</span>), // Custom renderer for mobile view only\n    header: false,   // Won't show inline header in mobile view\n    fullWidth: true, // Forces 100% width of the cell\n    enlarge: true,   // Increase text size compared to rest of cells\n    truncateText: false, // Only works if a 'render()' is also provided\n  }\n}`;\n\nexport const section = {\n  title: 'Responsive tables',\n  source: [\n    {\n      type: GuideSectionTypes.JS,\n      code: source,\n    },\n    {\n      type: GuideSectionTypes.HTML,\n      code: html,\n    },\n  ],\n  text: (\n    <div>\n      <p>\n        Allowing a table to be responsive means breaking each row down into its\n        own section and individually displaying each table header above the cell\n        contents. There are few times when you may want to exclude this behavior\n        from your table, for instance, when the table has very few columns or\n        the table does not break down easily into this format. For these use\n        cases, you may set <EuiCode>responsive = false</EuiCode>.\n      </p>\n      <h4>\n        To make your table work responsively, please make sure you add the\n        following <EuiTextColor color=\"danger\">additional</EuiTextColor> props\n        to the top level table component (<EuiCode>EuiBasicTable</EuiCode> or{' '}\n        <EuiCode>EuiInMemoryTable</EuiCode>):\n      </h4>\n      <ul>\n        <li>\n          <EuiCode>isSelectable</EuiCode>: if the table has a single column of\n          checkboxes for selecting rows\n        </li>\n        <li>\n          <EuiCode>isExpandable</EuiCode>: if the table has rows that can expand\n        </li>\n        <li>\n          <EuiCode>hasActions</EuiCode>: if the table has a column for actions\n          which may/may not be hidden in hover\n        </li>\n      </ul>\n      <h4>\n        The <EuiCode>mobileOptions</EuiCode> object can be passed to the{' '}\n        <EuiCode>EuiTableRowCell</EuiCode> directly or with each column item\n        provided to <EuiCode>EuiBasicTable</EuiCode>.\n      </h4>\n      <EuiCodeBlock lang=\"javascript\">{exampleItem}</EuiCodeBlock>\n      <h4>Note:</h4>\n      <p>\n        You can also change basic table row cell props like{' '}\n        <EuiCode>truncateText</EuiCode> and <EuiCode>textOnly</EuiCode> for\n        mobile layouts, though you must also be passing a mobile specific render\n        function.\n      </p>\n    </div>\n  ),\n  props: propsInfo,\n  demo: <Table />,\n};\n"]}]}