{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/image/image.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/image/image.js","mtime":1567693563605},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiImage = exports.SIZES = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _overlay_mask = require(\"../overlay_mask\");\n\nvar _icon = require(\"../icon\");\n\nvar _focus_trap = require(\"../focus_trap\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar sizeToClassNameMap = {\n  s: 'euiImage--small',\n  m: 'euiImage--medium',\n  l: 'euiImage--large',\n  xl: 'euiImage--xlarge',\n  fullWidth: 'euiImage--fullWidth',\n  original: ''\n};\nvar SIZES = Object.keys(sizeToClassNameMap);\nexports.SIZES = SIZES;\nvar fullScreenIconColorMap = {\n  light: 'ghost',\n  dark: 'default'\n};\n\nvar EuiImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiImage, _Component);\n\n  function EuiImage(props) {\n    var _this;\n\n    _classCallCheck(this, EuiImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiImage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      if (event.keyCode === _services.keyCodes.ESCAPE) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        _this.closeFullScreen();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeFullScreen\", function () {\n      _this.setState({\n        isFullScreenActive: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openFullScreen\", function () {\n      _this.setState({\n        isFullScreenActive: true\n      });\n    });\n\n    _this.state = {\n      isFullScreenActive: false\n    };\n    return _this;\n  }\n\n  _createClass(EuiImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          url = _this$props.url,\n          size = _this$props.size,\n          caption = _this$props.caption,\n          hasShadow = _this$props.hasShadow,\n          allowFullScreen = _this$props.allowFullScreen,\n          fullScreenIconColor = _this$props.fullScreenIconColor,\n          alt = _this$props.alt,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"url\", \"size\", \"caption\", \"hasShadow\", \"allowFullScreen\", \"fullScreenIconColor\", \"alt\"]);\n\n      var isFullScreenActive = this.state.isFullScreenActive;\n      var classes = (0, _classnames.default)('euiImage', sizeToClassNameMap[size], {\n        'euiImage--hasShadow': hasShadow,\n        'euiImage--allowFullScreen': allowFullScreen\n      }, className);\n      var optionalCaption;\n\n      if (caption) {\n        optionalCaption = _react.default.createElement(\"figcaption\", {\n          className: \"euiImage__caption\"\n        }, caption);\n      }\n\n      var allowFullScreeIcon = _react.default.createElement(_icon.EuiIcon, {\n        type: \"fullScreen\",\n        color: fullScreenIconColorMap[fullScreenIconColor],\n        className: \"euiImage__icon\"\n      });\n\n      var fullScreenDisplay = _react.default.createElement(_overlay_mask.EuiOverlayMask, {\n        onClick: this.closeFullScreen\n      }, _react.default.createElement(_focus_trap.EuiFocusTrap, {\n        clickOutsideDisables: true\n      }, _react.default.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.closeFullScreen,\n        onKeyDown: this.onKeyDown\n      }, _react.default.createElement(\"figure\", {\n        ref: function ref(node) {\n          _this2.figure = node;\n        },\n        className: \"euiImageFullScreen\"\n      }, _react.default.createElement(\"img\", {\n        src: url,\n        className: \"euiImageFullScreen__img\",\n        alt: alt\n      }), optionalCaption))));\n\n      if (allowFullScreen) {\n        return _react.default.createElement(\"button\", {\n          type: \"button\",\n          onClick: allowFullScreen ? this.openFullScreen : undefined,\n          className: classes\n        }, _react.default.createElement(\"figure\", rest, _react.default.createElement(\"img\", {\n          src: url,\n          className: \"euiImage__img\",\n          alt: alt\n        }), optionalCaption, allowFullScreeIcon, isFullScreenActive && fullScreenDisplay));\n      } else {\n        return _react.default.createElement(\"figure\", _extends({\n          className: classes\n        }, rest), _react.default.createElement(\"img\", {\n          src: url,\n          className: \"euiImage__img\",\n          alt: alt\n        }), optionalCaption);\n      }\n    }\n  }]);\n\n  return EuiImage;\n}(_react.Component);\n\nexports.EuiImage = EuiImage;\nEuiImage.propTypes = {\n  alt: _propTypes.default.string.isRequired,\n  size: _propTypes.default.string.isRequired,\n  fullScreenIconColor: _propTypes.default.string\n};\nEuiImage.defaultProps = {\n  size: 'original',\n  fullScreenIconColor: 'light'\n};\nEuiImage.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"closeFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"openFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiImage\",\n  \"props\": {\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'original'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullScreenIconColor\": {\n      \"defaultValue\": {\n        \"value\": \"'light'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"alt\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/image/image.js"],"names":["sizeToClassNameMap","s","m","l","xl","fullWidth","original","SIZES","Object","keys","fullScreenIconColorMap","light","dark","EuiImage","props","event","keyCode","keyCodes","ESCAPE","preventDefault","stopPropagation","closeFullScreen","setState","isFullScreenActive","state","className","url","size","caption","hasShadow","allowFullScreen","fullScreenIconColor","alt","rest","classes","optionalCaption","allowFullScreeIcon","fullScreenDisplay","onKeyDown","node","figure","openFullScreen","undefined","Component","propTypes","PropTypes","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiOverlayMask } from '../overlay_mask';\n\nimport { EuiIcon } from '../icon';\n\nimport { EuiFocusTrap } from '../focus_trap';\n\nimport { keyCodes } from '../../services';\n\nconst sizeToClassNameMap = {\n  s: 'euiImage--small',\n  m: 'euiImage--medium',\n  l: 'euiImage--large',\n  xl: 'euiImage--xlarge',\n  fullWidth: 'euiImage--fullWidth',\n  original: '',\n};\n\nexport const SIZES = Object.keys(sizeToClassNameMap);\n\nconst fullScreenIconColorMap = {\n  light: 'ghost',\n  dark: 'default',\n};\n\nexport class EuiImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFullScreenActive: false,\n    };\n  }\n\n  onKeyDown = event => {\n    if (event.keyCode === keyCodes.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.closeFullScreen();\n    }\n  };\n\n  closeFullScreen = () => {\n    this.setState({\n      isFullScreenActive: false,\n    });\n  };\n\n  openFullScreen = () => {\n    this.setState({\n      isFullScreenActive: true,\n    });\n  };\n\n  render() {\n    const {\n      className,\n      url,\n      size,\n      caption,\n      hasShadow,\n      allowFullScreen,\n      fullScreenIconColor,\n      alt,\n      ...rest\n    } = this.props;\n\n    const { isFullScreenActive } = this.state;\n\n    const classes = classNames(\n      'euiImage',\n      sizeToClassNameMap[size],\n      {\n        'euiImage--hasShadow': hasShadow,\n        'euiImage--allowFullScreen': allowFullScreen,\n      },\n      className\n    );\n\n    let optionalCaption;\n    if (caption) {\n      optionalCaption = (\n        <figcaption className=\"euiImage__caption\">{caption}</figcaption>\n      );\n    }\n\n    const allowFullScreeIcon = (\n      <EuiIcon\n        type=\"fullScreen\"\n        color={fullScreenIconColorMap[fullScreenIconColor]}\n        className=\"euiImage__icon\"\n      />\n    );\n\n    const fullScreenDisplay = (\n      <EuiOverlayMask onClick={this.closeFullScreen}>\n        <EuiFocusTrap clickOutsideDisables={true}>\n          <button\n            type=\"button\"\n            onClick={this.closeFullScreen}\n            onKeyDown={this.onKeyDown}>\n            <figure\n              ref={node => {\n                this.figure = node;\n              }}\n              className=\"euiImageFullScreen\">\n              <img src={url} className=\"euiImageFullScreen__img\" alt={alt} />\n              {optionalCaption}\n            </figure>\n          </button>\n        </EuiFocusTrap>\n      </EuiOverlayMask>\n    );\n\n    if (allowFullScreen) {\n      return (\n        <button\n          type=\"button\"\n          onClick={allowFullScreen ? this.openFullScreen : undefined}\n          className={classes}>\n          <figure {...rest}>\n            <img src={url} className=\"euiImage__img\" alt={alt} />\n            {optionalCaption}\n            {allowFullScreeIcon}\n            {isFullScreenActive && fullScreenDisplay}\n          </figure>\n        </button>\n      );\n    } else {\n      return (\n        <figure className={classes} {...rest}>\n          <img src={url} className=\"euiImage__img\" alt={alt} />\n          {optionalCaption}\n        </figure>\n      );\n    }\n  }\n}\n\nEuiImage.propTypes = {\n  alt: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  fullScreenIconColor: PropTypes.string,\n};\n\nEuiImage.defaultProps = {\n  size: 'original',\n  fullScreenIconColor: 'light',\n};\n"]}]}