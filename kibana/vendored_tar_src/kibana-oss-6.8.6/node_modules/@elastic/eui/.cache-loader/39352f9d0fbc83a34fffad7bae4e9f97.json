{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/focus_trap/focus_trap.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/focus_trap/focus_trap.js","mtime":1567534071256},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiFocusTrap = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactFocusLock = _interopRequireDefault(require(\"react-focus-lock\"));\n\nvar _outside_click_detector = require(\"../outside_click_detector\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar OutsideEventDetector = function OutsideEventDetector(_ref) {\n  var children = _ref.children,\n      handleEvent = _ref.handleEvent,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"handleEvent\"]);\n\n  var eventHandlers = ['onMouseDown', 'onTouchStart'].reduce(function (obj, eventName) {\n    obj[eventName] = handleEvent;\n    return obj;\n  }, {});\n  return _react.default.createElement(\"div\", _extends({}, eventHandlers, rest), children);\n};\n\nvar EuiFocusTrap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EuiFocusTrap, _React$Component);\n\n  function EuiFocusTrap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiFocusTrap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiFocusTrap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      hasBeenDisabledByClick: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"lastInterceptedEvent\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"preventFocusExit\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setInitialFocus\", function (initialFocus) {\n      var node = initialFocus;\n\n      if (typeof node === 'string') {\n        node = document.querySelector(initialFocus);\n      }\n\n      if (typeof node === 'function') {\n        node = initialFocus();\n      }\n\n      if (!node) return; // `data-autofocus` is part of the 'react-focus-lock' API\n\n      node.setAttribute('data-autofocus', true);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleDisabled\", function () {\n      var shouldDisable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !_this.state.hasBeenDisabledByClick;\n\n      _this.setState({\n        hasBeenDisabledByClick: shouldDisable\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleExitPrevented\", function () {\n      var shouldPrevent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !_this.preventFocusExit;\n      _this.preventFocusExit = shouldPrevent;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleOutsideClick\", function (event) {\n      _this.toggleExitPrevented(false);\n\n      if (_this.preventFocusExit && event.target === _this.lastInterceptedEvent.target) return;\n\n      _this.toggleDisabled(true);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleBubbledEvent\", function (e) {\n      _this.lastInterceptedEvent = e.nativeEvent;\n\n      _this.toggleExitPrevented(true);\n    });\n\n    return _this;\n  }\n\n  _createClass(EuiFocusTrap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setInitialFocus(this.props.initialFocus);\n    } // Programmatically sets focus on a nested DOM node; optional\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          clickOutsideDisables = _this$props.clickOutsideDisables,\n          disabled = _this$props.disabled,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"clickOutsideDisables\", \"disabled\", \"style\"]);\n\n      var isDisabled = disabled || this.state.hasBeenDisabledByClick;\n\n      var lockProps = _objectSpread({\n        disabled: isDisabled\n      }, rest);\n\n      return clickOutsideDisables ? _react.default.createElement(_outside_click_detector.EuiOutsideClickDetector, {\n        isDisabled: isDisabled,\n        onOutsideClick: this.handleOutsideClick\n      }, _react.default.createElement(OutsideEventDetector, {\n        handleEvent: this.handleBubbledEvent\n      }, _react.default.createElement(_reactFocusLock.default, _extends({\n        lockProps: style\n      }, lockProps), children))) : _react.default.createElement(_reactFocusLock.default, _extends({\n        lockProps: style\n      }, lockProps), children);\n    }\n  }]);\n\n  return EuiFocusTrap;\n}(_react.default.Component);\n\nexports.EuiFocusTrap = EuiFocusTrap;\nEuiFocusTrap.propTypes = {\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Disables the focus trap when clicks occur outside of the trapped area\n   */\n  clickOutsideDisables: _propTypes.default.bool,\n\n  /**\n   * From `react-focus-lock`.\n   * Focus will not be trapped if false\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * A DOM node, a selector string (which will be passed to\n   * `document.querySelector()` to find the DOM node), or a function that\n   * returns a DOM node.\n   */\n  initialFocus: _propTypes.default.oneOfType([_propTypes.default.instanceOf(HTMLElement), _propTypes.default.func, _propTypes.default.string]),\n\n  /**\n   * From `react-focus-lock`.\n   * When exiting/disabling, focus will return to the element that previously help focus\n   */\n  returnFocus: _propTypes.default.bool\n};\nEuiFocusTrap.defaultProps = {\n  clickOutsideDisables: false,\n  disabled: false,\n  returnFocus: true\n};\nEuiFocusTrap.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"setInitialFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"initialFocus\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleDisabled\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"shouldDisable\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleExitPrevented\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"shouldPrevent\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleOutsideClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleBubbledEvent\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiFocusTrap\",\n  \"props\": {\n    \"clickOutsideDisables\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Disables the focus trap when clicks occur outside of the trapped area\"\n    },\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"From `react-focus-lock`.\\nFocus will not be trapped if false\"\n    },\n    \"returnFocus\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"From `react-focus-lock`.\\nWhen exiting/disabling, focus will return to the element that previously help focus\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"initialFocus\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"instanceOf\",\n          \"value\": \"HTMLElement\"\n        }, {\n          \"name\": \"func\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"A DOM node, a selector string (which will be passed to\\n`document.querySelector()` to find the DOM node), or a function that\\nreturns a DOM node.\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/focus_trap/focus_trap.js"],"names":["OutsideEventDetector","children","handleEvent","rest","eventHandlers","reduce","obj","eventName","EuiFocusTrap","hasBeenDisabledByClick","initialFocus","node","document","querySelector","setAttribute","shouldDisable","state","setState","shouldPrevent","preventFocusExit","event","toggleExitPrevented","target","lastInterceptedEvent","toggleDisabled","e","nativeEvent","setInitialFocus","props","clickOutsideDisables","disabled","style","isDisabled","lockProps","handleOutsideClick","handleBubbledEvent","React","Component","propTypes","PropTypes","isRequired","bool","oneOfType","instanceOf","HTMLElement","func","string","returnFocus","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FocusLock from 'react-focus-lock';\n\nimport { EuiOutsideClickDetector } from '../outside_click_detector';\n\nconst OutsideEventDetector = ({ children, handleEvent, ...rest }) => {\n  const eventHandlers = ['onMouseDown', 'onTouchStart'].reduce(\n    (obj, eventName) => {\n      obj[eventName] = handleEvent;\n      return obj;\n    },\n    {}\n  );\n  return (\n    <div {...eventHandlers} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport class EuiFocusTrap extends React.Component {\n  state = {\n    hasBeenDisabledByClick: false,\n  };\n\n  lastInterceptedEvent = null;\n  preventFocusExit = false;\n\n  componentDidMount() {\n    this.setInitialFocus(this.props.initialFocus);\n  }\n\n  // Programmatically sets focus on a nested DOM node; optional\n  setInitialFocus = initialFocus => {\n    let node = initialFocus;\n    if (typeof node === 'string') {\n      node = document.querySelector(initialFocus);\n    }\n    if (typeof node === 'function') {\n      node = initialFocus();\n    }\n    if (!node) return;\n    // `data-autofocus` is part of the 'react-focus-lock' API\n    node.setAttribute('data-autofocus', true);\n  };\n\n  // Sets whether the focus trap has been disabled by clicks outside its component tree\n  // Only applicable for `clickOutsideDisables`\n  toggleDisabled = (shouldDisable = !this.state.hasBeenDisabledByClick) => {\n    this.setState({\n      hasBeenDisabledByClick: shouldDisable,\n    });\n  };\n\n  // Sets whether an event has been prevented from disabling the focus trap\n  // Only applicable for `clickOutsideDisables`\n  toggleExitPrevented = (shouldPrevent = !this.preventFocusExit) => {\n    this.preventFocusExit = shouldPrevent;\n  };\n\n  // Event handler to determine whether a mouse or key event should disable the focus trap\n  // Only applicable for `clickOutsideDisables`\n  handleOutsideClick = event => {\n    this.toggleExitPrevented(false);\n    if (\n      this.preventFocusExit &&\n      event.target === this.lastInterceptedEvent.target\n    )\n      return;\n    this.toggleDisabled(true);\n  };\n\n  // Event handler to capture events from within the focus trap subtree and prevent them from disabling the trap (mostly for portals)\n  // Only applicable for `clickOutsideDisables`\n  handleBubbledEvent = e => {\n    this.lastInterceptedEvent = e.nativeEvent;\n    this.toggleExitPrevented(true);\n  };\n\n  render() {\n    const {\n      children,\n      clickOutsideDisables,\n      disabled,\n      style,\n      ...rest\n    } = this.props;\n    const isDisabled = disabled || this.state.hasBeenDisabledByClick;\n    const lockProps = {\n      disabled: isDisabled,\n      ...rest,\n    };\n    return clickOutsideDisables ? (\n      <EuiOutsideClickDetector\n        isDisabled={isDisabled}\n        onOutsideClick={this.handleOutsideClick}>\n        <OutsideEventDetector handleEvent={this.handleBubbledEvent}>\n          <FocusLock lockProps={style} {...lockProps}>\n            {children}\n          </FocusLock>\n        </OutsideEventDetector>\n      </EuiOutsideClickDetector>\n    ) : (\n      <FocusLock lockProps={style} {...lockProps}>\n        {children}\n      </FocusLock>\n    );\n  }\n}\n\nEuiFocusTrap.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Disables the focus trap when clicks occur outside of the trapped area\n   */\n  clickOutsideDisables: PropTypes.bool,\n  /**\n   * From `react-focus-lock`.\n   * Focus will not be trapped if false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A DOM node, a selector string (which will be passed to\n   * `document.querySelector()` to find the DOM node), or a function that\n   * returns a DOM node.\n   */\n  initialFocus: PropTypes.oneOfType([\n    PropTypes.instanceOf(HTMLElement),\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  /**\n   * From `react-focus-lock`.\n   * When exiting/disabling, focus will return to the element that previously help focus\n   */\n  returnFocus: PropTypes.bool,\n};\n\nEuiFocusTrap.defaultProps = {\n  clickOutsideDisables: false,\n  disabled: false,\n  returnFocus: true,\n};\n"]}]}