{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer.js","mtime":1567626462173},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiNavDrawer = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _list_group = require(\"../list_group\");\n\nvar _nav_drawer_flyout = require(\"./nav_drawer_flyout\");\n\nvar _nav_drawer_group = require(\"./nav_drawer_group\");\n\nvar _outside_click_detector = require(\"../outside_click_detector\");\n\nvar _i18n = require(\"../i18n\");\n\nvar _flex = require(\"../flex\");\n\nvar _utils = require(\"../color_picker/utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiNavDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiNavDrawer, _Component);\n\n  function EuiNavDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, EuiNavDrawer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiNavDrawer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"returnOnIsLockedUpdate\", function (isLockedState) {\n      if (_this.props.onIsLockedUpdate) {\n        _this.props.onIsLockedUpdate(isLockedState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"functionToCallOnWindowResize\", (0, _utils.throttle)(function () {\n      if (window.innerWidth < 1200) {\n        _this.collapseDrawer();\n\n        _this.collapseFlyout();\n      } // reacts every 50ms to resize changes and always gets the final update\n\n    }, 50));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"timeoutID\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"sideNavLockClicked\", function () {\n      if (_this.state.isLocked) {\n        window.removeEventListener('resize', _this.functionToCallOnWindowResize);\n      } else {\n        window.addEventListener('resize', _this.functionToCallOnWindowResize);\n      }\n\n      _this.returnOnIsLockedUpdate(!_this.state.isLocked);\n\n      _this.setState({\n        isLocked: !_this.state.isLocked,\n        isCollapsed: false,\n        outsideClickDisabled: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleOpen\", function () {\n      _this.setState({\n        isCollapsed: !_this.state.isCollapsed\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          outsideClickDisabled: _this.state.isCollapsed ? true : false,\n          toolTipsEnabled: _this.state.isCollapsed ? true : false\n        });\n      }, 150);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"collapseButtonClick\", function () {\n      if (_this.state.isCollapsed) {\n        _this.expandDrawer();\n      } else {\n        _this.collapseDrawer();\n      }\n\n      _this.collapseFlyout();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"expandDrawer\", function () {\n      _this.setState({\n        isCollapsed: false,\n        outsideClickDisabled: false\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          toolTipsEnabled: false\n        });\n      }, 150);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"collapseDrawer\", function () {\n      _this.setState({\n        isCollapsed: true,\n        outsideClickDisabled: _this.state.flyoutIsCollapsed ? true : false,\n        toolTipsEnabled: true,\n        isLocked: false\n      });\n\n      _this.returnOnIsLockedUpdate(false); // Scrolls the menu and flyout back to top when the nav drawer collapses\n\n\n      setTimeout(function () {\n        document.getElementById('navDrawerMenu').scrollTop = 0;\n      }, 50); // In case it was locked before, remove the window resize listener\n\n      window.removeEventListener('resize', _this.functionToCallOnWindowResize);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"manageFocus\", function () {\n      // This prevents the drawer from collapsing when tabbing through children\n      // by clearing the timeout thus cancelling the onBlur event (see focusOut).\n      // This means isManagingFocus remains true as long as a child element\n      // has focus. This is the case since React bubbles up onFocus and onBlur\n      // events from the child elements.\n      clearTimeout(_this.timeoutID);\n\n      if (!_this.state.isManagingFocus) {\n        _this.setState({\n          isManagingFocus: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focusOut\", function () {\n      // This collapses the drawer when no children have focus (i.e. tabbed out).\n      // In other words, if focus does not bubble up from a child element, then\n      // the drawer will collapse. See the corresponding block in expandDrawer\n      // (called by onFocus) which cancels this operation via clearTimeout.\n      _this.timeoutID = setTimeout(function () {\n        if (_this.state.isManagingFocus) {\n          _this.setState({\n            isManagingFocus: false\n          });\n\n          _this.closeBoth();\n        }\n      }, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"expandFlyout\", function (links, title) {\n      var content = links;\n\n      if (_this.state.navFlyoutTitle === title) {\n        _this.collapseFlyout();\n      } else {\n        _this.setState({\n          flyoutIsCollapsed: false,\n          navFlyoutTitle: title,\n          navFlyoutContent: content,\n          isCollapsed: _this.state.isLocked ? false : true,\n          toolTipsEnabled: false,\n          outsideClickDisabled: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"collapseFlyout\", function () {\n      _this.setState({\n        flyoutIsCollapsed: true,\n        navFlyoutTitle: null,\n        navFlyoutContent: null,\n        toolTipsEnabled: _this.state.isLocked ? false : true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeBoth\", function () {\n      if (!_this.state.isLocked) _this.collapseDrawer();\n\n      _this.collapseFlyout();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDrawerMenuClick\", function (e) {\n      // walk up e.target until either:\n      // 1. a[href] - close the menu\n      // 2. document.body - do nothing\n      var element = e.target;\n\n      while (element !== undefined && element !== document.body && (element.tagName !== 'A' || element.getAttribute('href') === undefined)) {\n        element = element.parentElement;\n      }\n\n      if (element !== document.body) {\n        // this is an anchor with an href\n        _this.closeBoth();\n      }\n    });\n\n    _this.state = {\n      isLocked: props.isLocked,\n      isCollapsed: !props.isLocked,\n      flyoutIsCollapsed: true,\n      outsideClickDisabled: true,\n      isManagingFocus: false,\n      toolTipsEnabled: true\n    };\n    return _this;\n  }\n\n  _createClass(EuiNavDrawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLocked) {\n        window.addEventListener('resize', this.functionToCallOnWindowResize);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.functionToCallOnWindowResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          showExpandButton = _this$props.showExpandButton,\n          showToolTips = _this$props.showToolTips,\n          isCollapsed = _this$props.isCollapsed,\n          isLocked = _this$props.isLocked,\n          onIsLockedUpdate = _this$props.onIsLockedUpdate,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"showExpandButton\", \"showToolTips\", \"isCollapsed\", \"isLocked\", \"onIsLockedUpdate\"]);\n\n      var classes = (0, _classnames.default)('euiNavDrawer', {\n        'euiNavDrawer-isCollapsed': this.state.isCollapsed,\n        'euiNavDrawer-isExpanded': !this.state.isCollapsed,\n        'euiNavDrawer-isLocked': this.state.isLocked,\n        'euiNavDrawer-flyoutIsCollapsed': this.state.flyoutIsCollapsed,\n        'euiNavDrawer-flyoutIsExpanded': !this.state.flyoutIsCollapsed\n      }, className);\n      var footerContent;\n\n      if (showExpandButton) {\n        footerContent = _react.default.createElement(_list_group.EuiListGroup, {\n          className: \"euiNavDrawer__expandButton\",\n          flush: true\n        }, _react.default.createElement(_i18n.EuiI18n, {\n          tokens: ['euiNavDrawer.sideNavCollapse', 'euiNavDrawer.sideNavExpand', 'euiNavDrawer.sideNavLockAriaLabel', 'euiNavDrawer.sideNavLockExpanded', 'euiNavDrawer.sideNavLockCollapsed'],\n          defaults: ['Collapse', 'Expand', 'Dock navigation', 'Navigation is docked', 'Navigation is undocked']\n        }, function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 5),\n              sideNavCollapse = _ref2[0],\n              sideNavExpand = _ref2[1],\n              sideNavLockAriaLabel = _ref2[2],\n              sideNavLockExpanded = _ref2[3],\n              sideNavLockCollapsed = _ref2[4];\n\n          return _react.default.createElement(_list_group.EuiListGroupItem, {\n            label: _this2.state.isCollapsed ? sideNavExpand : sideNavCollapse,\n            iconType: _this2.state.isCollapsed ? 'menuRight' : 'menuLeft',\n            size: \"s\",\n            showToolTip: _this2.state.isCollapsed,\n            extraAction: {\n              className: 'euiNavDrawer__expandButtonLockAction',\n              color: 'text',\n              onClick: _this2.sideNavLockClicked,\n              iconType: _this2.state.isLocked ? 'lock' : 'lockOpen',\n              iconSize: 's',\n              'aria-label': sideNavLockAriaLabel,\n              title: _this2.state.isLocked ? sideNavLockExpanded : sideNavLockCollapsed,\n              'aria-checked': _this2.state.isLocked ? true : false,\n              role: 'switch'\n            },\n            onClick: _this2.collapseButtonClick,\n            \"data-test-subj\": _this2.state.isCollapsed ? 'navDrawerExpandButton-isCollapsed' : 'navDrawerExpandButton-isExpanded'\n          });\n        }));\n      }\n\n      var flyoutContent = _react.default.createElement(_nav_drawer_flyout.EuiNavDrawerFlyout, {\n        id: \"navDrawerFlyout\",\n        title: this.state.navFlyoutTitle,\n        isCollapsed: this.state.flyoutIsCollapsed,\n        listItems: this.state.navFlyoutContent,\n        wrapText: true\n      }); // Add an onClick that expands the flyout sub menu for any list items (links)\n      // that have a flyoutMenu prop (sub links)\n\n\n      var modifiedChildren = children; // 1. Loop through the EuiNavDrawer children (EuiListGroup, EuiHorizontalRules, etc)\n\n      modifiedChildren = _react.default.Children.map(this.props.children, function (child) {\n        // 2. Check if child is an EuiNavDrawerGroup and if it does have a flyout, add the expand function\n        if (child.type === _nav_drawer_group.EuiNavDrawerGroup) {\n          var item = _react.default.cloneElement(child, {\n            flyoutMenuButtonClick: _this2.expandFlyout,\n            showToolTips: _this2.state.toolTipsEnabled && showToolTips\n          });\n\n          return item;\n        } else {\n          return child;\n        }\n      });\n      var menuClasses = (0, _classnames.default)('euiNavDrawerMenu', {\n        'euiNavDrawerMenu-hasFooter': footerContent\n      });\n      return _react.default.createElement(_outside_click_detector.EuiOutsideClickDetector, {\n        onOutsideClick: function onOutsideClick() {\n          return _this2.closeBoth();\n        },\n        isDisabled: this.state.outsideClickDisabled\n      }, _react.default.createElement(\"div\", _extends({\n        className: classes,\n        onBlur: this.focusOut,\n        onFocus: this.manageFocus\n      }, rest), _react.default.createElement(_flex.EuiFlexItem, {\n        grow: false\n      }, _react.default.createElement(\"div\", {\n        id: \"navDrawerMenu\",\n        className: menuClasses,\n        onClick: this.handleDrawerMenuClick\n      }, footerContent, modifiedChildren)), flyoutContent));\n    }\n  }]);\n\n  return EuiNavDrawer;\n}(_react.Component);\n\nexports.EuiNavDrawer = EuiNavDrawer;\nEuiNavDrawer.propTypes = {\n  children: _propTypes.default.node,\n  className: _propTypes.default.string,\n\n  /**\n   * Adds fixed toggle button to bottom of menu area\n   */\n  showExpandButton: _propTypes.default.bool,\n\n  /**\n   * Display tooltips on side nav items\n   */\n  showToolTips: _propTypes.default.bool,\n\n  /**\n   * Keep drawer locked open by default\n   */\n  isLocked: _propTypes.default.bool,\n\n  /**\n   * Returns the current state of isLocked\n   */\n  onIsLockedUpdate: _propTypes.default.func\n};\nEuiNavDrawer.defaultProps = {\n  showExpandButton: true,\n  showToolTips: true\n};\nEuiNavDrawer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"returnOnIsLockedUpdate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"isLockedState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"sideNavLockClicked\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleOpen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"collapseButtonClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"expandDrawer\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"collapseDrawer\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"manageFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"focusOut\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"expandFlyout\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"links\",\n      \"type\": null\n    }, {\n      \"name\": \"title\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"collapseFlyout\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeBoth\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleDrawerMenuClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiNavDrawer\",\n  \"props\": {\n    \"showExpandButton\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Adds fixed toggle button to bottom of menu area\"\n    },\n    \"showToolTips\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Display tooltips on side nav items\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLocked\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Keep drawer locked open by default\"\n    },\n    \"onIsLockedUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Returns the current state of isLocked\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/nav_drawer/nav_drawer.js"],"names":["EuiNavDrawer","props","isLockedState","onIsLockedUpdate","window","innerWidth","collapseDrawer","collapseFlyout","state","isLocked","removeEventListener","functionToCallOnWindowResize","addEventListener","returnOnIsLockedUpdate","setState","isCollapsed","outsideClickDisabled","setTimeout","toolTipsEnabled","expandDrawer","flyoutIsCollapsed","document","getElementById","scrollTop","clearTimeout","timeoutID","isManagingFocus","closeBoth","links","title","content","navFlyoutTitle","navFlyoutContent","e","element","target","undefined","body","tagName","getAttribute","parentElement","children","className","showExpandButton","showToolTips","rest","classes","footerContent","sideNavCollapse","sideNavExpand","sideNavLockAriaLabel","sideNavLockExpanded","sideNavLockCollapsed","color","onClick","sideNavLockClicked","iconType","iconSize","role","collapseButtonClick","flyoutContent","modifiedChildren","React","Children","map","child","type","EuiNavDrawerGroup","item","cloneElement","flyoutMenuButtonClick","expandFlyout","menuClasses","focusOut","manageFocus","handleDrawerMenuClick","Component","propTypes","PropTypes","node","string","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { EuiListGroup, EuiListGroupItem } from '../list_group';\nimport { EuiNavDrawerFlyout } from './nav_drawer_flyout';\nimport { EuiNavDrawerGroup } from './nav_drawer_group';\nimport { EuiOutsideClickDetector } from '../outside_click_detector';\nimport { EuiI18n } from '../i18n';\nimport { EuiFlexItem } from '../flex';\nimport { throttle } from '../color_picker/utils';\n\nexport class EuiNavDrawer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLocked: props.isLocked,\n      isCollapsed: !props.isLocked,\n      flyoutIsCollapsed: true,\n      outsideClickDisabled: true,\n      isManagingFocus: false,\n      toolTipsEnabled: true,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isLocked) {\n      window.addEventListener('resize', this.functionToCallOnWindowResize);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.functionToCallOnWindowResize);\n  }\n\n  returnOnIsLockedUpdate = isLockedState => {\n    if (this.props.onIsLockedUpdate) {\n      this.props.onIsLockedUpdate(isLockedState);\n    }\n  };\n\n  functionToCallOnWindowResize = throttle(() => {\n    if (window.innerWidth < 1200) {\n      this.collapseDrawer();\n      this.collapseFlyout();\n    }\n    // reacts every 50ms to resize changes and always gets the final update\n  }, 50);\n\n  timeoutID;\n\n  sideNavLockClicked = () => {\n    if (this.state.isLocked) {\n      window.removeEventListener('resize', this.functionToCallOnWindowResize);\n    } else {\n      window.addEventListener('resize', this.functionToCallOnWindowResize);\n    }\n\n    this.returnOnIsLockedUpdate(!this.state.isLocked);\n\n    this.setState({\n      isLocked: !this.state.isLocked,\n      isCollapsed: false,\n      outsideClickDisabled: true,\n    });\n  };\n\n  toggleOpen = () => {\n    this.setState({\n      isCollapsed: !this.state.isCollapsed,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        outsideClickDisabled: this.state.isCollapsed ? true : false,\n        toolTipsEnabled: this.state.isCollapsed ? true : false,\n      });\n    }, 150);\n  };\n\n  collapseButtonClick = () => {\n    if (this.state.isCollapsed) {\n      this.expandDrawer();\n    } else {\n      this.collapseDrawer();\n    }\n\n    this.collapseFlyout();\n  };\n\n  expandDrawer = () => {\n    this.setState({\n      isCollapsed: false,\n      outsideClickDisabled: false,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        toolTipsEnabled: false,\n      });\n    }, 150);\n  };\n\n  collapseDrawer = () => {\n    this.setState({\n      isCollapsed: true,\n      outsideClickDisabled: this.state.flyoutIsCollapsed ? true : false,\n      toolTipsEnabled: true,\n      isLocked: false,\n    });\n\n    this.returnOnIsLockedUpdate(false);\n\n    // Scrolls the menu and flyout back to top when the nav drawer collapses\n    setTimeout(() => {\n      document.getElementById('navDrawerMenu').scrollTop = 0;\n    }, 50);\n\n    // In case it was locked before, remove the window resize listener\n    window.removeEventListener('resize', this.functionToCallOnWindowResize);\n  };\n\n  manageFocus = () => {\n    // This prevents the drawer from collapsing when tabbing through children\n    // by clearing the timeout thus cancelling the onBlur event (see focusOut).\n    // This means isManagingFocus remains true as long as a child element\n    // has focus. This is the case since React bubbles up onFocus and onBlur\n    // events from the child elements.\n    clearTimeout(this.timeoutID);\n\n    if (!this.state.isManagingFocus) {\n      this.setState({\n        isManagingFocus: true,\n      });\n    }\n  };\n\n  focusOut = () => {\n    // This collapses the drawer when no children have focus (i.e. tabbed out).\n    // In other words, if focus does not bubble up from a child element, then\n    // the drawer will collapse. See the corresponding block in expandDrawer\n    // (called by onFocus) which cancels this operation via clearTimeout.\n    this.timeoutID = setTimeout(() => {\n      if (this.state.isManagingFocus) {\n        this.setState({\n          isManagingFocus: false,\n        });\n\n        this.closeBoth();\n      }\n    }, 0);\n  };\n\n  expandFlyout = (links, title) => {\n    const content = links;\n\n    if (this.state.navFlyoutTitle === title) {\n      this.collapseFlyout();\n    } else {\n      this.setState({\n        flyoutIsCollapsed: false,\n        navFlyoutTitle: title,\n        navFlyoutContent: content,\n        isCollapsed: this.state.isLocked ? false : true,\n        toolTipsEnabled: false,\n        outsideClickDisabled: false,\n      });\n    }\n  };\n\n  collapseFlyout = () => {\n    this.setState({\n      flyoutIsCollapsed: true,\n      navFlyoutTitle: null,\n      navFlyoutContent: null,\n      toolTipsEnabled: this.state.isLocked ? false : true,\n    });\n  };\n\n  closeBoth = () => {\n    if (!this.state.isLocked) this.collapseDrawer();\n    this.collapseFlyout();\n  };\n\n  handleDrawerMenuClick = e => {\n    // walk up e.target until either:\n    // 1. a[href] - close the menu\n    // 2. document.body - do nothing\n\n    let element = e.target;\n    while (\n      element !== undefined &&\n      element !== document.body &&\n      (element.tagName !== 'A' || element.getAttribute('href') === undefined)\n    ) {\n      element = element.parentElement;\n    }\n\n    if (element !== document.body) {\n      // this is an anchor with an href\n      this.closeBoth();\n    }\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      showExpandButton,\n      showToolTips,\n      isCollapsed,\n      isLocked,\n      onIsLockedUpdate,\n      ...rest\n    } = this.props;\n\n    const classes = classNames(\n      'euiNavDrawer',\n      {\n        'euiNavDrawer-isCollapsed': this.state.isCollapsed,\n        'euiNavDrawer-isExpanded': !this.state.isCollapsed,\n        'euiNavDrawer-isLocked': this.state.isLocked,\n        'euiNavDrawer-flyoutIsCollapsed': this.state.flyoutIsCollapsed,\n        'euiNavDrawer-flyoutIsExpanded': !this.state.flyoutIsCollapsed,\n      },\n      className\n    );\n\n    let footerContent;\n    if (showExpandButton) {\n      footerContent = (\n        <EuiListGroup className=\"euiNavDrawer__expandButton\" flush>\n          <EuiI18n\n            tokens={[\n              'euiNavDrawer.sideNavCollapse',\n              'euiNavDrawer.sideNavExpand',\n              'euiNavDrawer.sideNavLockAriaLabel',\n              'euiNavDrawer.sideNavLockExpanded',\n              'euiNavDrawer.sideNavLockCollapsed',\n            ]}\n            defaults={[\n              'Collapse',\n              'Expand',\n              'Dock navigation',\n              'Navigation is docked',\n              'Navigation is undocked',\n            ]}>\n            {([\n              sideNavCollapse,\n              sideNavExpand,\n              sideNavLockAriaLabel,\n              sideNavLockExpanded,\n              sideNavLockCollapsed,\n            ]) => (\n              <EuiListGroupItem\n                label={this.state.isCollapsed ? sideNavExpand : sideNavCollapse}\n                iconType={this.state.isCollapsed ? 'menuRight' : 'menuLeft'}\n                size=\"s\"\n                showToolTip={this.state.isCollapsed}\n                extraAction={{\n                  className: 'euiNavDrawer__expandButtonLockAction',\n                  color: 'text',\n                  onClick: this.sideNavLockClicked,\n                  iconType: this.state.isLocked ? 'lock' : 'lockOpen',\n                  iconSize: 's',\n                  'aria-label': sideNavLockAriaLabel,\n                  title: this.state.isLocked\n                    ? sideNavLockExpanded\n                    : sideNavLockCollapsed,\n                  'aria-checked': this.state.isLocked ? true : false,\n                  role: 'switch',\n                }}\n                onClick={this.collapseButtonClick}\n                data-test-subj={\n                  this.state.isCollapsed\n                    ? 'navDrawerExpandButton-isCollapsed'\n                    : 'navDrawerExpandButton-isExpanded'\n                }\n              />\n            )}\n          </EuiI18n>\n        </EuiListGroup>\n      );\n    }\n\n    const flyoutContent = (\n      <EuiNavDrawerFlyout\n        id=\"navDrawerFlyout\"\n        title={this.state.navFlyoutTitle}\n        isCollapsed={this.state.flyoutIsCollapsed}\n        listItems={this.state.navFlyoutContent}\n        wrapText\n      />\n    );\n\n    // Add an onClick that expands the flyout sub menu for any list items (links)\n    // that have a flyoutMenu prop (sub links)\n    let modifiedChildren = children;\n\n    // 1. Loop through the EuiNavDrawer children (EuiListGroup, EuiHorizontalRules, etc)\n    modifiedChildren = React.Children.map(this.props.children, child => {\n      // 2. Check if child is an EuiNavDrawerGroup and if it does have a flyout, add the expand function\n      if (child.type === EuiNavDrawerGroup) {\n        const item = React.cloneElement(child, {\n          flyoutMenuButtonClick: this.expandFlyout,\n          showToolTips: this.state.toolTipsEnabled && showToolTips,\n        });\n        return item;\n      } else {\n        return child;\n      }\n    });\n\n    const menuClasses = classNames('euiNavDrawerMenu', {\n      'euiNavDrawerMenu-hasFooter': footerContent,\n    });\n\n    return (\n      <EuiOutsideClickDetector\n        onOutsideClick={() => this.closeBoth()}\n        isDisabled={this.state.outsideClickDisabled}>\n        <div\n          className={classes}\n          onBlur={this.focusOut}\n          onFocus={this.manageFocus}\n          {...rest}>\n          <EuiFlexItem grow={false}>\n            <div\n              id=\"navDrawerMenu\"\n              className={menuClasses}\n              onClick={this.handleDrawerMenuClick}>\n              {/* Put expand button first so it's first in tab order then on toggle starts the tabbing of the items from the top */}\n              {/* TODO: Add a \"skip navigation\" keyboard only button */}\n              {footerContent}\n              {modifiedChildren}\n            </div>\n          </EuiFlexItem>\n\n          {flyoutContent}\n        </div>\n      </EuiOutsideClickDetector>\n    );\n  }\n}\n\nEuiNavDrawer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * Adds fixed toggle button to bottom of menu area\n   */\n  showExpandButton: PropTypes.bool,\n\n  /**\n   * Display tooltips on side nav items\n   */\n  showToolTips: PropTypes.bool,\n\n  /**\n   * Keep drawer locked open by default\n   */\n  isLocked: PropTypes.bool,\n\n  /**\n   * Returns the current state of isLocked\n   */\n  onIsLockedUpdate: PropTypes.func,\n};\n\nEuiNavDrawer.defaultProps = {\n  showExpandButton: true,\n  showToolTips: true,\n};\n"]}]}