{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/modal/overflow_test.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/modal/overflow_test.js","mtime":1565204169514},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OverflowTest = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _components = require(\"../../../../src/components\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar OverflowTest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OverflowTest, _Component);\n\n  function OverflowTest(props) {\n    var _this;\n\n    _classCallCheck(this, OverflowTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OverflowTest).call(this, props));\n    _this.state = {\n      isModalVisible: false\n    };\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showModal = _this.showModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OverflowTest, [{\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        isModalVisible: false\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        isModalVisible: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modal;\n\n      if (this.state.isModalVisible) {\n        modal = _react.default.createElement(_components.EuiOverlayMask, null, _react.default.createElement(_components.EuiModal, {\n          onClose: this.closeModal\n        }, _react.default.createElement(_components.EuiModalHeader, null, _react.default.createElement(_components.EuiModalHeaderTitle, null, \"Overflow test\")), _react.default.createElement(_components.EuiModalBody, null, _react.default.createElement(_components.EuiText, null, _react.default.createElement(\"p\", null, \"KING. Whats he that wishes so? My cousin, Westmorland? No, my fair cousin; If we are mark\\u2019d to die, we are enow To do our country loss; and if to live, The fewer men, the greater share of honour. God\\u2019s will! I pray thee, wish not one man more. By Jove, I am not covetous for gold, Nor care I who doth feed upon my cost; It yearns me not if men my garments wear; Such outward things dwell not in my desires. But if it be a sin to covet honour, I am the most offending soul alive. No, faith, my coz, wish not a man from England. God\\u2019s peace! I would not lose so great an honour As one man more methinks would share from me For the best hope I have. O, do not wish one more! Rather proclaim it, Westmorland, through my host, That he which hath no stomach to this fight, Let him depart; his passport shall be made, And crowns for convoy put into his purse; We would not die in that man\\u2019s company That fears his fellowship to die with us. This day is call\\u2019d the feast of Crispian. He that outlives this day, and comes safe home, Will stand a tip-toe when this day is nam\\u2019d, And rouse him at the name of Crispian. He that shall live this day, and see old age, Will yearly on the vigil feast his neighbours, And say \\u201CTo-morrow is Saint Crispian.\\u201D Then will he strip his sleeve and show his scars, And say \\u201CThese wounds I had on Crispin\\u2019s day.\\u201D Old men forget; yet all shall be forgot, But he\\u2019ll remember, with advantages, What feats he did that day. Then shall our names, Familiar in his mouth as household words\\u2014 Harry the King, Bedford and Exeter, Warwick and Talbot, Salisbury and Gloucester\\u2014 Be in their flowing cups freshly rememb\\u2019red. This story shall the good man teach his son; And Crispin Crispian shall ne\\u2019er go by, From this day to the ending of the world, But we in it shall be remember\\xE8d\\u2014 We few, we happy few, we band of brothers; For he to-day that sheds his blood with me Shall be my brother; be he ne\\u2019er so vile, This day shall gentle his condition; And gentlemen in England now a-bed Shall think themselves accurs\\u2019d they were not here, And hold their manhoods cheap whiles any speaks That fought with us upon Saint Crispin\\u2019s day.\"))), _react.default.createElement(_components.EuiModalFooter, null, _react.default.createElement(_components.EuiButtonEmpty, {\n          onClick: this.closeModal\n        }, \"Cancel\"), _react.default.createElement(_components.EuiButton, {\n          onClick: this.closeModal,\n          fill: true\n        }, \"Save\"))));\n      }\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_components.EuiButton, {\n        onClick: this.showModal\n      }, \"Show Modal\"), modal);\n    }\n  }]);\n\n  return OverflowTest;\n}(_react.Component);\n\nexports.OverflowTest = OverflowTest;\nOverflowTest.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"closeModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"showModal\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"OverflowTest\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/modal/overflow_test.js"],"names":["OverflowTest","props","state","isModalVisible","closeModal","bind","showModal","setState","modal","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;IAYaA,Y;;;;;AACX,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AARiB;AASlB;;;;iCAEY;AACX,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD;;;gCAEW;AACV,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD;;;6BAEQ;AACP,UAAIK,KAAJ;;AAEA,UAAI,KAAKN,KAAL,CAAWC,cAAf,EAA+B;AAC7BK,QAAAA,KAAK,GACH,6BAAC,0BAAD,QACE,6BAAC,oBAAD;AAAU,UAAA,OAAO,EAAE,KAAKJ;AAAxB,WACE,6BAAC,0BAAD,QACE,6BAAC,+BAAD,wBADF,CADF,EAKE,6BAAC,wBAAD,QACE,6BAAC,mBAAD,QACE,8uEADF,CADF,CALF,EAiDE,6BAAC,0BAAD,QACE,6BAAC,0BAAD;AAAgB,UAAA,OAAO,EAAE,KAAKA;AAA9B,oBADF,EAGE,6BAAC,qBAAD;AAAW,UAAA,OAAO,EAAE,KAAKA,UAAzB;AAAqC,UAAA,IAAI;AAAzC,kBAHF,CAjDF,CADF,CADF;AA6DD;;AACD,aACE,0CACE,6BAAC,qBAAD;AAAW,QAAA,OAAO,EAAE,KAAKE;AAAzB,sBADF,EAGGE,KAHH,CADF;AAOD;;;;EA7F+BC,gB","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiModal,\n  EuiModalBody,\n  EuiModalFooter,\n  EuiModalHeader,\n  EuiModalHeaderTitle,\n  EuiOverlayMask,\n  EuiText,\n} from '../../../../src/components';\n\nexport class OverflowTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalVisible: false,\n    };\n\n    this.closeModal = this.closeModal.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  closeModal() {\n    this.setState({ isModalVisible: false });\n  }\n\n  showModal() {\n    this.setState({ isModalVisible: true });\n  }\n\n  render() {\n    let modal;\n\n    if (this.state.isModalVisible) {\n      modal = (\n        <EuiOverlayMask>\n          <EuiModal onClose={this.closeModal}>\n            <EuiModalHeader>\n              <EuiModalHeaderTitle>Overflow test</EuiModalHeaderTitle>\n            </EuiModalHeader>\n\n            <EuiModalBody>\n              <EuiText>\n                <p>\n                  KING. Whats he that wishes so? My cousin, Westmorland? No, my\n                  fair cousin; If we are mark&rsquo;d to die, we are enow To do\n                  our country loss; and if to live, The fewer men, the greater\n                  share of honour. God&rsquo;s will! I pray thee, wish not one\n                  man more. By Jove, I am not covetous for gold, Nor care I who\n                  doth feed upon my cost; It yearns me not if men my garments\n                  wear; Such outward things dwell not in my desires. But if it\n                  be a sin to covet honour, I am the most offending soul alive.\n                  No, faith, my coz, wish not a man from England. God&rsquo;s\n                  peace! I would not lose so great an honour As one man more\n                  methinks would share from me For the best hope I have. O, do\n                  not wish one more! Rather proclaim it, Westmorland, through my\n                  host, That he which hath no stomach to this fight, Let him\n                  depart; his passport shall be made, And crowns for convoy put\n                  into his purse; We would not die in that man&rsquo;s company\n                  That fears his fellowship to die with us. This day is\n                  call&rsquo;d the feast of Crispian. He that outlives this day,\n                  and comes safe home, Will stand a tip-toe when this day is\n                  nam&rsquo;d, And rouse him at the name of Crispian. He that\n                  shall live this day, and see old age, Will yearly on the vigil\n                  feast his neighbours, And say &ldquo;To-morrow is Saint\n                  Crispian.&rdquo; Then will he strip his sleeve and show his\n                  scars, And say &ldquo;These wounds I had on Crispin&rsquo;s\n                  day.&rdquo; Old men forget; yet all shall be forgot, But\n                  he&rsquo;ll remember, with advantages, What feats he did that\n                  day. Then shall our names, Familiar in his mouth as household\n                  words— Harry the King, Bedford and Exeter, Warwick and Talbot,\n                  Salisbury and Gloucester— Be in their flowing cups freshly\n                  rememb&rsquo;red. This story shall the good man teach his son;\n                  And Crispin Crispian shall ne&rsquo;er go by, From this day to\n                  the ending of the world, But we in it shall be rememberèd— We\n                  few, we happy few, we band of brothers; For he to-day that\n                  sheds his blood with me Shall be my brother; be he ne&rsquo;er\n                  so vile, This day shall gentle his condition; And gentlemen in\n                  England now a-bed Shall think themselves accurs&rsquo;d they\n                  were not here, And hold their manhoods cheap whiles any speaks\n                  That fought with us upon Saint Crispin&rsquo;s day.\n                </p>\n              </EuiText>\n            </EuiModalBody>\n\n            <EuiModalFooter>\n              <EuiButtonEmpty onClick={this.closeModal}>Cancel</EuiButtonEmpty>\n\n              <EuiButton onClick={this.closeModal} fill>\n                Save\n              </EuiButton>\n            </EuiModalFooter>\n          </EuiModal>\n        </EuiOverlayMask>\n      );\n    }\n    return (\n      <div>\n        <EuiButton onClick={this.showModal}>Show Modal</EuiButton>\n\n        {modal}\n      </div>\n    );\n  }\n}\n"]}]}