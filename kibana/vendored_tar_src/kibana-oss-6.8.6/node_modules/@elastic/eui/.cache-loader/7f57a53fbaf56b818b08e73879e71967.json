{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/portal/portal_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/portal/portal_example.js","mtime":1565204169529},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PortalExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _portal = require(\"./portal\");\n\nvar _portal_insert = require(\"./portal_insert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar portalSource = require('!!raw-loader!./portal');\n\nvar portalHtml = (0, _services.renderToHtml)(_portal.Portal);\n\nvar portalInsertSource = require('!!raw-loader!./portal_insert');\n\nvar portalInsertHtml = (0, _services.renderToHtml)(_portal_insert.PortalInsert);\nvar PortalExample = {\n  title: 'Portal',\n  sections: [{\n    title: 'Portal',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: portalSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: portalHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiPortal\"), \" allows you to append its contained children onto the document body. It is useful for moving fixed elements like modals, tooltips or toasts when you are worried about a z-index or overflow conflict.\"),\n    components: {\n      EuiPortal: _components2.EuiPortal\n    },\n    demo: _react.default.createElement(_portal.Portal, null)\n  }, {\n    title: 'Inserting Portals',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: portalInsertSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: portalInsertHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"There is an optional \", _react.default.createElement(_components2.EuiCode, null, \"insert\"), \" prop that can specify the portal's location in the DOM. When used, it is important to consider how the location relates to the component lifecycle, as it could be removed from the DOM by another component update.\"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"insert\"), \" is an object with two key-value pairs:\", ' ', _react.default.createElement(_components2.EuiCode, null, \"sibling\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"position\"), \".\", _react.default.createElement(_components2.EuiCode, null, \"sibling\"), \" is the React node or HTMLElement to insert the portal next to, and \", _react.default.createElement(_components2.EuiCode, null, \"position\"), \" specifies the portal's relative position, either\", ' ', _react.default.createElement(_components2.EuiCode, null, \"before\"), \" or\", _react.default.createElement(_components2.EuiCode, null, \"after\"), \".\")),\n    props: {\n      EuiPortal: _components2.EuiPortal\n    },\n    demo: _react.default.createElement(_portal_insert.PortalInsert, null)\n  }]\n};\nexports.PortalExample = PortalExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/portal/portal_example.js"],"names":["portalSource","require","portalHtml","Portal","portalInsertSource","portalInsertHtml","PortalInsert","PortalExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","components","EuiPortal","demo","props"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;;;AAHA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,UAAU,GAAG,4BAAaC,cAAb,CAAnB;;AAGA,IAAMC,kBAAkB,GAAGH,OAAO,CAAC,8BAAD,CAAlC;;AACA,IAAMI,gBAAgB,GAAG,4BAAaC,2BAAb,CAAzB;AAEO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE,QADoB;AAE3BC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,KAAK,EAAE,QADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEd;AAFR,KADM,EAKN;AACEW,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,wCACE,6BAAC,oBAAD,oBADF,2MAbJ;AAoBEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,SAAS,EAATA;AAAF,KApBd;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,cAAD;AArBR,GADQ,EAwBR;AACEX,IAAAA,KAAK,EAAE,mBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,6BAAC,cAAD,CAAO,QAAP,QACE,iEACuB,6BAAC,oBAAD,iBADvB,0NADF,EAOE,wCACE,6BAAC,oBAAD,iBADF,6CACmE,GADnE,EAEE,6BAAC,oBAAD,kBAFF,WAEiC,6BAAC,oBAAD,mBAFjC,OAGE,6BAAC,oBAAD,kBAHF,0EAIiC,6BAAC,oBAAD,mBAJjC,uDAK8C,GAL9C,EAME,6BAAC,oBAAD,iBANF,SAOE,6BAAC,oBAAD,gBAPF,MAPF,CAbJ;AA+BEI,IAAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAATA;AAAF,KA/BT;AAgCEC,IAAAA,IAAI,EAAE,6BAAC,2BAAD;AAhCR,GAxBQ;AAFiB,CAAtB","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiPortal } from '../../../../src/components';\n\nimport { Portal } from './portal';\nconst portalSource = require('!!raw-loader!./portal');\nconst portalHtml = renderToHtml(Portal);\n\nimport { PortalInsert } from './portal_insert';\nconst portalInsertSource = require('!!raw-loader!./portal_insert');\nconst portalInsertHtml = renderToHtml(PortalInsert);\n\nexport const PortalExample = {\n  title: 'Portal',\n  sections: [\n    {\n      title: 'Portal',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: portalSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: portalHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiPortal</EuiCode> allows you to append its contained\n          children onto the document body. It is useful for moving fixed\n          elements like modals, tooltips or toasts when you are worried about a\n          z-index or overflow conflict.\n        </p>\n      ),\n      components: { EuiPortal },\n      demo: <Portal />,\n    },\n    {\n      title: 'Inserting Portals',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: portalInsertSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: portalInsertHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            There is an optional <EuiCode>insert</EuiCode> prop that can specify\n            the portal&apos;s location in the DOM. When used, it is important to\n            consider how the location relates to the component lifecycle, as it\n            could be removed from the DOM by another component update.\n          </p>\n          <p>\n            <EuiCode>insert</EuiCode> is an object with two key-value pairs:{' '}\n            <EuiCode>sibling</EuiCode> and <EuiCode>position</EuiCode>.\n            <EuiCode>sibling</EuiCode> is the React node or HTMLElement to\n            insert the portal next to, and <EuiCode>position</EuiCode> specifies\n            the portal&apos;s relative position, either{' '}\n            <EuiCode>before</EuiCode> or\n            <EuiCode>after</EuiCode>.\n          </p>\n        </React.Fragment>\n      ),\n      props: { EuiPortal },\n      demo: <PortalInsert />,\n    },\n  ],\n};\n"]}]}