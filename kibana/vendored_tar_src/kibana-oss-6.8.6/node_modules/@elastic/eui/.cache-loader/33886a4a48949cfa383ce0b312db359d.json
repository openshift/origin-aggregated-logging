{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/facet/facet_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/facet/facet_example.js","mtime":1565204169469},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FacetExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _facet = _interopRequireDefault(require(\"./facet\"));\n\nvar _facet_layout = _interopRequireDefault(require(\"./facet_layout\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar facetSource = require('!!raw-loader!./facet');\n\nvar facetHtml = (0, _services.renderToHtml)(_facet.default);\nvar facetSnippet = \"<EuiFacetButton\\n  quantity={6}\\n  icon={<EuiIcon type=\\\"dot\\\" color=\\\"secondary\\\" />}\\n  isSelected>\\n  <!-- Facet with EuiIcon content -->\\n</EuiFacetButton>\\n\";\n\nvar facetLayoutSource = require('!!raw-loader!./facet_layout');\n\nvar facetLayoutHtml = (0, _services.renderToHtml)(_facet_layout.default);\nvar FacetExample = {\n  title: 'Facet',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: facetSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: facetHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(\"code\", null, \"EuiFacetButtons\"), \" are to be used when allowing lists with multiple search params to be filtered down by these particular params. They allow for an \", _react.default.createElement(\"code\", null, \"icon\"), \" node and/or \", _react.default.createElement(\"code\", null, \"quantity\"), ' ', \"to be passed. You can also indicate the current selection with\", ' ', _react.default.createElement(\"code\", null, \"isSelected\"), \". Other props include \", _react.default.createElement(\"code\", null, \"isDisabled\"), ' ', \"and \", _react.default.createElement(\"code\", null, \"isLoading\"), \" (which will swap the quantity indicator with a loading icon).\"),\n    props: {\n      EuiFacetButton: _components2.EuiFacetButton\n    },\n    snippet: facetSnippet,\n    demo: _react.default.createElement(_facet.default, null)\n  }, {\n    title: 'Facet layout',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: facetLayoutSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: facetLayoutHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Typically, each facet grouping should display similarly. For example, they should all have icons or be similar icon nodes (like avatars). It is up to you whether each group should be single or multi-selection.\"), _react.default.createElement(\"p\", null, \"Utilize the \", _react.default.createElement(\"code\", null, \"EuiFacetGroup\"), \" wrapper to correctly layout multiple facets. You can supply a \", _react.default.createElement(\"code\", null, \"layout\"), \" of either\", ' ', _react.default.createElement(\"code\", null, \"horizontal\"), \" or \", _react.default.createElement(\"code\", null, \"vertical\"), \" with the default being \", _react.default.createElement(\"code\", null, \"vertical\"), \". Be sure to contain vertical layouts in a skinny component or give it a max-width.\")),\n    props: {\n      EuiFacetGroup: _components2.EuiFacetGroup\n    },\n    demo: _react.default.createElement(_facet_layout.default, null),\n    snippet: \"// Restrict the width of default (vertical) if not restricted by parent\\n<EuiFacetGroup style={{ maxWidth: 200 }}>{facets}</EuiFacetGroup>\\n\\n// Horizontal\\n<EuiFacetGroup layout=\\\"horizontal\\\">{facets}</EuiFacetGroup>\"\n  }]\n};\nexports.FacetExample = FacetExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/facet/facet_example.js"],"names":["facetSource","require","facetHtml","Facet","facetSnippet","facetLayoutSource","facetLayoutHtml","FacetLayout","FacetExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiFacetButton","snippet","demo","EuiFacetGroup"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAWA;;;;AAVA,IAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMC,SAAS,GAAG,4BAAaC,cAAb,CAAlB;AACA,IAAMC,YAAY,sKAAlB;;AASA,IAAMC,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMK,eAAe,GAAG,4BAAaC,qBAAb,CAAxB;AAEO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEf;AAFR,KADM,EAKN;AACEY,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEb;AAFR,KALM,CADV;AAWEe,IAAAA,IAAI,EACF,wCACE,6DADF,wIAGoB,kDAHpB,mBAGkD,sDAHlD,EAGwE,GAHxE,oEAIiE,GAJjE,EAKE,wDALF,4BAK+C,wDAL/C,EAKuE,GALvE,UAMM,uDANN,mEAZJ;AAsBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA;AAAF,KAtBT;AAuBEC,IAAAA,OAAO,EAAEhB,YAvBX;AAwBEiB,IAAAA,IAAI,EAAE,6BAAC,cAAD;AAxBR,GADQ,EA2BR;AACEZ,IAAAA,KAAK,EAAE,cADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,0CACE,4PADF,EAOE,wDACc,2DADd,qEAEoC,oDAFpC,gBAEkE,GAFlE,EAGE,wDAHF,UAG6B,sDAH7B,8BAIQ,sDAJR,wFAPF,CAbJ;AA6BEC,IAAAA,KAAK,EAAE;AAAEI,MAAAA,aAAa,EAAbA;AAAF,KA7BT;AA8BED,IAAAA,IAAI,EAAE,6BAAC,qBAAD,OA9BR;AA+BED,IAAAA,OAAO;AA/BT,GA3BQ;AAFgB,CAArB","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiFacetButton, EuiFacetGroup } from '../../../../src/components';\n\nimport Facet from './facet';\nconst facetSource = require('!!raw-loader!./facet');\nconst facetHtml = renderToHtml(Facet);\nconst facetSnippet = `<EuiFacetButton\n  quantity={6}\n  icon={<EuiIcon type=\"dot\" color=\"secondary\" />}\n  isSelected>\n  <!-- Facet with EuiIcon content -->\n</EuiFacetButton>\n`;\n\nimport FacetLayout from './facet_layout';\nconst facetLayoutSource = require('!!raw-loader!./facet_layout');\nconst facetLayoutHtml = renderToHtml(FacetLayout);\n\nexport const FacetExample = {\n  title: 'Facet',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: facetSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: facetHtml,\n        },\n      ],\n      text: (\n        <p>\n          <code>EuiFacetButtons</code> are to be used when allowing lists with\n          multiple search params to be filtered down by these particular params.\n          They allow for an <code>icon</code> node and/or <code>quantity</code>{' '}\n          to be passed. You can also indicate the current selection with{' '}\n          <code>isSelected</code>. Other props include <code>isDisabled</code>{' '}\n          and <code>isLoading</code> (which will swap the quantity indicator\n          with a loading icon).\n        </p>\n      ),\n      props: { EuiFacetButton },\n      snippet: facetSnippet,\n      demo: <Facet />,\n    },\n    {\n      title: 'Facet layout',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: facetLayoutSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: facetLayoutHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Typically, each facet grouping should display similarly. For\n            example, they should all have icons or be similar icon nodes (like\n            avatars). It is up to you whether each group should be single or\n            multi-selection.\n          </p>\n          <p>\n            Utilize the <code>EuiFacetGroup</code> wrapper to correctly layout\n            multiple facets. You can supply a <code>layout</code> of either{' '}\n            <code>horizontal</code> or <code>vertical</code> with the default\n            being <code>vertical</code>. Be sure to contain vertical layouts in\n            a skinny component or give it a max-width.\n          </p>\n        </div>\n      ),\n      props: { EuiFacetGroup },\n      demo: <FacetLayout />,\n      snippet: `// Restrict the width of default (vertical) if not restricted by parent\n<EuiFacetGroup style={{ maxWidth: 200 }}>{facets}</EuiFacetGroup>\n\n// Horizontal\n<EuiFacetGroup layout=\"horizontal\">{facets}</EuiFacetGroup>`,\n    },\n  ],\n};\n"]}]}