{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/custom_section.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/custom_section.js","mtime":1565204169551},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.section = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"../../../../../src/components\");\n\nvar _components2 = require(\"../../../components\");\n\nvar _services = require(\"../../../services\");\n\nvar _custom = _interopRequireDefault(require(\"./custom\"));\n\nvar _props_info = require(\"./props_info\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar source = require('!!raw-loader!./custom');\n\nvar html = (0, _services.renderToHtml)(_custom.default);\nvar section = {\n  title: 'Build a custom table from individual components',\n  source: [{\n    type: _components2.GuideSectionTypes.JS,\n    code: source\n  }, {\n    type: _components2.GuideSectionTypes.HTML,\n    code: html\n  }],\n  text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"As an alternative to \", _react.default.createElement(_components.EuiCode, null, \"EuiBasicTable\"), \" you can instead construct a table from individual\", ' ', _react.default.createElement(\"strong\", null, \"low level, basic components\"), \" like\", ' ', _react.default.createElement(_components.EuiCode, null, \"EuiTableHeader\"), \"\\xA0and \", _react.default.createElement(_components.EuiCode, null, \"EuiTableRowCell\"), \". Below is one of many ways you might set this up on your own. Important to note are how you need to set individual props like the \", _react.default.createElement(_components.EuiCode, null, \"truncateText\"), \" prop to cells to enforce a single-line behavior and truncate their contents, or set the \", _react.default.createElement(_components.EuiCode, null, \"textOnly\"), \" prop to \", _react.default.createElement(_components.EuiCode, null, \"false\"), \" if you need the contents to be a direct descendent of the cell.\"), _react.default.createElement(\"h3\", null, \"Responsive extras\"), _react.default.createElement(\"p\", null, \"You must supply a \", _react.default.createElement(_components.EuiCode, null, \"mobileOptions.header\"), \" prop equivalent to the column header on each\", ' ', _react.default.createElement(_components.EuiCode, null, \"EuiTableRowCell\"), \" so that the mobile version will use that to populate the per cell headers.\"), _react.default.createElement(\"p\", null, \"Also, custom table implementations \", _react.default.createElement(\"strong\", null, \"will not\"), ' ', \"auto-populate any header level functions like selection and filtering. In order to add mobile support for these functions, you will need to implement the \", _react.default.createElement(_components.EuiCode, null, \"EuiTableHeaderMobile\"), \" component as a wrapper around these and use \", _react.default.createElement(_components.EuiCode, null, \"EuiTableSortMobile\"), \"\\xA0and \", _react.default.createElement(_components.EuiCode, null, \"EuiTableSortMobileItem\"), \" components to supply mobile sorting. See demo below.\")),\n  components: {\n    EuiTable: _components.EuiTable\n  },\n  props: _objectSpread({\n    EuiTable: _components.EuiTable,\n    EuiTableBody: _components.EuiTableBody,\n    EuiTableHeader: _components.EuiTableHeader,\n    EuiTableHeaderCell: _components.EuiTableHeaderCell,\n    EuiTableHeaderCellCheckbox: _components.EuiTableHeaderCellCheckbox,\n    EuiTablePagination: _components.EuiTablePagination,\n    EuiTableRow: _components.EuiTableRow,\n    EuiTableRowCellCheckbox: _components.EuiTableRowCellCheckbox\n  }, _props_info.cellPropsInfo, {\n    EuiTableHeaderMobile: _components.EuiTableHeaderMobile,\n    EuiTableSortMobile: _components.EuiTableSortMobile,\n    EuiTableSortMobileItem: _components.EuiTableSortMobileItem\n  }),\n  demo: _react.default.createElement(_custom.default, null)\n};\nexports.section = section;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/custom_section.js"],"names":["source","require","html","Custom","section","title","type","GuideSectionTypes","JS","code","HTML","text","components","EuiTable","props","EuiTableBody","EuiTableHeader","EuiTableHeaderCell","EuiTableHeaderCellCheckbox","EuiTablePagination","EuiTableRow","EuiTableRowCellCheckbox","cellPropsInfo","EuiTableHeaderMobile","EuiTableSortMobile","EuiTableSortMobileItem","demo"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAcA;;AACA;;AAEA;;AAGA;;;;;;;;AAFA,IAAMA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAMC,IAAI,GAAG,4BAAaC,eAAb,CAAb;AAGO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,iDADc;AAErBL,EAAAA,MAAM,EAAE,CACN;AACEM,IAAAA,IAAI,EAAEC,+BAAkBC,EAD1B;AAEEC,IAAAA,IAAI,EAAET;AAFR,GADM,EAKN;AACEM,IAAAA,IAAI,EAAEC,+BAAkBG,IAD1B;AAEED,IAAAA,IAAI,EAAEP;AAFR,GALM,CAFa;AAYrBS,EAAAA,IAAI,EACF,0CACE,iEACuB,6BAAC,mBAAD,wBADvB,wDAEoC,GAFpC,EAGE,2EAHF,WAGoD,GAHpD,EAIE,6BAAC,mBAAD,yBAJF,cAKY,6BAAC,mBAAD,0BALZ,yIAOgC,6BAAC,mBAAD,uBAPhC,+FASU,6BAAC,mBAAD,mBATV,eAS8C,6BAAC,mBAAD,gBAT9C,qEADF,EAaE,6DAbF,EAcE,8DACoB,6BAAC,mBAAD,+BADpB,mDAE0C,GAF1C,EAGE,6BAAC,mBAAD,0BAHF,gFAdF,EAoBE,+EACqC,wDADrC,EAC+D,GAD/D,gKAIgB,6BAAC,mBAAD,+BAJhB,mDAK+B,6BAAC,mBAAD,6BAL/B,cAMY,6BAAC,mBAAD,iCANZ,0DApBF,CAbmB;AA4CrBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,QAAQ,EAARA;AAAF,GA5CS;AA6CrBC,EAAAA,KAAK;AACHD,IAAAA,QAAQ,EAARA,oBADG;AAEHE,IAAAA,YAAY,EAAZA,wBAFG;AAGHC,IAAAA,cAAc,EAAdA,0BAHG;AAIHC,IAAAA,kBAAkB,EAAlBA,8BAJG;AAKHC,IAAAA,0BAA0B,EAA1BA,sCALG;AAMHC,IAAAA,kBAAkB,EAAlBA,8BANG;AAOHC,IAAAA,WAAW,EAAXA,uBAPG;AAQHC,IAAAA,uBAAuB,EAAvBA;AARG,KASAC,yBATA;AAUHC,IAAAA,oBAAoB,EAApBA,gCAVG;AAWHC,IAAAA,kBAAkB,EAAlBA,8BAXG;AAYHC,IAAAA,sBAAsB,EAAtBA;AAZG,IA7CgB;AA2DrBC,EAAAA,IAAI,EAAE,6BAAC,eAAD;AA3De,CAAhB","sourcesContent":["import React from 'react';\nimport {\n  EuiCode,\n  EuiTable,\n  EuiTableBody,\n  EuiTableHeader,\n  EuiTableHeaderCell,\n  EuiTableHeaderCellCheckbox,\n  EuiTablePagination,\n  EuiTableRow,\n  EuiTableRowCellCheckbox,\n  EuiTableHeaderMobile,\n  EuiTableSortMobile,\n  EuiTableSortMobileItem,\n} from '../../../../../src/components';\nimport { GuideSectionTypes } from '../../../components';\nimport { renderToHtml } from '../../../services';\n\nimport Custom from './custom';\nconst source = require('!!raw-loader!./custom');\nconst html = renderToHtml(Custom);\nimport { cellPropsInfo } from './props_info';\n\nexport const section = {\n  title: 'Build a custom table from individual components',\n  source: [\n    {\n      type: GuideSectionTypes.JS,\n      code: source,\n    },\n    {\n      type: GuideSectionTypes.HTML,\n      code: html,\n    },\n  ],\n  text: (\n    <div>\n      <p>\n        As an alternative to <EuiCode>EuiBasicTable</EuiCode> you can instead\n        construct a table from individual{' '}\n        <strong>low level, basic components</strong> like{' '}\n        <EuiCode>EuiTableHeader</EuiCode>\n        &nbsp;and <EuiCode>EuiTableRowCell</EuiCode>. Below is one of many ways\n        you might set this up on your own. Important to note are how you need to\n        set individual props like the <EuiCode>truncateText</EuiCode> prop to\n        cells to enforce a single-line behavior and truncate their contents, or\n        set the <EuiCode>textOnly</EuiCode> prop to <EuiCode>false</EuiCode> if\n        you need the contents to be a direct descendent of the cell.\n      </p>\n      <h3>Responsive extras</h3>\n      <p>\n        You must supply a <EuiCode>mobileOptions.header</EuiCode> prop\n        equivalent to the column header on each{' '}\n        <EuiCode>EuiTableRowCell</EuiCode> so that the mobile version will use\n        that to populate the per cell headers.\n      </p>\n      <p>\n        Also, custom table implementations <strong>will not</strong>{' '}\n        auto-populate any header level functions like selection and filtering.\n        In order to add mobile support for these functions, you will need to\n        implement the <EuiCode>EuiTableHeaderMobile</EuiCode> component as a\n        wrapper around these and use <EuiCode>EuiTableSortMobile</EuiCode>\n        &nbsp;and <EuiCode>EuiTableSortMobileItem</EuiCode> components to supply\n        mobile sorting. See demo below.\n      </p>\n    </div>\n  ),\n  components: { EuiTable },\n  props: {\n    EuiTable,\n    EuiTableBody,\n    EuiTableHeader,\n    EuiTableHeaderCell,\n    EuiTableHeaderCellCheckbox,\n    EuiTablePagination,\n    EuiTableRow,\n    EuiTableRowCellCheckbox,\n    ...cellPropsInfo,\n    EuiTableHeaderMobile,\n    EuiTableSortMobile,\n    EuiTableSortMobileItem,\n  },\n  demo: <Custom />,\n};\n"]}]}