{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/image/image_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/image/image_example.js","mtime":1565204169505},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _image = _interopRequireDefault(require(\"./image\"));\n\nvar _image_size = _interopRequireDefault(require(\"./image_size\"));\n\nvar _image_zoom = _interopRequireDefault(require(\"./image_zoom\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar imageSource = require('!!raw-loader!./image');\n\nvar imageHtml = (0, _services.renderToHtml)(_image.default);\n\nvar imageSizesSource = require('!!raw-loader!./image_size');\n\nvar imageSizesHtml = (0, _services.renderToHtml)(_image_size.default);\n\nvar imageZoomSource = require('!!raw-loader!./image_zoom');\n\nvar imageZoomHtml = (0, _services.renderToHtml)(_image_zoom.default);\nvar ImageExample = {\n  title: 'Image',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: imageSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: imageHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Use \", _react.default.createElement(_components2.EuiCode, null, \"EuiImage\"), \" when you need to place a static image into a page with an optional caption. It has the following props.\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"size\"), \" accepts\", ' ', _react.default.createElement(_components2.EuiCode, null, \"s / m / l / xl / original / fullWidth\"), \". The latter will set the figure to stretch to 100% of its container.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"allowFullScreen\"), \" when set to true will make the image clickable to a larger version.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"fullScreenIconColor\"), \" allows you to change the color of the icon that floats above the image when it can be clicked to fullscreen. The default value of\", ' ', _react.default.createElement(_components2.EuiCode, null, \"light\"), \" is fine unless your image has a white background, in which case you should change it to\", ' ', _react.default.createElement(_components2.EuiCode, null, \"dark\"), \".\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"hasShadow\"), \" when set to true (default) will apply a slight shadow below the image.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"caption\"), \" will provide a caption to the image.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"alt\"), \" Sepearate from the caption is a title on the alt tag itself. This one is required for accessibility.\"))),\n    props: {\n      EuiImage: _components2.EuiImage\n    },\n    demo: _react.default.createElement(_image.default, null)\n  }, {\n    title: 'Click an image for a full screen version',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: imageZoomSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: imageZoomHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Apply the \", _react.default.createElement(_components2.EuiCode, null, \"allowFullScreen\"), \" prop to make the image clickable and show a full screen version. Note that the second image also passes \", _react.default.createElement(_components2.EuiCode, null, \"fullScreenIconColor=\\\"dark\\\"\"), \" to change icon color to better contrast against the light background of that image.\"),\n    demo: _react.default.createElement(_image_zoom.default, null)\n  }, {\n    title: 'Images can be sized',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: imageSizesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: imageSizesHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Images can be sized by passing the \", _react.default.createElement(_components2.EuiCode, null, \"size\"), \" prop a value of \", _react.default.createElement(_components2.EuiCode, null, \"s / m / l / xl / original / fullWidth\"), \". Note that this size is applied to the width of the image.\"),\n    demo: _react.default.createElement(_image_size.default, null)\n  }]\n};\nexports.ImageExample = ImageExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/image/image_example.js"],"names":["imageSource","require","imageHtml","Image","imageSizesSource","imageSizesHtml","ImageSizes","imageZoomSource","imageZoomHtml","ImageZoom","ImageExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiImage","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAIA;;;;AAPA,IAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMC,SAAS,GAAG,4BAAaC,cAAb,CAAlB;;AAGA,IAAMC,gBAAgB,GAAGH,OAAO,CAAC,2BAAD,CAAhC;;AACA,IAAMI,cAAc,GAAG,4BAAaC,mBAAb,CAAvB;;AAGA,IAAMC,eAAe,GAAGN,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAMO,aAAa,GAAG,4BAAaC,mBAAb,CAAtB;AAEO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEjB;AAFR,KADM,EAKN;AACEc,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEf;AAFR,KALM,CADV;AAWEiB,IAAAA,IAAI,EACF,0CACE,gDACM,6BAAC,oBAAD,mBADN,6GADF,EAME,yCACE,yCACE,6BAAC,oBAAD,eADF,cACkC,GADlC,EAEE,6BAAC,oBAAD,gDAFF,0EADF,EAME,yCACE,6BAAC,oBAAD,0BADF,yEANF,EAUE,yCACE,6BAAC,oBAAD,8BADF,wIAG8C,GAH9C,EAIE,6BAAC,oBAAD,gBAJF,8FAKoD,GALpD,EAME,6BAAC,oBAAD,eANF,MAVF,EAkBE,yCACE,6BAAC,oBAAD,oBADF,4EAlBF,EAsBE,yCACE,6BAAC,oBAAD,kBADF,0CAtBF,EAyBE,yCACE,6BAAC,oBAAD,cADF,0GAzBF,CANF,CAZJ;AAkDEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAARA;AAAF,KAlDT;AAmDEC,IAAAA,IAAI,EAAE,6BAAC,cAAD;AAnDR,GADQ,EAsDR;AACEX,IAAAA,KAAK,EAAE,0CADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,sDACY,6BAAC,oBAAD,0BADZ,+GAGc,6BAAC,oBAAD,uCAHd,yFAbJ;AAqBEG,IAAAA,IAAI,EAAE,6BAAC,mBAAD;AArBR,GAtDQ,EA6ER;AACEX,IAAAA,KAAK,EAAE,qBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEb;AAFR,KADM,EAKN;AACEU,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,+EACqC,6BAAC,oBAAD,eADrC,uBAEW,6BAAC,oBAAD,gDAFX,gEAbJ;AAmBEG,IAAAA,IAAI,EAAE,6BAAC,mBAAD;AAnBR,GA7EQ;AAFgB,CAArB","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiImage } from '../../../../src/components';\n\nimport Image from './image';\nconst imageSource = require('!!raw-loader!./image');\nconst imageHtml = renderToHtml(Image);\n\nimport ImageSizes from './image_size';\nconst imageSizesSource = require('!!raw-loader!./image_size');\nconst imageSizesHtml = renderToHtml(ImageSizes);\n\nimport ImageZoom from './image_zoom';\nconst imageZoomSource = require('!!raw-loader!./image_zoom');\nconst imageZoomHtml = renderToHtml(ImageZoom);\n\nexport const ImageExample = {\n  title: 'Image',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: imageSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: imageHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Use <EuiCode>EuiImage</EuiCode> when you need to place a static\n            image into a page with an optional caption. It has the following\n            props.\n          </p>\n          <ul>\n            <li>\n              <EuiCode>size</EuiCode> accepts{' '}\n              <EuiCode>s / m / l / xl / original / fullWidth</EuiCode>. The\n              latter will set the figure to stretch to 100% of its container.\n            </li>\n            <li>\n              <EuiCode>allowFullScreen</EuiCode> when set to true will make the\n              image clickable to a larger version.\n            </li>\n            <li>\n              <EuiCode>fullScreenIconColor</EuiCode> allows you to change the\n              color of the icon that floats above the image when it can be\n              clicked to fullscreen. The default value of{' '}\n              <EuiCode>light</EuiCode> is fine unless your image has a white\n              background, in which case you should change it to{' '}\n              <EuiCode>dark</EuiCode>.\n            </li>\n            <li>\n              <EuiCode>hasShadow</EuiCode> when set to true (default) will apply\n              a slight shadow below the image.\n            </li>\n            <li>\n              <EuiCode>caption</EuiCode> will provide a caption to the image.\n            </li>\n            <li>\n              <EuiCode>alt</EuiCode> Sepearate from the caption is a title on\n              the alt tag itself. This one is required for accessibility.\n            </li>\n          </ul>\n        </div>\n      ),\n      props: { EuiImage },\n      demo: <Image />,\n    },\n    {\n      title: 'Click an image for a full screen version',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: imageZoomSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: imageZoomHtml,\n        },\n      ],\n      text: (\n        <p>\n          Apply the <EuiCode>allowFullScreen</EuiCode> prop to make the image\n          clickable and show a full screen version. Note that the second image\n          also passes <EuiCode>fullScreenIconColor=&quot;dark&quot;</EuiCode> to\n          change icon color to better contrast against the light background of\n          that image.\n        </p>\n      ),\n      demo: <ImageZoom />,\n    },\n    {\n      title: 'Images can be sized',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: imageSizesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: imageSizesHtml,\n        },\n      ],\n      text: (\n        <p>\n          Images can be sized by passing the <EuiCode>size</EuiCode> prop a\n          value of <EuiCode>s / m / l / xl / original / fullWidth</EuiCode>.\n          Note that this size is applied to the width of the image.\n        </p>\n      ),\n      demo: <ImageSizes />,\n    },\n  ],\n};\n"]}]}