{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/services/color/hex_to_rgb.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/services/color/hex_to_rgb.ts","mtime":1565204170064},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Convert hexadecimal color into an array of RGB integer values\n// Modified from https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nfunction hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r1, g1, b1) {\n    return r1 + r1 + g1 + g1 + b1 + b1;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (result) {\n    var _result = _slicedToArray(result, 4),\n        r = _result[1],\n        g = _result[2],\n        b = _result[3];\n\n    return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)];\n  } // fallback to prevent errors\n\n\n  return [0, 0, 0];\n}",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/services/color/hex_to_rgb.ts"],"names":["hexToRgb","hex","shorthandRegex","replace","m","r1","g1","b1","result","exec","r","g","b","parseInt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIO,SAASA,QAAT,CAAkBC,GAAlB,EAAuC;AAC5C;AACA,MAAMC,cAAc,GAAG,kCAAvB;AACAD,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CACJD,cADI,EAEJ,UAACE,CAAD,EAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;AAAA,WAAmBF,EAAE,GAAGA,EAAL,GAAUC,EAAV,GAAeA,EAAf,GAAoBC,EAApB,GAAyBA,EAA5C;AAAA,GAFI,CAAN;AAKA,MAAMC,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDR,GAAjD,CAAf;;AAEA,MAAIO,MAAJ,EAAY;AAAA,iCACUA,MADV;AAAA,QACDE,CADC;AAAA,QACEC,CADF;AAAA,QACKC,CADL;;AAEV,WAAO,CAACC,QAAQ,CAACH,CAAD,EAAI,EAAJ,CAAT,EAAkBG,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAA1B,EAAmCE,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAA3C,CAAP;AACD,GAb2C,CAe5C;;;AACA,SAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AACD","sourcesContent":["// Convert hexadecimal color into an array of RGB integer values\n// Modified from https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n\nimport { rgbDef } from './color_types';\n\nexport function hexToRgb(hex: string): rgbDef {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(\n    shorthandRegex,\n    (m, r1, g1, b1) => r1 + r1 + g1 + g1 + b1 + b1\n  );\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)!;\n\n  if (result) {\n    const [, r, g, b] = result;\n    return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)];\n  }\n\n  // fallback to prevent errors\n  return [0, 0, 0];\n}\n"]}]}