{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/delay_hide/delay_hide_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/delay_hide/delay_hide_example.js","mtime":1565204169459},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DelayHideExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _delay_hide = _interopRequireDefault(require(\"./delay_hide\"));\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar delayHideSource = require('!!raw-loader!./delay_hide');\n\nvar delayHideHtml = (0, _services.renderToHtml)(_delay_hide.default);\nvar DelayHideExample = {\n  title: 'Delay Hide',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: delayHideSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: delayHideHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDelayHide\"), \" is a component for conditionally toggling the visibility of a child component. It will ensure that the child is visible for at least 1000ms (default). This avoids UI glitches that are common with loading spinners and other elements that are rendered conditionally and potentially for a short amount of time.\"),\n    props: {\n      EuiDelayHide: _components2.EuiDelayHide\n    },\n    demo: _react.default.createElement(_delay_hide.default, null)\n  }]\n};\nexports.DelayHideExample = DelayHideExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/delay_hide/delay_hide_example.js"],"names":["delayHideSource","require","delayHideHtml","DelayHide","DelayHideExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiDelayHide","demo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAMC,aAAa,GAAG,4BAAaC,mBAAb,CAAtB;AAEO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,YADuB;AAE9BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CADV;AAWEW,IAAAA,IAAI,EACF,wCACE,6BAAC,oBAAD,uBADF,yTAZJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAZA;AAAF,KApBT;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,mBAAD;AArBR,GADQ;AAFoB,CAAzB","sourcesContent":["import React from 'react';\nimport DelayHide from './delay_hide';\nimport { GuideSectionTypes } from '../../components';\nimport { EuiCode, EuiDelayHide } from '../../../../src/components';\nimport { renderToHtml } from '../../services';\n\nconst delayHideSource = require('!!raw-loader!./delay_hide');\nconst delayHideHtml = renderToHtml(DelayHide);\n\nexport const DelayHideExample = {\n  title: 'Delay Hide',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: delayHideSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: delayHideHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiDelayHide</EuiCode> is a component for conditionally\n          toggling the visibility of a child component. It will ensure that the\n          child is visible for at least 1000ms (default). This avoids UI\n          glitches that are common with loading spinners and other elements that\n          are rendered conditionally and potentially for a short amount of time.\n        </p>\n      ),\n      props: { EuiDelayHide },\n      demo: <DelayHide />,\n    },\n  ],\n};\n"]}]}