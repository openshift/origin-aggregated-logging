{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/context_menu/context_menu_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/context_menu/context_menu_example.js","mtime":1565204169452},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContextMenuExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _context_menu = _interopRequireDefault(require(\"./context_menu\"));\n\nvar _single_panel = _interopRequireDefault(require(\"./single_panel\"));\n\nvar _content_panel = _interopRequireDefault(require(\"./content_panel\"));\n\nvar _context_menu_with_content = _interopRequireDefault(require(\"./context_menu_with_content\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar contextMenuSource = require('!!raw-loader!./context_menu');\n\nvar contextMenuHtml = (0, _services.renderToHtml)(_context_menu.default);\n\nvar singlePanelSource = require('!!raw-loader!./single_panel');\n\nvar singlePanelHtml = (0, _services.renderToHtml)(_single_panel.default);\n\nvar contentPanelSource = require('!!raw-loader!./content_panel');\n\nvar contentPanelHtml = (0, _services.renderToHtml)(_content_panel.default);\n\nvar contextMenuWithContentSource = require('!!raw-loader!./context_menu_with_content');\n\nvar contextMenuWithContentHtml = (0, _services.renderToHtml)(_context_menu_with_content.default);\nvar ContextMenuExample = {\n  title: 'Context Menu',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: contextMenuSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: contextMenuHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiContextMenu\"), \" is a nested menu system useful for navigating complicated trees. It lives within a\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiPopover\"), \"which itself can be wrapped around any component (like a button in this example).\"),\n    props: {\n      EuiContextMenu: _components2.EuiContextMenu,\n      EuiContextMenuPanel: _components2.EuiContextMenuPanel,\n      EuiContextMenuItem: _components2.EuiContextMenuItem\n    },\n    demo: _react.default.createElement(_context_menu.default, null)\n  }, {\n    title: 'With single panel',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: singlePanelSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: singlePanelHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Context menus can be used for simple, non-nested menus as well. The below pagination example has no nesting and no title.\"),\n    demo: _react.default.createElement(_single_panel.default, null)\n  }, {\n    title: 'Displaying custom elements',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: contentPanelSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: contentPanelHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"If you have custom content to show instead of a list of options, you can pass a React element as a child to\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiContextMenuPanel\"), \".\"),\n    demo: _react.default.createElement(_content_panel.default, null)\n  }, {\n    title: 'Using panels with mixed items & content',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: contextMenuWithContentSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: contextMenuWithContentHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Context menu panels can be passed React elements through the\", _react.default.createElement(_components2.EuiCode, null, \"content\"), \" prop instead of \", _react.default.createElement(_components2.EuiCode, null, \"items\"), \". The panel will display your custom content without modification.\"), _react.default.createElement(\"p\", null, \"If your panel contents have different widths or you need to ensure that a specific context menu panel has a certain width, add\", ' ', _react.default.createElement(\"code\", null, \"width: [number of pixels]\"), \" to the panel tree.\")),\n    demo: _react.default.createElement(_context_menu_with_content.default, null)\n  }]\n};\nexports.ContextMenuExample = ContextMenuExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/context_menu/context_menu_example.js"],"names":["contextMenuSource","require","contextMenuHtml","ContextMenu","singlePanelSource","singlePanelHtml","SinglePanel","contentPanelSource","contentPanelHtml","ContentPanel","contextMenuWithContentSource","contextMenuWithContentHtml","ContextMenuWithContent","ContextMenuExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiContextMenu","EuiContextMenuPanel","EuiContextMenuItem","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAOA;;AAIA;;AAIA;;AAIA;;;;AAXA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMC,eAAe,GAAG,4BAAaC,qBAAb,CAAxB;;AAGA,IAAMC,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMI,eAAe,GAAG,4BAAaC,qBAAb,CAAxB;;AAGA,IAAMC,kBAAkB,GAAGN,OAAO,CAAC,8BAAD,CAAlC;;AACA,IAAMO,gBAAgB,GAAG,4BAAaC,sBAAb,CAAzB;;AAGA,IAAMC,4BAA4B,GAAGT,OAAO,CAAC,0CAAD,CAA5C;;AACA,IAAMU,0BAA0B,GAAG,4BAAaC,kCAAb,CAAnC;AAEO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,KAAK,EAAE,cADyB;AAEhCC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEpB;AAFR,KADM,EAKN;AACEiB,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAElB;AAFR,KALM,CADV;AAWEoB,IAAAA,IAAI,EACF,wCACE,6BAAC,oBAAD,yBADF,yFAEkD,GAFlD,EAGE,6BAAC,oBAAD,qBAHF,sFAZJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAdA,2BAAF;AAAkBC,MAAAA,mBAAmB,EAAnBA,gCAAlB;AAAuCC,MAAAA,kBAAkB,EAAlBA;AAAvC,KApBT;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AArBR,GADQ,EAwBR;AACEb,IAAAA,KAAK,EAAE,mBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEhB;AAFR,KADM,EAKN;AACEa,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEf;AAFR,KALM,CAFV;AAYEiB,IAAAA,IAAI,EACF,oKAbJ;AAkBEK,IAAAA,IAAI,EAAE,6BAAC,qBAAD;AAlBR,GAxBQ,EA4CR;AACEb,IAAAA,KAAK,EAAE,4BADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEb;AAFR,KADM,EAKN;AACEU,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAEZ;AAFR,KALM,CAFV;AAYEc,IAAAA,IAAI,EACF,uJAEyC,GAFzC,EAGE,6BAAC,oBAAD,8BAHF,MAbJ;AAmBEK,IAAAA,IAAI,EAAE,6BAAC,sBAAD;AAnBR,GA5CQ,EAiER;AACEb,IAAAA,KAAK,EAAE,yCADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEV;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,0CACE,wGAEE,6BAAC,oBAAD,kBAFF,uBAE6C,6BAAC,oBAAD,gBAF7C,uEADF,EAME,0KAE8D,GAF9D,EAGE,uEAHF,wBANF,CAbJ;AA0BEK,IAAAA,IAAI,EAAE,6BAAC,kCAAD;AA1BR,GAjEQ;AAFsB,CAA3B","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiContextMenu,\n  EuiContextMenuPanel,\n  EuiContextMenuItem,\n} from '../../../../src/components';\n\nimport ContextMenu from './context_menu';\nconst contextMenuSource = require('!!raw-loader!./context_menu');\nconst contextMenuHtml = renderToHtml(ContextMenu);\n\nimport SinglePanel from './single_panel';\nconst singlePanelSource = require('!!raw-loader!./single_panel');\nconst singlePanelHtml = renderToHtml(SinglePanel);\n\nimport ContentPanel from './content_panel';\nconst contentPanelSource = require('!!raw-loader!./content_panel');\nconst contentPanelHtml = renderToHtml(ContentPanel);\n\nimport ContextMenuWithContent from './context_menu_with_content';\nconst contextMenuWithContentSource = require('!!raw-loader!./context_menu_with_content');\nconst contextMenuWithContentHtml = renderToHtml(ContextMenuWithContent);\n\nexport const ContextMenuExample = {\n  title: 'Context Menu',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: contextMenuSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: contextMenuHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiContextMenu</EuiCode> is a nested menu system useful for\n          navigating complicated trees. It lives within a{' '}\n          <EuiCode>EuiPopover</EuiCode>\n          which itself can be wrapped around any component (like a button in\n          this example).\n        </p>\n      ),\n      props: { EuiContextMenu, EuiContextMenuPanel, EuiContextMenuItem },\n      demo: <ContextMenu />,\n    },\n    {\n      title: 'With single panel',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: singlePanelSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: singlePanelHtml,\n        },\n      ],\n      text: (\n        <p>\n          Context menus can be used for simple, non-nested menus as well. The\n          below pagination example has no nesting and no title.\n        </p>\n      ),\n      demo: <SinglePanel />,\n    },\n    {\n      title: 'Displaying custom elements',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: contentPanelSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: contentPanelHtml,\n        },\n      ],\n      text: (\n        <p>\n          If you have custom content to show instead of a list of options, you\n          can pass a React element as a child to{' '}\n          <EuiCode>EuiContextMenuPanel</EuiCode>.\n        </p>\n      ),\n      demo: <ContentPanel />,\n    },\n    {\n      title: 'Using panels with mixed items & content',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: contextMenuWithContentSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: contextMenuWithContentHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Context menu panels can be passed React elements through the\n            <EuiCode>content</EuiCode> prop instead of <EuiCode>items</EuiCode>.\n            The panel will display your custom content without modification.\n          </p>\n          <p>\n            If your panel contents have different widths or you need to ensure\n            that a specific context menu panel has a certain width, add{' '}\n            <code>width: [number of pixels]</code> to the panel tree.\n          </p>\n        </div>\n      ),\n      demo: <ContextMenuWithContent />,\n    },\n  ],\n};\n"]}]}