{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/super_select/super_select.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/super_select/super_select.js","mtime":1565204169747},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiSuperSelect = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _accessibility = require(\"../../accessibility\");\n\nvar _super_select_control = require(\"./super_select_control\");\n\nvar _popover = require(\"../../popover\");\n\nvar _context_menu = require(\"../../context_menu\");\n\nvar _services = require(\"../../../services\");\n\nvar _i18n = require(\"../../i18n\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SHIFT_BACK = 'back';\nvar SHIFT_FORWARD = 'forward';\n\nvar EuiSuperSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiSuperSelect, _Component);\n\n  function EuiSuperSelect(props) {\n    var _this;\n\n    _classCallCheck(this, EuiSuperSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiSuperSelect).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setItemNode\", function (node, index) {\n      _this.itemNodes[index] = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPopoverRef\", function (ref) {\n      _this.popoverRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openPopover\", function () {\n      _this.setState({\n        isPopoverOpen: true\n      });\n\n      var focusSelected = function focusSelected() {\n        var indexOfSelected = _this.props.options.reduce(function (indexOfSelected, option, index) {\n          if (indexOfSelected != null) return indexOfSelected;\n          if (option == null) return null;\n          return option.value === _this.props.valueOfSelected ? index : null;\n        }, null);\n\n        requestAnimationFrame(function () {\n          if (!_this._isMounted) {\n            return;\n          }\n\n          _this.setState({\n            menuWidth: _this.popoverRef.getBoundingClientRect().width - 2 // account for border not inner shadow\n\n          });\n\n          if (_this.props.valueOfSelected != null) {\n            if (indexOfSelected != null) {\n              _this.focusItemAt(indexOfSelected);\n            } else {\n              focusSelected();\n            }\n          }\n        });\n      };\n\n      requestAnimationFrame(focusSelected);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closePopover\", function () {\n      _this.setState({\n        isPopoverOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"itemClicked\", function (value) {\n      _this.setState({\n        isPopoverOpen: false\n      });\n\n      _this.props.onChange(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSelectKeyDown\", function (e) {\n      if (e.keyCode === _services.keyCodes.UP || e.keyCode === _services.keyCodes.DOWN) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        _this.openPopover();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onItemKeyDown\", function (e) {\n      switch (e.keyCode) {\n        case _services.keyCodes.ESCAPE:\n          // close the popover and prevent ancestors from handling\n          e.preventDefault();\n          e.stopPropagation();\n\n          _this.closePopover();\n\n          break;\n\n        case _services.keyCodes.TAB:\n          // no-op\n          e.preventDefault();\n          e.stopPropagation();\n          break;\n\n        case _services.keyCodes.UP:\n          e.preventDefault();\n          e.stopPropagation();\n\n          _this.shiftFocus(SHIFT_BACK);\n\n          break;\n\n        case _services.keyCodes.DOWN:\n          e.preventDefault();\n          e.stopPropagation();\n\n          _this.shiftFocus(SHIFT_FORWARD);\n\n          break;\n      }\n    });\n\n    _this.itemNodes = [];\n    _this.state = {\n      isPopoverOpen: props.isOpen || false,\n      menuWidth: null\n    };\n    return _this;\n  }\n\n  _createClass(EuiSuperSelect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"focusItemAt\",\n    value: function focusItemAt(index) {\n      var targetElement = this.itemNodes[index];\n\n      if (targetElement != null) {\n        targetElement.focus();\n      }\n    }\n  }, {\n    key: \"shiftFocus\",\n    value: function shiftFocus(direction) {\n      var currentIndex = this.itemNodes.indexOf(document.activeElement);\n      var targetElementIndex;\n\n      if (currentIndex === -1) {\n        // somehow the select options has lost focus\n        targetElementIndex = 0;\n      } else {\n        if (direction === SHIFT_BACK) {\n          targetElementIndex = currentIndex === 0 ? this.itemNodes.length - 1 : currentIndex - 1;\n        } else {\n          targetElementIndex = currentIndex === this.itemNodes.length - 1 ? 0 : currentIndex + 1;\n        }\n      }\n\n      this.focusItemAt(targetElementIndex);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          options = _this$props.options,\n          valueOfSelected = _this$props.valueOfSelected,\n          onChange = _this$props.onChange,\n          isOpen = _this$props.isOpen,\n          isInvalid = _this$props.isInvalid,\n          hasDividers = _this$props.hasDividers,\n          itemClassName = _this$props.itemClassName,\n          itemLayoutAlign = _this$props.itemLayoutAlign,\n          fullWidth = _this$props.fullWidth,\n          popoverClassName = _this$props.popoverClassName,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"options\", \"valueOfSelected\", \"onChange\", \"isOpen\", \"isInvalid\", \"hasDividers\", \"itemClassName\", \"itemLayoutAlign\", \"fullWidth\", \"popoverClassName\"]);\n\n      var popoverClasses = (0, _classnames.default)('euiSuperSelect', {\n        'euiSuperSelect--fullWidth': fullWidth\n      }, popoverClassName);\n      var popoverPanelClasses = (0, _classnames.default)('euiSuperSelect__popoverPanel', _defineProperty({}, \"\".concat(popoverClassName, \"__popoverPanel\"), !!popoverClassName));\n      var buttonClasses = (0, _classnames.default)({\n        'euiSuperSelect--isOpen__button': this.state.isPopoverOpen\n      }, className);\n      var itemClasses = (0, _classnames.default)('euiSuperSelect__item', {\n        'euiSuperSelect__item--hasDividers': hasDividers\n      }, itemClassName);\n\n      var button = _react.default.createElement(_super_select_control.EuiSuperSelectControl, _extends({\n        options: options,\n        value: valueOfSelected,\n        onClick: this.state.isPopoverOpen ? this.closePopover : this.openPopover,\n        onKeyDown: this.onSelectKeyDown,\n        className: buttonClasses,\n        fullWidth: fullWidth,\n        isInvalid: isInvalid\n      }, rest));\n\n      var items = options.map(function (option, index) {\n        var value = option.value,\n            dropdownDisplay = option.dropdownDisplay,\n            inputDisplay = option.inputDisplay,\n            optionRest = _objectWithoutProperties(option, [\"value\", \"dropdownDisplay\", \"inputDisplay\"]);\n\n        return _react.default.createElement(_context_menu.EuiContextMenuItem, _extends({\n          key: index,\n          className: itemClasses,\n          icon: valueOfSelected === value ? 'check' : 'empty',\n          onClick: function onClick() {\n            return _this2.itemClicked(value);\n          },\n          onKeyDown: _this2.onItemKeyDown,\n          layoutAlign: itemLayoutAlign,\n          buttonRef: function buttonRef(node) {\n            return _this2.setItemNode(node, index);\n          },\n          style: {\n            width: _this2.state.menuWidth\n          },\n          role: \"option\",\n          id: value,\n          \"aria-selected\": valueOfSelected === value\n        }, optionRest), dropdownDisplay || inputDisplay);\n      });\n      return _react.default.createElement(_popover.EuiPopover, {\n        className: popoverClasses,\n        display: \"block\",\n        panelClassName: popoverPanelClasses,\n        button: button,\n        isOpen: isOpen || this.state.isPopoverOpen,\n        closePopover: this.closePopover,\n        panelPaddingSize: \"none\",\n        anchorPosition: \"downCenter\",\n        ownFocus: false,\n        popoverRef: this.setPopoverRef,\n        hasArrow: false\n      }, _react.default.createElement(_accessibility.EuiScreenReaderOnly, null, _react.default.createElement(\"p\", {\n        role: \"alert\"\n      }, _react.default.createElement(_i18n.EuiI18n, {\n        token: \"euiSuperSelect.screenReaderAnnouncement\",\n        default: \"You are in a form selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close.\",\n        values: {\n          optionsCount: options.length\n        }\n      }))), _react.default.createElement(\"div\", {\n        role: \"listbox\",\n        \"aria-activedescendant\": valueOfSelected,\n        tabIndex: \"0\"\n      }, items));\n    }\n  }]);\n\n  return EuiSuperSelect;\n}(_react.Component);\n\nexports.EuiSuperSelect = EuiSuperSelect;\nEuiSuperSelect.propTypes = {\n  /**\n   * Classes (and `...rest`) will be applied to the control\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Classes for the context menu item\n   */\n  itemClassName: _propTypes.default.string,\n\n  /**\n   * You must pass an `onChange` function to handle the update of the value\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Pass an array of options that must at least include:\n   * `value`: storing unique value of item,\n   * `inputDisplay`: what shows inside the form input when selected\n   * `dropdownDisplay` (optional): what shows for the item in the dropdown\n   */\n  options: _propTypes.default.arrayOf(_propTypes.default.shape({\n    value: _propTypes.default.string.isRequired,\n    inputDisplay: _propTypes.default.node,\n    dropdownDisplay: _propTypes.default.node\n  })).isRequired,\n  valueOfSelected: _propTypes.default.string,\n\n  /**\n   * Change to `true` if you want horizontal lines between options.\n   * This is best used when options are multi-line.\n   */\n  hasDividers: _propTypes.default.bool,\n\n  /**\n   * Change `EuiContextMenuItem` layout position of icon\n   */\n  itemLayoutAlign: _propTypes.default.string,\n\n  /**\n   * Make it wide\n   */\n  fullWidth: _propTypes.default.bool,\n\n  /**\n   * Provides invalid styling\n   */\n  isInvalid: _propTypes.default.bool,\n\n  /**\n   * Provides loading indictor\n   */\n  isLoading: _propTypes.default.bool,\n\n  /**\n   * Make it short\n   */\n  compressed: _propTypes.default.bool,\n\n  /**\n   * Applied to the outermost wrapper (popover)\n   */\n  popoverClassName: _propTypes.default.string\n};\nEuiSuperSelect.defaultProps = {\n  hasDividers: false,\n  fullWidth: false,\n  compressed: false,\n  isInvalid: false\n};\nEuiSuperSelect.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"setItemNode\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }, {\n      \"name\": \"index\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setPopoverRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"ref\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"openPopover\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closePopover\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"itemClicked\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onSelectKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onItemKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"focusItemAt\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"index\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"shiftFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"direction\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiSuperSelect\",\n  \"props\": {\n    \"hasDividers\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Change to `true` if you want horizontal lines between options.\\nThis is best used when options are multi-line.\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Make it wide\"\n    },\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Make it short\"\n    },\n    \"isInvalid\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Provides invalid styling\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Classes (and `...rest`) will be applied to the control\"\n    },\n    \"itemClassName\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Classes for the context menu item\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"You must pass an `onChange` function to handle the update of the value\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"value\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"inputDisplay\": {\n              \"name\": \"node\",\n              \"required\": false\n            },\n            \"dropdownDisplay\": {\n              \"name\": \"node\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"Pass an array of options that must at least include:\\n`value`: storing unique value of item,\\n`inputDisplay`: what shows inside the form input when selected\\n`dropdownDisplay` (optional): what shows for the item in the dropdown\"\n    },\n    \"valueOfSelected\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"itemLayoutAlign\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Change `EuiContextMenuItem` layout position of icon\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Provides loading indictor\"\n    },\n    \"popoverClassName\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Applied to the outermost wrapper (popover)\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/super_select/super_select.js"],"names":["SHIFT_BACK","SHIFT_FORWARD","EuiSuperSelect","props","node","index","itemNodes","ref","popoverRef","setState","isPopoverOpen","focusSelected","indexOfSelected","options","reduce","option","value","valueOfSelected","requestAnimationFrame","_isMounted","menuWidth","getBoundingClientRect","width","focusItemAt","onChange","e","keyCode","keyCodes","UP","DOWN","preventDefault","stopPropagation","openPopover","ESCAPE","closePopover","TAB","shiftFocus","state","isOpen","targetElement","focus","direction","currentIndex","indexOf","document","activeElement","targetElementIndex","length","className","isInvalid","hasDividers","itemClassName","itemLayoutAlign","fullWidth","popoverClassName","rest","popoverClasses","popoverPanelClasses","buttonClasses","itemClasses","button","onSelectKeyDown","items","map","dropdownDisplay","inputDisplay","optionRest","itemClicked","onItemKeyDown","setItemNode","setPopoverRef","optionsCount","Component","propTypes","PropTypes","string","func","arrayOf","shape","isRequired","bool","isLoading","compressed","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { EuiSuperSelectControl } from './super_select_control';\nimport { EuiPopover } from '../../popover';\nimport { EuiContextMenuItem } from '../../context_menu';\nimport { keyCodes } from '../../../services';\nimport { EuiI18n } from '../../i18n';\n\nconst SHIFT_BACK = 'back';\nconst SHIFT_FORWARD = 'forward';\n\nexport class EuiSuperSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.itemNodes = [];\n    this.state = {\n      isPopoverOpen: props.isOpen || false,\n      menuWidth: null,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  setItemNode = (node, index) => {\n    this.itemNodes[index] = node;\n  };\n\n  setPopoverRef = ref => {\n    this.popoverRef = ref;\n  };\n\n  openPopover = () => {\n    this.setState({\n      isPopoverOpen: true,\n    });\n\n    const focusSelected = () => {\n      const indexOfSelected = this.props.options.reduce(\n        (indexOfSelected, option, index) => {\n          if (indexOfSelected != null) return indexOfSelected;\n          if (option == null) return null;\n          return option.value === this.props.valueOfSelected ? index : null;\n        },\n        null\n      );\n\n      requestAnimationFrame(() => {\n        if (!this._isMounted) {\n          return;\n        }\n        this.setState({\n          menuWidth: this.popoverRef.getBoundingClientRect().width - 2, // account for border not inner shadow\n        });\n\n        if (this.props.valueOfSelected != null) {\n          if (indexOfSelected != null) {\n            this.focusItemAt(indexOfSelected);\n          } else {\n            focusSelected();\n          }\n        }\n      });\n    };\n\n    requestAnimationFrame(focusSelected);\n  };\n\n  closePopover = () => {\n    this.setState({\n      isPopoverOpen: false,\n    });\n  };\n\n  itemClicked = value => {\n    this.setState({\n      isPopoverOpen: false,\n    });\n    this.props.onChange(value);\n  };\n\n  onSelectKeyDown = e => {\n    if (e.keyCode === keyCodes.UP || e.keyCode === keyCodes.DOWN) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.openPopover();\n    }\n  };\n\n  onItemKeyDown = e => {\n    switch (e.keyCode) {\n      case keyCodes.ESCAPE:\n        // close the popover and prevent ancestors from handling\n        e.preventDefault();\n        e.stopPropagation();\n        this.closePopover();\n        break;\n\n      case keyCodes.TAB:\n        // no-op\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n\n      case keyCodes.UP:\n        e.preventDefault();\n        e.stopPropagation();\n        this.shiftFocus(SHIFT_BACK);\n        break;\n\n      case keyCodes.DOWN:\n        e.preventDefault();\n        e.stopPropagation();\n        this.shiftFocus(SHIFT_FORWARD);\n        break;\n    }\n  };\n\n  focusItemAt(index) {\n    const targetElement = this.itemNodes[index];\n    if (targetElement != null) {\n      targetElement.focus();\n    }\n  }\n\n  shiftFocus(direction) {\n    const currentIndex = this.itemNodes.indexOf(document.activeElement);\n    let targetElementIndex;\n\n    if (currentIndex === -1) {\n      // somehow the select options has lost focus\n      targetElementIndex = 0;\n    } else {\n      if (direction === SHIFT_BACK) {\n        targetElementIndex =\n          currentIndex === 0 ? this.itemNodes.length - 1 : currentIndex - 1;\n      } else {\n        targetElementIndex =\n          currentIndex === this.itemNodes.length - 1 ? 0 : currentIndex + 1;\n      }\n    }\n\n    this.focusItemAt(targetElementIndex);\n  }\n\n  render() {\n    const {\n      className,\n      options,\n      valueOfSelected,\n      onChange,\n      isOpen,\n      isInvalid,\n      hasDividers,\n      itemClassName,\n      itemLayoutAlign,\n      fullWidth,\n      popoverClassName,\n      ...rest\n    } = this.props;\n\n    const popoverClasses = classNames(\n      'euiSuperSelect',\n      {\n        'euiSuperSelect--fullWidth': fullWidth,\n      },\n      popoverClassName\n    );\n\n    const popoverPanelClasses = classNames('euiSuperSelect__popoverPanel', {\n      [`${popoverClassName}__popoverPanel`]: !!popoverClassName,\n    });\n\n    const buttonClasses = classNames(\n      {\n        'euiSuperSelect--isOpen__button': this.state.isPopoverOpen,\n      },\n      className\n    );\n\n    const itemClasses = classNames(\n      'euiSuperSelect__item',\n      {\n        'euiSuperSelect__item--hasDividers': hasDividers,\n      },\n      itemClassName\n    );\n\n    const button = (\n      <EuiSuperSelectControl\n        options={options}\n        value={valueOfSelected}\n        onClick={\n          this.state.isPopoverOpen ? this.closePopover : this.openPopover\n        }\n        onKeyDown={this.onSelectKeyDown}\n        className={buttonClasses}\n        fullWidth={fullWidth}\n        isInvalid={isInvalid}\n        {...rest}\n      />\n    );\n\n    const items = options.map((option, index) => {\n      const { value, dropdownDisplay, inputDisplay, ...optionRest } = option;\n\n      return (\n        <EuiContextMenuItem\n          key={index}\n          className={itemClasses}\n          icon={valueOfSelected === value ? 'check' : 'empty'}\n          onClick={() => this.itemClicked(value)}\n          onKeyDown={this.onItemKeyDown}\n          layoutAlign={itemLayoutAlign}\n          buttonRef={node => this.setItemNode(node, index)}\n          style={{ width: this.state.menuWidth }}\n          role=\"option\"\n          id={value}\n          aria-selected={valueOfSelected === value}\n          {...optionRest}>\n          {dropdownDisplay || inputDisplay}\n        </EuiContextMenuItem>\n      );\n    });\n\n    return (\n      <EuiPopover\n        className={popoverClasses}\n        display=\"block\"\n        panelClassName={popoverPanelClasses}\n        button={button}\n        isOpen={isOpen || this.state.isPopoverOpen}\n        closePopover={this.closePopover}\n        panelPaddingSize=\"none\"\n        anchorPosition=\"downCenter\"\n        ownFocus={false}\n        popoverRef={this.setPopoverRef}\n        hasArrow={false}>\n        <EuiScreenReaderOnly>\n          <p role=\"alert\">\n            <EuiI18n\n              token=\"euiSuperSelect.screenReaderAnnouncement\"\n              default=\"You are in a form selector of {optionsCount} items and must select a single option.\n              Use the up and down keys to navigate or escape to close.\"\n              values={{ optionsCount: options.length }}\n            />\n          </p>\n        </EuiScreenReaderOnly>\n        <div\n          role=\"listbox\"\n          aria-activedescendant={valueOfSelected}\n          tabIndex=\"0\">\n          {items}\n        </div>\n      </EuiPopover>\n    );\n  }\n}\n\nEuiSuperSelect.propTypes = {\n  /**\n   * Classes (and `...rest`) will be applied to the control\n   */\n  className: PropTypes.string,\n  /**\n   * Classes for the context menu item\n   */\n  itemClassName: PropTypes.string,\n  /**\n   * You must pass an `onChange` function to handle the update of the value\n   */\n  onChange: PropTypes.func,\n  /**\n   * Pass an array of options that must at least include:\n   * `value`: storing unique value of item,\n   * `inputDisplay`: what shows inside the form input when selected\n   * `dropdownDisplay` (optional): what shows for the item in the dropdown\n   */\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      inputDisplay: PropTypes.node,\n      dropdownDisplay: PropTypes.node,\n    })\n  ).isRequired,\n  valueOfSelected: PropTypes.string,\n  /**\n   * Change to `true` if you want horizontal lines between options.\n   * This is best used when options are multi-line.\n   */\n  hasDividers: PropTypes.bool,\n  /**\n   * Change `EuiContextMenuItem` layout position of icon\n   */\n  itemLayoutAlign: PropTypes.string,\n  /**\n   * Make it wide\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Provides invalid styling\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Provides loading indictor\n   */\n  isLoading: PropTypes.bool,\n  /**\n   * Make it short\n   */\n  compressed: PropTypes.bool,\n  /**\n   * Applied to the outermost wrapper (popover)\n   */\n  popoverClassName: PropTypes.string,\n};\n\nEuiSuperSelect.defaultProps = {\n  hasDividers: false,\n  fullWidth: false,\n  compressed: false,\n  isInvalid: false,\n};\n"]}]}