{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/props_info.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/props_info.js","mtime":1565204169552},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cellPropsInfo = void 0;\nvar cellPropsInfo = {\n  EuiTableRowCell: {\n    __docgenInfo: {\n      props: {\n        sharedProps: {\n          description: 'These props can be passed at the top level or within #mobileOptions',\n          type: {\n            name: '#sharedProps'\n          }\n        },\n        colSpan: {\n          description: 'Number of columns to span',\n          required: false,\n          type: {\n            name: 'number'\n          }\n        },\n        hasActions: {\n          description: 'Indicates if the column is dedicated to icon-only actions (currently affects mobile only)',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        isExpander: {\n          description: 'Indicates if the column is dedicated as the expandable row toggle',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        mobileOptions: {\n          description: 'Object of mobile specific options for displaying differently at small screens',\n          required: false,\n          type: {\n            name: '#mobileOptions'\n          }\n        },\n        header: {\n          description: 'DEPRECATED: use `mobileOptions.header`',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        isMobileHeader: {\n          description: 'DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = false`',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        hideForMobile: {\n          description: 'DEPRECATED: use `mobileOptions.show = false`',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        isMobileFullWidth: {\n          description: 'DEPRECATED: use `mobileOptions.fullWidth`',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        }\n      }\n    }\n  },\n  sharedProps: {\n    __docgenInfo: {\n      _euiObjectType: 'type',\n      props: {\n        align: {\n          description: 'Horizontal alignment of the text in the cell',\n          required: false,\n          type: {\n            name: 'left | right | center'\n          },\n          defaultValue: {\n            value: 'left'\n          }\n        },\n        truncateText: {\n          description: \"Don't allow line breaks within cells\",\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        textOnly: {\n          description: 'Setting `textOnly` to `false` will break words unnecessarily on FF and IE. ' + 'To combat this problem on FF, wrap contents with the css utility `.eui-textBreakWord`.',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        showOnHover: {\n          description: '_Should only be used for action cells_',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        }\n      }\n    }\n  },\n  mobileOptions: {\n    __docgenInfo: {\n      _euiObjectType: 'type',\n      props: {\n        show: {\n          description: 'If false, will not render the cell at all for mobile',\n          required: false,\n          type: {\n            name: 'bool'\n          },\n          defaultValue: {\n            value: 'true'\n          }\n        },\n        only: {\n          description: 'Only show for mobile? If true, will not render the column at all for desktop',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        render: {\n          description: 'Custom render/children if different from desktop',\n          required: false,\n          type: {\n            name: 'node'\n          }\n        },\n        header: {\n          description: \"The column's header for use in mobile view (automatically passed down when using `EuiBasicTable`). \" + 'Or pass `false` to not show a header at all.',\n          required: false,\n          type: {\n            name: 'node | bool'\n          }\n        },\n        enlarge: {\n          description: 'Increase text size compared to rest of cells',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        fullWidth: {\n          description: 'Allocates 100% of the width of the container in mobile view (typically cells are contained to 50%)',\n          required: false,\n          type: {\n            name: 'bool'\n          }\n        },\n        sharedProps: {\n          description: 'These props will only work if a mobile specific `render` function is also passed',\n          type: {\n            name: '#sharedProps'\n          }\n        }\n      }\n    }\n  }\n};\nexports.cellPropsInfo = cellPropsInfo;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/custom/props_info.js"],"names":["cellPropsInfo","EuiTableRowCell","__docgenInfo","props","sharedProps","description","type","name","colSpan","required","hasActions","isExpander","mobileOptions","header","isMobileHeader","hideForMobile","isMobileFullWidth","_euiObjectType","align","defaultValue","value","truncateText","textOnly","showOnHover","show","only","render","enlarge","fullWidth"],"mappings":"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","sourcesContent":["export const cellPropsInfo = {\n  EuiTableRowCell: {\n    __docgenInfo: {\n      props: {\n        sharedProps: {\n          description:\n            'These props can be passed at the top level or within #mobileOptions',\n          type: { name: '#sharedProps' },\n        },\n        colSpan: {\n          description: 'Number of columns to span',\n          required: false,\n          type: { name: 'number' },\n        },\n        hasActions: {\n          description:\n            'Indicates if the column is dedicated to icon-only actions (currently affects mobile only)',\n          required: false,\n          type: { name: 'bool' },\n        },\n        isExpander: {\n          description:\n            'Indicates if the column is dedicated as the expandable row toggle',\n          required: false,\n          type: { name: 'bool' },\n        },\n        mobileOptions: {\n          description:\n            'Object of mobile specific options for displaying differently at small screens',\n          required: false,\n          type: { name: '#mobileOptions' },\n        },\n        header: {\n          description: 'DEPRECATED: use `mobileOptions.header`',\n          required: false,\n          type: { name: 'bool' },\n        },\n        isMobileHeader: {\n          description:\n            'DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = false`',\n          required: false,\n          type: { name: 'bool' },\n        },\n        hideForMobile: {\n          description: 'DEPRECATED: use `mobileOptions.show = false`',\n          required: false,\n          type: { name: 'bool' },\n        },\n        isMobileFullWidth: {\n          description: 'DEPRECATED: use `mobileOptions.fullWidth`',\n          required: false,\n          type: { name: 'bool' },\n        },\n      },\n    },\n  },\n\n  sharedProps: {\n    __docgenInfo: {\n      _euiObjectType: 'type',\n      props: {\n        align: {\n          description: 'Horizontal alignment of the text in the cell',\n          required: false,\n          type: { name: 'left | right | center' },\n          defaultValue: { value: 'left' },\n        },\n        truncateText: {\n          description: \"Don't allow line breaks within cells\",\n          required: false,\n          type: { name: 'bool' },\n        },\n        textOnly: {\n          description:\n            'Setting `textOnly` to `false` will break words unnecessarily on FF and IE. ' +\n            'To combat this problem on FF, wrap contents with the css utility `.eui-textBreakWord`.',\n          required: false,\n          type: { name: 'bool' },\n        },\n        showOnHover: {\n          description: '_Should only be used for action cells_',\n          required: false,\n          type: { name: 'bool' },\n        },\n      },\n    },\n  },\n\n  mobileOptions: {\n    __docgenInfo: {\n      _euiObjectType: 'type',\n      props: {\n        show: {\n          description: 'If false, will not render the cell at all for mobile',\n          required: false,\n          type: { name: 'bool' },\n          defaultValue: { value: 'true' },\n        },\n        only: {\n          description:\n            'Only show for mobile? If true, will not render the column at all for desktop',\n          required: false,\n          type: { name: 'bool' },\n        },\n        render: {\n          description: 'Custom render/children if different from desktop',\n          required: false,\n          type: { name: 'node' },\n        },\n        header: {\n          description:\n            \"The column's header for use in mobile view (automatically passed down when using `EuiBasicTable`). \" +\n            'Or pass `false` to not show a header at all.',\n          required: false,\n          type: { name: 'node | bool' },\n        },\n        enlarge: {\n          description: 'Increase text size compared to rest of cells',\n          required: false,\n          type: { name: 'bool' },\n        },\n        fullWidth: {\n          description:\n            'Allocates 100% of the width of the container in mobile view (typically cells are contained to 50%)',\n          required: false,\n          type: { name: 'bool' },\n        },\n        sharedProps: {\n          description:\n            'These props will only work if a mobile specific `render` function is also passed',\n          type: { name: '#sharedProps' },\n        },\n      },\n    },\n  },\n};\n"]}]}