{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/selectable/selectable_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/selectable/selectable_example.js","mtime":1565204169538},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectableExample = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRouter = require(\"react-router\");\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _selectable = _interopRequireDefault(require(\"./selectable\"));\n\nvar _selectable_popover = _interopRequireDefault(require(\"./selectable_popover\"));\n\nvar _selectable_search = _interopRequireDefault(require(\"./selectable_search\"));\n\nvar _selectable_single = _interopRequireDefault(require(\"./selectable_single\"));\n\nvar _selectable_exclusion = _interopRequireDefault(require(\"./selectable_exclusion\"));\n\nvar _selectable_messages = _interopRequireDefault(require(\"./selectable_messages\"));\n\nvar _selectable_custom_render = _interopRequireDefault(require(\"./selectable_custom_render\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar selectableSource = require('!!raw-loader!./selectable');\n\nvar selectableHtml = (0, _services.renderToHtml)(_selectable.default);\n\nvar selectablePopoverSource = require('!!raw-loader!./selectable_popover');\n\nvar selectablePopoverHtml = (0, _services.renderToHtml)(_selectable_popover.default);\n\nvar selectableSearchSource = require('!!raw-loader!./selectable_search');\n\nvar selectableSearchHtml = (0, _services.renderToHtml)(_selectable_search.default);\n\nvar selectableSingleSource = require('!!raw-loader!./selectable_single');\n\nvar selectableSingleHtml = (0, _services.renderToHtml)(_selectable_single.default);\n\nvar selectableExclusionSource = require('!!raw-loader!./selectable_exclusion');\n\nvar selectableExclusionHtml = (0, _services.renderToHtml)(_selectable_exclusion.default);\n\nvar selectableMessagesSource = require('!!raw-loader!./selectable_messages');\n\nvar selectableMessagesHtml = (0, _services.renderToHtml)(_selectable_messages.default);\n\nvar selectableCustomRenderSource = require('!!raw-loader!./selectable_custom_render');\n\nvar selectableCustomRenderHtml = (0, _services.renderToHtml)(_selectable_custom_render.default);\nvar SelectableExample = {\n  title: 'Selectable',\n  beta: true,\n  intro: _react.default.createElement(_components2.EuiText, null, _react.default.createElement(\"p\", null, \"EuiSelectable aims to make the pattern of a selectable list (with or without search) consistent across implementations. It is the same concept used in \", _react.default.createElement(_reactRouter.Link, {\n    to: \"/forms/combo-box\"\n  }, \"EuiComboBox\"), \" and\", ' ', _react.default.createElement(_reactRouter.Link, {\n    to: \"/forms/filter-group\"\n  }, \"EuiFilterGroup\"), \".\", ' ', _react.default.createElement(\"strong\", null, \"This is not intended for\", ' ', _react.default.createElement(_reactRouter.Link, {\n    to: \"/display/list-group\"\n  }, \"primary navigation\")), ' ', \"but can be used to simplify the construction of popover navigational menus; i.e. the spaces menu in the\", ' ', _react.default.createElement(_reactRouter.Link, {\n    to: \"/layout/header\"\n  }, \"header\"), \".\"), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"s\"\n  })),\n  sections: [{\n    title: 'The basics',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"At its simplest, EuiSelectable requires an array of\", ' ', _react.default.createElement(_components2.EuiCode, null, \"options\"), \" and an \", _react.default.createElement(_components2.EuiCode, null, \"onChange\"), ' ', \"handler which passes back the altered\", ' ', _react.default.createElement(_components2.EuiCode, null, \"selectedOptions\"), \" array.\"), _react.default.createElement(\"h4\", null, \"The \", _react.default.createElement(_components2.EuiCode, null, \"Option\"), \" props\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"label: string\"), \" \", _react.default.createElement(\"strong\", null, \"required\"), \" Must be unique across items (todo: fix this)\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"checked?: 'on' | 'off'\"), ' ', \"Leave off to indicate not selected, 'on' to indicate inclusion and 'off' to indicate exclusion\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"disabled?: boolean\")), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"isGroupLabel?: boolean\"), \" Set to true to indicate object is just a grouping label, not a selectable item\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"prepend?: React.ReactNode\"), \" Node to add between the selection icon and the label\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"append?: React.ReactNode\"), \" Node to add to the far right of the item\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"ref?: () => void\")))),\n    props: {\n      EuiSelectable: _components2.EuiSelectable,\n      EuiSelectableList: _components2.EuiSelectableList\n    },\n    demo: _react.default.createElement(_selectable.default, null),\n    snippet: \"<EuiSelectable\\n  options={[{ label: '' }, { label: '' }]}\\n  onChange={() => this.onChange(options)}\\n  listProps={{ bordered: true }}>\\n  {list => list}\\n</EuiSelectable>\"\n  }, {\n    title: 'Searchable',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableSearchSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableSearchHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"To add a search component to the list, simply add the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"searchable\"), \" prop. You can optionally pass in a\", ' ', _react.default.createElement(_components2.EuiCode, null, \"searchProps\"), \" object which will get passed down to the actual EuiFieldSearch used.\"), _react.default.createElement(\"p\", null, _react.default.createElement(\"strong\", null, \"The search will only perform a string match against the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"option.label\"), \".\"))),\n    props: {\n      EuiSelectable: _components2.EuiSelectable\n    },\n    demo: _react.default.createElement(_selectable_search.default, null),\n    snippet: \"<EuiSelectable\\n  searchable\\n  searchProps={{\\n    'data-test-subj': dataTestSubj,\\n  }}\\n  options={[]}\\n  onChange={() => this.onChange(options)}>\\n  {(list, search) => (\\n    <Fragment>\\n      {search}\\n      {list}\\n    </Fragment>\\n  )}\\n</EuiSelectable>\"\n  }, {\n    title: 'Single Selection',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableSingleSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableSingleHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"Selection can be restricted to a single option at a time with the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"singleSelection\"), \" prop. Passing\", ' ', _react.default.createElement(_components2.EuiCode, null, \"true\"), \" allows for 0 or 1 option to be selected, while\", _react.default.createElement(_components2.EuiCode, null, \"`always`\"), \" requires 1 option to be selected at all times. The default value is \", _react.default.createElement(_components2.EuiCode, null, \"false\"), \".\")),\n    props: {\n      EuiSelectable: _components2.EuiSelectable\n    },\n    demo: _react.default.createElement(_selectable_single.default, null),\n    snippet: \"\\n      <EuiSelectable\\n        options={options}\\n        onChange={this.onChange}\\n        singleSelection={true}\\n        listProps={{ bordered: true }}>\\n        {list => list}\\n      </EuiSelectable>\\n    \"\n  }, {\n    title: 'Sizing and containers',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectablePopoverSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectablePopoverHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"The component's children, \", _react.default.createElement(_components2.EuiCode, null, \"list, search\"), \", are returned via the \", _react.default.createElement(_components2.EuiCode, null, \"children\"), \" function, which means you can wrap the indivial elements in anything you want.\"), _react.default.createElement(\"h3\", null, \"Width and height\"), _react.default.createElement(\"p\", null, \"The width has been made to always be 100% of its container, including stretching the search input. By default, the height is capped at showing up to 7.5 items. It shows half of the last one to help indicate that there are more options to scroll to. To stretch the box to fill its container, pass 'full' to the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"height\"), \" prop.\"), _react.default.createElement(\"h3\", null, \"Flexbox\"), _react.default.createElement(\"p\", null, \"Be aware that \", _react.default.createElement(_components2.EuiCode, null, \"display: flex\"), \" with column layout is applied to the wrapping container. This is so that you can opt in to allow the height of the list stretch to fill its container. See the flyout example.\")),\n    props: {\n      EuiSelectable: _components2.EuiSelectable\n    },\n    demo: _react.default.createElement(_selectable_popover.default, null)\n  }, {\n    title: 'Options can be excluded',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableExclusionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableExclusionHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"Currently, adding \", _react.default.createElement(_components2.EuiCode, null, \"allowExclusions\"), \" simply allows cycling through the checked options (on \", '-> off ->', \" undefined). Should this be allowed by holding down a modifier key instead?\")),\n    props: {\n      EuiSelectable: _components2.EuiSelectable\n    },\n    demo: _react.default.createElement(_selectable_exclusion.default, null),\n    snippet: \"<EuiSelectable\\n  allowExclusions\\n  options={[]}\\n  onChange={() => this.onChange(options)}>\\n  {list => list}\\n</EuiSelectable>\"\n  }, {\n    title: 'Messages and loading',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableMessagesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableMessagesHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"The component comes with some pre-composed messages for empty and loading states. To pass in your own message you can use the EuiSelectableMessage component and replace the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"list\"), \" child with your message.\")),\n    props: {\n      EuiSelectableMessage: _components2.EuiSelectableMessage\n    },\n    demo: _react.default.createElement(_selectable_messages.default, null),\n    snippet: '<EuiSelectableMessage>You have no spice</EuiSelectableMessage>'\n  }, {\n    title: 'Rendering the options',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: selectableCustomRenderSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: selectableCustomRenderHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"There are two object properties you can add to enhance the content of you options, \", _react.default.createElement(_components2.EuiCode, null, \"option.prepend\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"option.append\"), \". These will add nodes before and after the option label respectively. They will not be included in the searchable content as this only matches against the label property.\"), _react.default.createElement(\"h3\", null, \"Selection icons\"), _react.default.createElement(\"p\", null, \"You can choose not to display the check and cross icons indicating selection by passing \", _react.default.createElement(_components2.EuiCode, null, \"showIcons=false\"), \". This is useful for instances that navigate elsewhere on selection or hide their selected options from the list.\"), _react.default.createElement(\"h3\", null, \"Group labels\"), _react.default.createElement(\"p\", null, \"An option is allowed to be passed that is just a header for the options that follow it. It takes no mouse handlers and renders similar to a title. Add one of these by setting the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"option.isGroupLabel\"), \" to true.\", ' '), _react.default.createElement(\"h3\", null, \"Custom content\"), _react.default.createElement(\"p\", null, \"While it is best to stick to the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"option.label, option.append, option.prepend\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"showIcons\"), \" props, you can pass a custom\", ' ', _react.default.createElement(_components2.EuiCode, null, \"renderOption\"), \" function which will pass back the single \", _react.default.createElement(_components2.EuiCode, null, \"option\"), \" object and the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"searchValue\"), \" to use for highlighting.\"), _react.default.createElement(\"p\", null, \"In order for the list to know how to scroll to the selected or highlighted option, it must also know the height of the rows. It applies this pixel height directly to options. If your custom content is taller than the default of \", _react.default.createElement(_components2.EuiCode, null, \"32px\"), \" tall, you will need to recalculate this height and apply it via\", ' ', _react.default.createElement(_components2.EuiCode, null, \"listProps.rowHeight\"), \".\"), _react.default.createElement(\"p\", null, _react.default.createElement(\"strong\", null, \"Every row must be the same height.\"))),\n    demo: _react.default.createElement(_selectable_custom_render.default, null),\n    snippet: \"<EuiSelectable\\n  searchable\\n  options={[]}\\n  onChange={() => this.onChange(options)}\\n  height={240}\\n  renderOption={this.renderCountryOption}\\n  listProps={{\\n    rowHeight: 50,\\n    showIcons: false,\\n  }}\\n>\\n  {(list, search) => (\\n    <Fragment>\\n      {search}\\n      {list}\\n    </Fragment>\\n  )}\\n</EuiSelectable>\"\n  }]\n};\nexports.SelectableExample = SelectableExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/selectable/selectable_example.js"],"names":["selectableSource","require","selectableHtml","Selectable","selectablePopoverSource","selectablePopoverHtml","SelectablePopover","selectableSearchSource","selectableSearchHtml","SelectableSearch","selectableSingleSource","selectableSingleHtml","SelectableSingle","selectableExclusionSource","selectableExclusionHtml","SelectableExclusion","selectableMessagesSource","selectableMessagesHtml","SelectableMessages","selectableCustomRenderSource","selectableCustomRenderHtml","SelectableCustomRender","SelectableExample","title","beta","intro","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiSelectable","EuiSelectableList","demo","snippet","EuiSelectableMessage"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiSelectable,\n  EuiSelectableList,\n  EuiSelectableMessage,\n  EuiText,\n  EuiSpacer,\n} from '../../../../src/components';\n\nimport Selectable from './selectable';\nconst selectableSource = require('!!raw-loader!./selectable');\nconst selectableHtml = renderToHtml(Selectable);\n\nimport SelectablePopover from './selectable_popover';\nconst selectablePopoverSource = require('!!raw-loader!./selectable_popover');\nconst selectablePopoverHtml = renderToHtml(SelectablePopover);\n\nimport SelectableSearch from './selectable_search';\nconst selectableSearchSource = require('!!raw-loader!./selectable_search');\nconst selectableSearchHtml = renderToHtml(SelectableSearch);\n\nimport SelectableSingle from './selectable_single';\nconst selectableSingleSource = require('!!raw-loader!./selectable_single');\nconst selectableSingleHtml = renderToHtml(SelectableSingle);\n\nimport SelectableExclusion from './selectable_exclusion';\nconst selectableExclusionSource = require('!!raw-loader!./selectable_exclusion');\nconst selectableExclusionHtml = renderToHtml(SelectableExclusion);\n\nimport SelectableMessages from './selectable_messages';\nconst selectableMessagesSource = require('!!raw-loader!./selectable_messages');\nconst selectableMessagesHtml = renderToHtml(SelectableMessages);\n\nimport SelectableCustomRender from './selectable_custom_render';\nconst selectableCustomRenderSource = require('!!raw-loader!./selectable_custom_render');\nconst selectableCustomRenderHtml = renderToHtml(SelectableCustomRender);\n\nexport const SelectableExample = {\n  title: 'Selectable',\n  beta: true,\n  intro: (\n    <EuiText>\n      <p>\n        EuiSelectable aims to make the pattern of a selectable list (with or\n        without search) consistent across implementations. It is the same\n        concept used in <Link to=\"/forms/combo-box\">EuiComboBox</Link> and{' '}\n        <Link to=\"/forms/filter-group\">EuiFilterGroup</Link>.{' '}\n        <strong>\n          This is not intended for{' '}\n          <Link to=\"/display/list-group\">primary navigation</Link>\n        </strong>{' '}\n        but can be used to simplify the construction of popover navigational\n        menus; i.e. the spaces menu in the{' '}\n        <Link to=\"/layout/header\">header</Link>.\n      </p>\n\n      <EuiSpacer size=\"s\" />\n    </EuiText>\n  ),\n  sections: [\n    {\n      title: 'The basics',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            At its simplest, EuiSelectable requires an array of{' '}\n            <EuiCode>options</EuiCode> and an <EuiCode>onChange</EuiCode>{' '}\n            handler which passes back the altered{' '}\n            <EuiCode>selectedOptions</EuiCode> array.\n          </p>\n          <h4>\n            The <EuiCode>Option</EuiCode> props\n          </h4>\n          <ul>\n            <li>\n              <EuiCode>label: string</EuiCode> <strong>required</strong> Must be\n              unique across items (todo: fix this)\n            </li>\n            <li>\n              <EuiCode>checked?: &apos;on&apos; | &apos;off&apos;</EuiCode>{' '}\n              Leave off to indicate not selected, &apos;on&apos; to indicate\n              inclusion and &apos;off&apos; to indicate exclusion\n            </li>\n            <li>\n              <EuiCode>disabled?: boolean</EuiCode>\n            </li>\n            <li>\n              <EuiCode>isGroupLabel?: boolean</EuiCode> Set to true to indicate\n              object is just a grouping label, not a selectable item\n            </li>\n            <li>\n              <EuiCode>prepend?: React.ReactNode</EuiCode> Node to add between\n              the selection icon and the label\n            </li>\n            <li>\n              <EuiCode>append?: React.ReactNode</EuiCode> Node to add to the far\n              right of the item\n            </li>\n            <li>\n              <EuiCode>ref?: () =&gt; void</EuiCode>\n            </li>\n          </ul>\n        </Fragment>\n      ),\n      props: { EuiSelectable, EuiSelectableList },\n      demo: <Selectable />,\n      snippet: `<EuiSelectable\n  options={[{ label: '' }, { label: '' }]}\n  onChange={() => this.onChange(options)}\n  listProps={{ bordered: true }}>\n  {list => list}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Searchable',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSearchSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableSearchHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            To add a search component to the list, simply add the{' '}\n            <EuiCode>searchable</EuiCode> prop. You can optionally pass in a{' '}\n            <EuiCode>searchProps</EuiCode> object which will get passed down to\n            the actual EuiFieldSearch used.\n          </p>\n          <p>\n            <strong>\n              The search will only perform a string match against the{' '}\n              <EuiCode>option.label</EuiCode>.\n            </strong>\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectableSearch />,\n      snippet: `<EuiSelectable\n  searchable\n  searchProps={{\n    'data-test-subj': dataTestSubj,\n  }}\n  options={[]}\n  onChange={() => this.onChange(options)}>\n  {(list, search) => (\n    <Fragment>\n      {search}\n      {list}\n    </Fragment>\n  )}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Single Selection',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSingleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableSingleHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Selection can be restricted to a single option at a time with the{' '}\n            <EuiCode>singleSelection</EuiCode> prop. Passing{' '}\n            <EuiCode>true</EuiCode> allows for 0 or 1 option to be selected,\n            while\n            <EuiCode>`always`</EuiCode> requires 1 option to be selected at all\n            times. The default value is <EuiCode>false</EuiCode>.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectableSingle />,\n      snippet: `\n      <EuiSelectable\n        options={options}\n        onChange={this.onChange}\n        singleSelection={true}\n        listProps={{ bordered: true }}>\n        {list => list}\n      </EuiSelectable>\n    `,\n    },\n    {\n      title: 'Sizing and containers',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectablePopoverSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectablePopoverHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            The component&apos;s children, <EuiCode>list, search</EuiCode>, are\n            returned via the <EuiCode>children</EuiCode> function, which means\n            you can wrap the indivial elements in anything you want.\n          </p>\n          <h3>Width and height</h3>\n          <p>\n            The width has been made to always be 100% of its container,\n            including stretching the search input. By default, the height is\n            capped at showing up to 7.5 items. It shows half of the last one to\n            help indicate that there are more options to scroll to. To stretch\n            the box to fill its container, pass &apos;full&apos; to the{' '}\n            <EuiCode>height</EuiCode> prop.\n          </p>\n          <h3>Flexbox</h3>\n          <p>\n            Be aware that <EuiCode>display: flex</EuiCode> with column layout is\n            applied to the wrapping container. This is so that you can opt in to\n            allow the height of the list stretch to fill its container. See the\n            flyout example.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectablePopover />,\n    },\n    {\n      title: 'Options can be excluded',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableExclusionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableExclusionHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Currently, adding <EuiCode>allowExclusions</EuiCode> simply allows\n            cycling through the checked options (on {'-> off ->'} undefined).\n            Should this be allowed by holding down a modifier key instead?\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectableExclusion />,\n      snippet: `<EuiSelectable\n  allowExclusions\n  options={[]}\n  onChange={() => this.onChange(options)}>\n  {list => list}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Messages and loading',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableMessagesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableMessagesHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            The component comes with some pre-composed messages for empty and\n            loading states. To pass in your own message you can use the\n            EuiSelectableMessage component and replace the{' '}\n            <EuiCode>list</EuiCode> child with your message.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectableMessage },\n      demo: <SelectableMessages />,\n      snippet: '<EuiSelectableMessage>You have no spice</EuiSelectableMessage>',\n    },\n    {\n      title: 'Rendering the options',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableCustomRenderSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableCustomRenderHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            There are two object properties you can add to enhance the content\n            of you options, <EuiCode>option.prepend</EuiCode> and{' '}\n            <EuiCode>option.append</EuiCode>. These will add nodes before and\n            after the option label respectively. They will not be included in\n            the searchable content as this only matches against the label\n            property.\n          </p>\n          <h3>Selection icons</h3>\n          <p>\n            You can choose not to display the check and cross icons indicating\n            selection by passing <EuiCode>showIcons=false</EuiCode>. This is\n            useful for instances that navigate elsewhere on selection or hide\n            their selected options from the list.\n          </p>\n          <h3>Group labels</h3>\n          <p>\n            An option is allowed to be passed that is just a header for the\n            options that follow it. It takes no mouse handlers and renders\n            similar to a title. Add one of these by setting the{' '}\n            <EuiCode>option.isGroupLabel</EuiCode> to true.{' '}\n          </p>\n          <h3>Custom content</h3>\n          <p>\n            While it is best to stick to the{' '}\n            <EuiCode>option.label, option.append, option.prepend</EuiCode> and{' '}\n            <EuiCode>showIcons</EuiCode> props, you can pass a custom{' '}\n            <EuiCode>renderOption</EuiCode> function which will pass back the\n            single <EuiCode>option</EuiCode> object and the{' '}\n            <EuiCode>searchValue</EuiCode> to use for highlighting.\n          </p>\n          <p>\n            In order for the list to know how to scroll to the selected or\n            highlighted option, it must also know the height of the rows. It\n            applies this pixel height directly to options. If your custom\n            content is taller than the default of <EuiCode>32px</EuiCode> tall,\n            you will need to recalculate this height and apply it via{' '}\n            <EuiCode>listProps.rowHeight</EuiCode>.\n          </p>\n          <p>\n            <strong>Every row must be the same height.</strong>\n          </p>\n        </Fragment>\n      ),\n      demo: <SelectableCustomRender />,\n      snippet: `<EuiSelectable\n  searchable\n  options={[]}\n  onChange={() => this.onChange(options)}\n  height={240}\n  renderOption={this.renderCountryOption}\n  listProps={{\n    rowHeight: 50,\n    showIcons: false,\n  }}\n>\n  {(list, search) => (\n    <Fragment>\n      {search}\n      {list}\n    </Fragment>\n  )}\n</EuiSelectable>`,\n    },\n  ],\n};\n"]}]}