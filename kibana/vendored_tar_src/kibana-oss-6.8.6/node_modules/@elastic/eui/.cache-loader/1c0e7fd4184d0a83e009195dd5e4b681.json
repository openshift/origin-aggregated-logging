{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/popover/popover_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/popover/popover_example.js","mtime":1565204169525},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopoverExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _popover = _interopRequireDefault(require(\"./popover\"));\n\nvar _trap_focus = _interopRequireDefault(require(\"./trap_focus\"));\n\nvar _popover_anchor_position = _interopRequireDefault(require(\"./popover_anchor_position\"));\n\nvar _popover_panel_class_name = _interopRequireDefault(require(\"./popover_panel_class_name\"));\n\nvar _popover_with_title = _interopRequireDefault(require(\"./popover_with_title\"));\n\nvar _popover_with_title_padding = _interopRequireDefault(require(\"./popover_with_title_padding\"));\n\nvar _popover_htmlelement_anchor = _interopRequireDefault(require(\"./popover_htmlelement_anchor\"));\n\nvar _popover_container = _interopRequireDefault(require(\"./popover_container\"));\n\nvar _popover_fixed = _interopRequireDefault(require(\"./popover_fixed\"));\n\nvar _popover_block = _interopRequireDefault(require(\"./popover_block\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar popoverSource = require('!!raw-loader!./popover');\n\nvar popoverHtml = (0, _services.renderToHtml)(_popover.default);\n\nvar trapFocusSource = require('!!raw-loader!./trap_focus');\n\nvar trapFocusHtml = (0, _services.renderToHtml)(_trap_focus.default);\n\nvar popoverAnchorPositionSource = require('!!raw-loader!./popover_anchor_position');\n\nvar popoverAnchorPositionHtml = (0, _services.renderToHtml)(_popover_anchor_position.default);\n\nvar popoverPanelClassNameSource = require('!!raw-loader!./popover_panel_class_name');\n\nvar popoverPanelClassNameHtml = (0, _services.renderToHtml)(_popover_panel_class_name.default);\n\nvar popoverWithTitleSource = require('!!raw-loader!./popover_with_title');\n\nvar popoverWithTitleHtml = (0, _services.renderToHtml)(_popover_with_title.default);\n\nvar popoverWithTitlePaddingSource = require('!!raw-loader!./popover_with_title_padding');\n\nvar popoverWithTitlePaddingHtml = (0, _services.renderToHtml)(_popover_with_title_padding.default);\n\nvar popoverHTMLElementAnchorSource = require('!!raw-loader!./popover_htmlelement_anchor');\n\nvar popoverHTMLElementAnchorHtml = (0, _services.renderToHtml)(_popover_htmlelement_anchor.default);\n\nvar popoverContainerSource = require('!!raw-loader!./popover_container');\n\nvar popoverContainerHtml = (0, _services.renderToHtml)(_popover_container.default);\n\nvar popoverFixedSource = require('!!raw-loader!./popover_fixed');\n\nvar popoverFixedHtml = (0, _services.renderToHtml)(_popover_fixed.default);\n\nvar popoverBlockSource = require('!!raw-loader!./popover_block');\n\nvar popoverBlockHtml = (0, _services.renderToHtml)(_popover_block.default);\nvar popOverSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}>\\n  <!-- Popover content -->\\n</EuiPopover>\";\nvar trapFocusSnippet = \"<EuiPopover\\n  button={button}\\n  ownFocus\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}>\\n  <!-- Popover content -->\\n</EuiPopover>\";\nvar popoverAnchorSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  anchorPosition=\\\"downLeft\\\">\\n  <!-- Popover content -->\\n</EuiPopover>\";\nvar popoverWithTitleSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}>\\n  <EuiPopoverTitle><!-- Popover title --></EuiPopoverTitle>\\n  <div><!-- Popover body --></div>\\n  <EuiPopoverFooter><!-- Popover footer --></EuiPopoverFooter>\\n</EuiPopover>\";\nvar popoverPanelClassNameSnippet = \"<EuiPopover\\n  ownFocus\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  panelClassName=\\\"yourClassNameHere\\\"\\n  panelPaddingSize=\\\"none\\\">\\n  <!-- Popover with custom class name and custom padding -->\\n</EuiPopover>\";\nvar popoverWithTitlePaddingSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  panelPaddingSize=\\\"s\\\">\\n  <EuiPopoverTitle><!-- Popover title --></EuiPopoverTitle>\\n  <!-- Content for popover with small padding -->\\n</EuiPopover>\";\nvar popoverContainerSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  container={this.panel}>\\n  <!-- Popover content -->\\n</EuiPopover>\";\nvar popoverFixedSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  repositionOnScroll={true}>\\n  <!-- Popover on a fixed element -->\\n</EuiPopover>\";\nvar popoverBlockSnippet = \"<EuiPopover\\n  button={button}\\n  isOpen={this.state.isPopoverOpen}\\n  closePopover={this.closePopover}\\n  display=\\\"block\\\">\\n  <!-- Popover anchor is display block -->\\n</EuiPopover>\";\nvar PopoverExample = {\n  title: 'Popover',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the Popover component to hide controls or options behind a clickable element.\"),\n    props: {\n      EuiPopover: _components2.EuiPopover\n    },\n    snippet: popOverSnippet,\n    demo: _react.default.createElement(_popover.default, null)\n  }, {\n    title: 'Trap focus',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: trapFocusSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: trapFocusHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"If the Popover should be responsible for trapping the focus within itself (as opposed to a child component), then you should set\", ' ', _react.default.createElement(_components2.EuiCode, null, \"ownFocus\"), \".\"),\n    snippet: trapFocusSnippet,\n    demo: _react.default.createElement(_trap_focus.default, null)\n  }, {\n    title: 'Anchor position',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverAnchorPositionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverAnchorPositionHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"The alignment and arrow on your popover can be set with the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"anchorPosition\"), \" prop. These positions will not update based upon screen real estate and will stick to the positions you declare. Because of this,\", ' ', _react.default.createElement(\"strong\", null, \"be careful when using left or right positioning\"), \".\"), _react.default.createElement(\"p\", null, _react.default.createElement(\"strong\", null, \"Some tips:\")), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, \"The first word in the \", _react.default.createElement(_components2.EuiCode, null, \"anchorPosition\"), \" denotes where the popover will appear relative to the button.\"), _react.default.createElement(\"li\", null, \"The second word in the \", _react.default.createElement(_components2.EuiCode, null, \"anchorPosition\"), \" denotes where the gravity / pin position will appear relative to the popover.\"))),\n    snippet: popoverAnchorSnippet,\n    demo: _react.default.createElement(_popover_anchor_position.default, null)\n  }, {\n    title: 'Popover with title and/or footer',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverWithTitleSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverWithTitleHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Popovers often have need for titling. This can be applied through a prop or used separately as its own component\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiPopoverTitle\"), \" nested somewhere in the child prop.\"), _react.default.createElement(\"p\", null, \"You can also add a similiarly styled\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiPopoverFooter\"), \" for smaller captions or call to action buttons.\")),\n    props: {\n      EuiPopoverTitle: _components2.EuiPopoverTitle,\n      EuiPopoverFooter: _components2.EuiPopoverFooter\n    },\n    demo: _react.default.createElement(_popover_with_title.default, null),\n    snippet: popoverWithTitleSnippet\n  }, {\n    title: 'Panel class name and padding size',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverPanelClassNameSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverPanelClassNameHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the \", _react.default.createElement(_components2.EuiCode, null, \"panelPaddingSize\"), \" prop to adjust the padding on the panel within the panel. Use the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"panelClassName\"), \" prop to pass a custom class to the panel inside a popover.\"),\n    demo: _react.default.createElement(_popover_panel_class_name.default, null),\n    snippet: popoverPanelClassNameSnippet\n  }, {\n    title: 'Popover with title and padding size',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverWithTitlePaddingSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverWithTitlePaddingHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"When using popover titles, you can still propogate the padding size by using \", _react.default.createElement(_components2.EuiCode, null, \"panelPaddingSize\"), \". This will only affect the horizontal padding of the title and the overall padding of the content.\")),\n    snippet: popoverWithTitlePaddingSnippet,\n    demo: _react.default.createElement(_popover_with_title_padding.default, null)\n  }, {\n    title: 'Constraining a popover inside a container',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverContainerSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverContainerHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiPopover\"), \" can accept a React or DOM element as a\", ' ', _react.default.createElement(_components2.EuiCode, null, \"container\"), \" prop and restrict the popover from overflowing that container.\")),\n    snippet: popoverContainerSnippet,\n    demo: _react.default.createElement(_popover_container.default, null)\n  }, {\n    title: 'Popover using an HTMLElement as the anchor',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverHTMLElementAnchorSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverHTMLElementAnchorHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiWrappingPopover\"), \" is an extra popover component that allows any existing DOM element to be passed as the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"button\"), \" prop.\")),\n    demo: _react.default.createElement(_popover_htmlelement_anchor.default, null)\n  }, {\n    title: 'Popover on a fixed element',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverFixedSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverFixedHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Popover content even works on \", _react.default.createElement(_components2.EuiCode, null, \"position: fixed;\"), ' ', \"elements.\")),\n    snippet: popoverFixedSnippet,\n    demo: _react.default.createElement(_popover_fixed.default, null)\n  }, {\n    title: 'Popover with block level display',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: popoverBlockSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: popoverBlockHtml\n    }],\n    text: _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Popover anchors default to \", _react.default.createElement(_components2.EuiCode, null, \"display: inline-block\"), ' ', \"so they do not force block display on inline triggers. If you do need to change this to block display, just add\", ' ', _react.default.createElement(_components2.EuiCode, null, \"display=\\\"block\\\"\"))),\n    snippet: popoverBlockSnippet,\n    demo: _react.default.createElement(_popover_block.default, null)\n  }]\n};\nexports.PopoverExample = PopoverExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/popover/popover_example.js"],"names":["popoverSource","require","popoverHtml","Popover","trapFocusSource","trapFocusHtml","TrapFocus","popoverAnchorPositionSource","popoverAnchorPositionHtml","PopoverAnchorPosition","popoverPanelClassNameSource","popoverPanelClassNameHtml","PopoverPanelClassName","popoverWithTitleSource","popoverWithTitleHtml","PopoverWithTitle","popoverWithTitlePaddingSource","popoverWithTitlePaddingHtml","PopoverWithTitlePadding","popoverHTMLElementAnchorSource","popoverHTMLElementAnchorHtml","PopoverHTMLElementAnchor","popoverContainerSource","popoverContainerHtml","PopoverContainer","popoverFixedSource","popoverFixedHtml","PopoverFixed","popoverBlockSource","popoverBlockHtml","PopoverBlock","popOverSnippet","trapFocusSnippet","popoverAnchorSnippet","popoverWithTitleSnippet","popoverPanelClassNameSnippet","popoverWithTitlePaddingSnippet","popoverContainerSnippet","popoverFixedSnippet","popoverBlockSnippet","PopoverExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiPopover","snippet","demo","EuiPopoverTitle","EuiPopoverFooter"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiPopover,\n  EuiPopoverTitle,\n  EuiPopoverFooter,\n} from '../../../../src/components';\n\nimport Popover from './popover';\nconst popoverSource = require('!!raw-loader!./popover');\nconst popoverHtml = renderToHtml(Popover);\n\nimport TrapFocus from './trap_focus';\nconst trapFocusSource = require('!!raw-loader!./trap_focus');\nconst trapFocusHtml = renderToHtml(TrapFocus);\n\nimport PopoverAnchorPosition from './popover_anchor_position';\nconst popoverAnchorPositionSource = require('!!raw-loader!./popover_anchor_position');\nconst popoverAnchorPositionHtml = renderToHtml(PopoverAnchorPosition);\n\nimport PopoverPanelClassName from './popover_panel_class_name';\nconst popoverPanelClassNameSource = require('!!raw-loader!./popover_panel_class_name');\nconst popoverPanelClassNameHtml = renderToHtml(PopoverPanelClassName);\n\nimport PopoverWithTitle from './popover_with_title';\nconst popoverWithTitleSource = require('!!raw-loader!./popover_with_title');\nconst popoverWithTitleHtml = renderToHtml(PopoverWithTitle);\n\nimport PopoverWithTitlePadding from './popover_with_title_padding';\nconst popoverWithTitlePaddingSource = require('!!raw-loader!./popover_with_title_padding');\nconst popoverWithTitlePaddingHtml = renderToHtml(PopoverWithTitlePadding);\n\nimport PopoverHTMLElementAnchor from './popover_htmlelement_anchor';\nconst popoverHTMLElementAnchorSource = require('!!raw-loader!./popover_htmlelement_anchor');\nconst popoverHTMLElementAnchorHtml = renderToHtml(PopoverHTMLElementAnchor);\n\nimport PopoverContainer from './popover_container';\nconst popoverContainerSource = require('!!raw-loader!./popover_container');\nconst popoverContainerHtml = renderToHtml(PopoverContainer);\n\nimport PopoverFixed from './popover_fixed';\nconst popoverFixedSource = require('!!raw-loader!./popover_fixed');\nconst popoverFixedHtml = renderToHtml(PopoverFixed);\n\nimport PopoverBlock from './popover_block';\nconst popoverBlockSource = require('!!raw-loader!./popover_block');\nconst popoverBlockHtml = renderToHtml(PopoverBlock);\n\nconst popOverSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}>\n  <!-- Popover content -->\n</EuiPopover>`;\n\nconst trapFocusSnippet = `<EuiPopover\n  button={button}\n  ownFocus\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}>\n  <!-- Popover content -->\n</EuiPopover>`;\n\nconst popoverAnchorSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  anchorPosition=\"downLeft\">\n  <!-- Popover content -->\n</EuiPopover>`;\n\nconst popoverWithTitleSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}>\n  <EuiPopoverTitle><!-- Popover title --></EuiPopoverTitle>\n  <div><!-- Popover body --></div>\n  <EuiPopoverFooter><!-- Popover footer --></EuiPopoverFooter>\n</EuiPopover>`;\n\nconst popoverPanelClassNameSnippet = `<EuiPopover\n  ownFocus\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  panelClassName=\"yourClassNameHere\"\n  panelPaddingSize=\"none\">\n  <!-- Popover with custom class name and custom padding -->\n</EuiPopover>`;\n\nconst popoverWithTitlePaddingSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  panelPaddingSize=\"s\">\n  <EuiPopoverTitle><!-- Popover title --></EuiPopoverTitle>\n  <!-- Content for popover with small padding -->\n</EuiPopover>`;\n\nconst popoverContainerSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  container={this.panel}>\n  <!-- Popover content -->\n</EuiPopover>`;\n\nconst popoverFixedSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  repositionOnScroll={true}>\n  <!-- Popover on a fixed element -->\n</EuiPopover>`;\n\nconst popoverBlockSnippet = `<EuiPopover\n  button={button}\n  isOpen={this.state.isPopoverOpen}\n  closePopover={this.closePopover}\n  display=\"block\">\n  <!-- Popover anchor is display block -->\n</EuiPopover>`;\n\nexport const PopoverExample = {\n  title: 'Popover',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the Popover component to hide controls or options behind a\n          clickable element.\n        </p>\n      ),\n      props: { EuiPopover },\n      snippet: popOverSnippet,\n      demo: <Popover />,\n    },\n    {\n      title: 'Trap focus',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: trapFocusSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: trapFocusHtml,\n        },\n      ],\n      text: (\n        <p>\n          If the Popover should be responsible for trapping the focus within\n          itself (as opposed to a child component), then you should set{' '}\n          <EuiCode>ownFocus</EuiCode>.\n        </p>\n      ),\n      snippet: trapFocusSnippet,\n      demo: <TrapFocus />,\n    },\n    {\n      title: 'Anchor position',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverAnchorPositionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverAnchorPositionHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            The alignment and arrow on your popover can be set with the{' '}\n            <EuiCode>anchorPosition</EuiCode> prop. These positions will not\n            update based upon screen real estate and will stick to the positions\n            you declare. Because of this,{' '}\n            <strong>be careful when using left or right positioning</strong>.\n          </p>\n          <p>\n            <strong>Some tips:</strong>\n          </p>\n          <ul>\n            <li>\n              The first word in the <EuiCode>anchorPosition</EuiCode> denotes\n              where the popover will appear relative to the button.\n            </li>\n            <li>\n              The second word in the <EuiCode>anchorPosition</EuiCode> denotes\n              where the gravity / pin position will appear relative to the\n              popover.\n            </li>\n          </ul>\n        </div>\n      ),\n      snippet: popoverAnchorSnippet,\n      demo: <PopoverAnchorPosition />,\n    },\n    {\n      title: 'Popover with title and/or footer',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverWithTitleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverWithTitleHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Popovers often have need for titling. This can be applied through a\n            prop or used separately as its own component{' '}\n            <EuiCode>EuiPopoverTitle</EuiCode> nested somewhere in the child\n            prop.\n          </p>\n          <p>\n            You can also add a similiarly styled{' '}\n            <EuiCode>EuiPopoverFooter</EuiCode> for smaller captions or call to\n            action buttons.\n          </p>\n        </div>\n      ),\n      props: { EuiPopoverTitle, EuiPopoverFooter },\n      demo: <PopoverWithTitle />,\n      snippet: popoverWithTitleSnippet,\n    },\n    {\n      title: 'Panel class name and padding size',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverPanelClassNameSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverPanelClassNameHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the <EuiCode>panelPaddingSize</EuiCode> prop to adjust the padding\n          on the panel within the panel. Use the{' '}\n          <EuiCode>panelClassName</EuiCode> prop to pass a custom class to the\n          panel inside a popover.\n        </p>\n      ),\n      demo: <PopoverPanelClassName />,\n      snippet: popoverPanelClassNameSnippet,\n    },\n    {\n      title: 'Popover with title and padding size',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverWithTitlePaddingSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverWithTitlePaddingHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            When using popover titles, you can still propogate the padding size\n            by using <EuiCode>panelPaddingSize</EuiCode>. This will only affect\n            the horizontal padding of the title and the overall padding of the\n            content.\n          </p>\n        </div>\n      ),\n      snippet: popoverWithTitlePaddingSnippet,\n      demo: <PopoverWithTitlePadding />,\n    },\n    {\n      title: 'Constraining a popover inside a container',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverContainerSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverContainerHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <EuiCode>EuiPopover</EuiCode> can accept a React or DOM element as a{' '}\n            <EuiCode>container</EuiCode> prop and restrict the popover from\n            overflowing that container.\n          </p>\n        </div>\n      ),\n      snippet: popoverContainerSnippet,\n      demo: <PopoverContainer />,\n    },\n    {\n      title: 'Popover using an HTMLElement as the anchor',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverHTMLElementAnchorSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverHTMLElementAnchorHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <EuiCode>EuiWrappingPopover</EuiCode> is an extra popover component\n            that allows any existing DOM element to be passed as the{' '}\n            <EuiCode>button</EuiCode> prop.\n          </p>\n        </div>\n      ),\n      demo: <PopoverHTMLElementAnchor />,\n    },\n    {\n      title: 'Popover on a fixed element',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverFixedSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverFixedHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Popover content even works on <EuiCode>position: fixed;</EuiCode>{' '}\n            elements.\n          </p>\n        </div>\n      ),\n      snippet: popoverFixedSnippet,\n      demo: <PopoverFixed />,\n    },\n    {\n      title: 'Popover with block level display',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: popoverBlockSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: popoverBlockHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            Popover anchors default to <EuiCode>display: inline-block</EuiCode>{' '}\n            so they do not force block display on inline triggers. If you do\n            need to change this to block display, just add{' '}\n            <EuiCode>display=&quot;block&quot;</EuiCode>\n          </p>\n        </div>\n      ),\n      snippet: popoverBlockSnippet,\n      demo: <PopoverBlock />,\n    },\n  ],\n};\n"]}]}