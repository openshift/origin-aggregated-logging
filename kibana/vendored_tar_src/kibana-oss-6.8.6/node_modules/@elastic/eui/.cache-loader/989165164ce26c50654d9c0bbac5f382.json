{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/super_date_picker.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/super_date_picker.js","mtime":1567626462147},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"prettyDuration\", {\n  enumerable: true,\n  get: function get() {\n    return _pretty_duration.prettyDuration;\n  }\n});\nObject.defineProperty(exports, \"commonDurationRanges\", {\n  enumerable: true,\n  get: function get() {\n    return _pretty_duration.commonDurationRanges;\n  }\n});\nexports.EuiSuperDatePicker = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _types = require(\"./types\");\n\nvar _pretty_duration = require(\"./pretty_duration\");\n\nvar _pretty_interval = require(\"./pretty_interval\");\n\nvar _datemath = _interopRequireDefault(require(\"@elastic/datemath\"));\n\nvar _super_update_button = require(\"./super_update_button\");\n\nvar _quick_select_popover = require(\"./quick_select_popover/quick_select_popover\");\n\nvar _date_popover_button = require(\"./date_popover/date_popover_button\");\n\nvar _date_picker_range = require(\"../date_picker_range\");\n\nvar _form = require(\"../../form\");\n\nvar _flex = require(\"../../flex\");\n\nvar _async_interval = require(\"./async_interval\");\n\nvar _i18n = require(\"../../i18n\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction isRangeInvalid(start, end) {\n  if (start === 'now' && end === 'now') {\n    return true;\n  }\n\n  var startMoment = _datemath.default.parse(start);\n\n  var endMoment = _datemath.default.parse(end, {\n    roundUp: true\n  });\n\n  if (!startMoment || !endMoment || !startMoment.isValid() || !endMoment.isValid()) {\n    return true;\n  }\n\n  if (startMoment.isAfter(endMoment)) {\n    return true;\n  }\n\n  return false;\n}\n\nvar EuiSuperDatePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiSuperDatePicker, _Component);\n\n  _createClass(EuiSuperDatePicker, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.start !== prevState.prevProps.start || nextProps.end !== prevState.prevProps.end) {\n        return {\n          prevProps: {\n            start: nextProps.start,\n            end: nextProps.end\n          },\n          start: nextProps.start,\n          end: nextProps.end,\n          isInvalid: isRangeInvalid(nextProps.start, nextProps.end),\n          hasChanged: false,\n          showPrettyDuration: (0, _pretty_duration.showPrettyDuration)(nextProps.start, nextProps.end, nextProps.commonlyUsedRanges)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function EuiSuperDatePicker(props) {\n    var _this;\n\n    _classCallCheck(this, EuiSuperDatePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiSuperDatePicker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setTime\", function (_ref) {\n      var start = _ref.start,\n          end = _ref.end;\n      var isInvalid = isRangeInvalid(start, end);\n\n      _this.setState({\n        start: start,\n        end: end,\n        isInvalid: isInvalid,\n        hasChanged: true\n      });\n\n      if (!_this.props.showUpdateButton) {\n        _this.props.onTimeChange({\n          start: start,\n          end: end,\n          isQuickSelection: false,\n          isInvalid: isInvalid\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"componentDidMount\", function () {\n      if (!_this.props.isPaused) {\n        _this.startInterval(_this.props.refreshInterval);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"componentDidUpdate\", function () {\n      if (_this.props.isPaused) {\n        _this.stopInterval();\n      } else {\n        _this.startInterval(_this.props.refreshInterval);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"componentWillUnmount\", function () {\n      _this.stopInterval();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStart\", function (start) {\n      _this.setTime({\n        start: start,\n        end: _this.state.end\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setEnd\", function (end) {\n      _this.setTime({\n        start: _this.state.start,\n        end: end\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"applyTime\", function () {\n      _this.props.onTimeChange({\n        start: _this.state.start,\n        end: _this.state.end,\n        isQuickSelection: false,\n        isInvalid: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"applyQuickTime\", function (_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n\n      _this.setState({\n        showPrettyDuration: (0, _pretty_duration.showPrettyDuration)(start, end, _this.props.commonlyUsedRanges)\n      });\n\n      _this.props.onTimeChange({\n        start: start,\n        end: end,\n        isQuickSelection: true,\n        isInvalid: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hidePrettyDuration\", function () {\n      _this.setState({\n        showPrettyDuration: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onStartDatePopoverToggle\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isStartDatePopoverOpen: !prevState.isStartDatePopoverOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onStartDatePopoverClose\", function () {\n      _this.setState({\n        isStartDatePopoverOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onEndDatePopoverToggle\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isEndDatePopoverOpen: !prevState.isEndDatePopoverOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onEndDatePopoverClose\", function () {\n      _this.setState({\n        isEndDatePopoverOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRefreshChange\", function (_ref3) {\n      var refreshInterval = _ref3.refreshInterval,\n          isPaused = _ref3.isPaused;\n\n      _this.stopInterval();\n\n      if (!isPaused) {\n        _this.startInterval(refreshInterval);\n      }\n\n      if (_this.props.onRefreshChange) {\n        _this.props.onRefreshChange({\n          refreshInterval: refreshInterval,\n          isPaused: isPaused\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"stopInterval\", function () {\n      if (_this.asyncInterval) {\n        _this.asyncInterval.stop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"startInterval\", function (refreshInterval) {\n      var onRefresh = _this.props.onRefresh;\n\n      if (onRefresh) {\n        var handler = function handler() {\n          var _this$props = _this.props,\n              start = _this$props.start,\n              end = _this$props.end;\n          onRefresh({\n            start: start,\n            end: end,\n            refreshInterval: refreshInterval\n          });\n        };\n\n        _this.asyncInterval = new _async_interval.AsyncInterval(handler, refreshInterval);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderDatePickerRange\", function () {\n      var _this$state = _this.state,\n          start = _this$state.start,\n          end = _this$state.end,\n          hasChanged = _this$state.hasChanged,\n          isInvalid = _this$state.isInvalid;\n      var isDisabled = _this.props.isDisabled;\n\n      if (_this.props.isAutoRefreshOnly) {\n        return _react.default.createElement(_date_picker_range.EuiDatePickerRange, {\n          className: \"euiDatePickerRange--inGroup\",\n          iconType: false,\n          isCustom: true,\n          startDateControl: _react.default.createElement(\"div\", null),\n          endDateControl: _react.default.createElement(\"div\", null),\n          readOnly: true\n        }, _react.default.createElement(\"span\", {\n          className: \"euiSuperDatePicker__prettyFormat\"\n        }, (0, _pretty_interval.prettyInterval)(_this.props.isPaused, _this.props.refreshInterval)));\n      }\n\n      if (_this.state.showPrettyDuration && !_this.state.isStartDatePopoverOpen && !_this.state.isEndDatePopoverOpen) {\n        return _react.default.createElement(_date_picker_range.EuiDatePickerRange, {\n          className: \"euiDatePickerRange--inGroup\",\n          iconType: false,\n          isCustom: true,\n          startDateControl: _react.default.createElement(\"div\", null),\n          endDateControl: _react.default.createElement(\"div\", null)\n        }, _react.default.createElement(\"button\", {\n          className: (0, _classnames.default)('euiSuperDatePicker__prettyFormat', {\n            'euiSuperDatePicker__prettyFormat--disabled': isDisabled\n          }),\n          \"data-test-subj\": \"superDatePickerShowDatesButton\",\n          disabled: isDisabled,\n          onClick: _this.hidePrettyDuration\n        }, (0, _pretty_duration.prettyDuration)(start, end, _this.props.commonlyUsedRanges, _this.props.dateFormat), _react.default.createElement(\"span\", {\n          className: \"euiSuperDatePicker__prettyFormatLink\"\n        }, _react.default.createElement(_i18n.EuiI18n, {\n          token: \"euiSuperDatePicker.showDatesButtonLabel\",\n          default: \"Show dates\"\n        }))));\n      }\n\n      return _react.default.createElement(_date_picker_range.EuiDatePickerRange, {\n        className: \"euiDatePickerRange--inGroup\",\n        iconType: false,\n        isCustom: true,\n        startDateControl: _react.default.createElement(_date_popover_button.EuiDatePopoverButton, {\n          position: \"start\",\n          needsUpdating: hasChanged,\n          isInvalid: isInvalid,\n          isDisabled: isDisabled,\n          onChange: _this.setStart,\n          value: start,\n          dateFormat: _this.props.dateFormat,\n          isOpen: _this.state.isStartDatePopoverOpen,\n          onPopoverToggle: _this.onStartDatePopoverToggle,\n          onPopoverClose: _this.onStartDatePopoverClose\n        }),\n        endDateControl: _react.default.createElement(_date_popover_button.EuiDatePopoverButton, {\n          position: \"end\",\n          needsUpdating: hasChanged,\n          isInvalid: isInvalid,\n          isDisabled: isDisabled,\n          onChange: _this.setEnd,\n          value: end,\n          dateFormat: _this.props.dateFormat,\n          roundUp: true,\n          isOpen: _this.state.isEndDatePopoverOpen,\n          onPopoverToggle: _this.onEndDatePopoverToggle,\n          onPopoverClose: _this.onEndDatePopoverClose\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClickUpdateButton\", function () {\n      if (!_this.state.hasChanged && _this.props.onRefresh) {\n        var _this$props2 = _this.props,\n            start = _this$props2.start,\n            end = _this$props2.end,\n            refreshInterval = _this$props2.refreshInterval;\n\n        _this.props.onRefresh({\n          start: start,\n          end: end,\n          refreshInterval: refreshInterval\n        });\n      } else {\n        _this.applyTime();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderUpdateButton\", function () {\n      if (!_this.props.showUpdateButton || _this.props.isAutoRefreshOnly) {\n        return;\n      }\n\n      return _react.default.createElement(_flex.EuiFlexItem, {\n        grow: false\n      }, _react.default.createElement(_super_update_button.EuiSuperUpdateButton, {\n        needsUpdate: _this.state.hasChanged,\n        isLoading: _this.props.isLoading,\n        isDisabled: _this.props.isDisabled || _this.state.isInvalid,\n        onClick: _this.handleClickUpdateButton,\n        \"data-test-subj\": \"superDatePickerApplyTimeButton\"\n      }));\n    });\n\n    var _this$props3 = _this.props,\n        _start = _this$props3.start,\n        _end = _this$props3.end,\n        commonlyUsedRanges = _this$props3.commonlyUsedRanges;\n    _this.state = {\n      prevProps: {\n        start: props.start,\n        end: props.end\n      },\n      start: _start,\n      end: _end,\n      isInvalid: isRangeInvalid(_start, _end),\n      hasChanged: false,\n      showPrettyDuration: (0, _pretty_duration.showPrettyDuration)(_start, _end, commonlyUsedRanges),\n      isStartDatePopoverOpen: false,\n      isEndDatePopoverOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(EuiSuperDatePicker, [{\n    key: \"render\",\n    value: function render() {\n      var quickSelect = _react.default.createElement(_quick_select_popover.EuiQuickSelectPopover, {\n        applyTime: this.applyQuickTime,\n        start: this.props.start,\n        end: this.props.end,\n        applyRefreshInterval: this.props.onRefreshChange ? this.onRefreshChange : null,\n        isDisabled: this.props.isDisabled,\n        isPaused: this.props.isPaused,\n        refreshInterval: this.props.refreshInterval,\n        commonlyUsedRanges: this.props.commonlyUsedRanges,\n        dateFormat: this.props.dateFormat,\n        recentlyUsedRanges: this.props.recentlyUsedRanges,\n        isAutoRefreshOnly: this.props.isAutoRefreshOnly,\n        customQuickSelectPanels: this.props.customQuickSelectPanels\n      });\n\n      var flexWrapperClasses = (0, _classnames.default)('euiSuperDatePicker__flexWrapper', {\n        'euiSuperDatePicker__flexWrapper--noUpdateButton': !this.props.showUpdateButton,\n        'euiSuperDatePicker__flexWrapper--isAutoRefreshOnly': this.props.isAutoRefreshOnly\n      });\n      return _react.default.createElement(_flex.EuiFlexGroup, {\n        gutterSize: \"s\",\n        responsive: false,\n        className: flexWrapperClasses\n      }, _react.default.createElement(_flex.EuiFlexItem, null, _react.default.createElement(_form.EuiFormControlLayout, {\n        className: \"euiSuperDatePicker\",\n        isDisabled: this.props.isDisabled,\n        prepend: quickSelect\n      }, this.renderDatePickerRange())), this.renderUpdateButton());\n    }\n  }]);\n\n  return EuiSuperDatePicker;\n}(_react.Component);\n\nexports.EuiSuperDatePicker = EuiSuperDatePicker;\n\n_defineProperty(EuiSuperDatePicker, \"propTypes\", {\n  isLoading: _propTypes.default.bool,\n  isDisabled: _propTypes.default.bool,\n\n  /**\n   * String as either datemath (e.g.: now, now-15m, now-15m/m) or\n   * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n   */\n  start: _propTypes.default.string,\n\n  /**\n   * String as either datemath (e.g.: now, now-15m, now-15m/m) or\n   * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n   */\n  end: _propTypes.default.string,\n\n  /**\n   * Callback for when the time changes. Called with { start, end, isQuickSelection, isInvalid }\n   */\n  onTimeChange: _propTypes.default.func.isRequired,\n  isPaused: _propTypes.default.bool,\n\n  /**\n   * Refresh interval in milliseconds\n   */\n  refreshInterval: _propTypes.default.number,\n\n  /**\n   * Callback for when the refresh interval changes. Called with { isPaused, refreshInterval }\n   * Supply onRefreshChange to show refresh interval inputs in quick select popover\n   */\n  onRefreshChange: _propTypes.default.func,\n\n  /**\n   * Callback for when the refresh interval is fired. Called with { start, end, refreshInterval }\n   * EuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\n   * If a promise is returned, the next refresh interval will not start until the promise has resolved.\n   * If the promise rejects the refresh interval will stop and the error thrown\n   */\n  onRefresh: _propTypes.default.func,\n\n  /**\n   * 'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\n   * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n   */\n  commonlyUsedRanges: _propTypes.default.arrayOf(_types.commonlyUsedRangeShape),\n  dateFormat: _propTypes.default.string,\n\n  /**\n   * 'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\n   * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n   */\n  recentlyUsedRanges: _propTypes.default.arrayOf(_types.recentlyUsedRangeShape),\n\n  /**\n   * Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.\n   */\n  showUpdateButton: _propTypes.default.bool,\n\n  /**\n   * Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.\n   */\n  isAutoRefreshOnly: _propTypes.default.bool,\n  customQuickSelectPanels: _propTypes.default.arrayOf(_types.quickSelectPanelShape)\n});\n\n_defineProperty(EuiSuperDatePicker, \"defaultProps\", {\n  start: 'now-15m',\n  end: 'now',\n  isPaused: true,\n  isDisabled: false,\n  refreshInterval: 0,\n  commonlyUsedRanges: _pretty_duration.commonDurationRanges,\n  dateFormat: 'MMM D, YYYY @ HH:mm:ss.SSS',\n  recentlyUsedRanges: [],\n  showUpdateButton: true,\n  isAutoRefreshOnly: false\n});\n\nEuiSuperDatePicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"nextProps\",\n      \"type\": null\n    }, {\n      \"name\": \"prevState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setTime\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ start, end }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"componentDidMount\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"componentDidUpdate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"componentWillUnmount\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"setStart\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"start\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setEnd\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"end\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"applyTime\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"applyQuickTime\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ start, end }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"hidePrettyDuration\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onStartDatePopoverToggle\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onStartDatePopoverClose\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onEndDatePopoverToggle\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onEndDatePopoverClose\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onRefreshChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ refreshInterval, isPaused }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"stopInterval\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"startInterval\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"refreshInterval\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderDatePickerRange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleClickUpdateButton\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"renderUpdateButton\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiSuperDatePicker\",\n  \"props\": {\n    \"start\": {\n      \"defaultValue\": {\n        \"value\": \"'now-15m'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String as either datemath (e.g.: now, now-15m, now-15m/m) or\\nabsolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\"\n    },\n    \"end\": {\n      \"defaultValue\": {\n        \"value\": \"'now'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String as either datemath (e.g.: now, now-15m, now-15m/m) or\\nabsolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\"\n    },\n    \"isPaused\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"refreshInterval\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Refresh interval in milliseconds\"\n    },\n    \"commonlyUsedRanges\": {\n      \"defaultValue\": {\n        \"value\": \"commonDurationRanges\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"custom\",\n          \"raw\": \"commonlyUsedRangeShape\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\\nabsolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\"\n    },\n    \"dateFormat\": {\n      \"defaultValue\": {\n        \"value\": \"'MMM D, YYYY @ HH:mm:ss.SSS'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"recentlyUsedRanges\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"custom\",\n          \"raw\": \"recentlyUsedRangeShape\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\\nabsolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\"\n    },\n    \"showUpdateButton\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.\"\n    },\n    \"isAutoRefreshOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onTimeChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Callback for when the time changes. Called with { start, end, isQuickSelection, isInvalid }\"\n    },\n    \"onRefreshChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback for when the refresh interval changes. Called with { isPaused, refreshInterval }\\nSupply onRefreshChange to show refresh interval inputs in quick select popover\"\n    },\n    \"onRefresh\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback for when the refresh interval is fired. Called with { start, end, refreshInterval }\\nEuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\\nIf a promise is returned, the next refresh interval will not start until the promise has resolved.\\nIf the promise rejects the refresh interval will stop and the error thrown\"\n    },\n    \"customQuickSelectPanels\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"custom\",\n          \"raw\": \"quickSelectPanelShape\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/super_date_picker.js"],"names":["isRangeInvalid","start","end","startMoment","dateMath","parse","endMoment","roundUp","isValid","isAfter","EuiSuperDatePicker","nextProps","prevState","prevProps","isInvalid","hasChanged","showPrettyDuration","commonlyUsedRanges","props","setState","showUpdateButton","onTimeChange","isQuickSelection","isPaused","startInterval","refreshInterval","stopInterval","setTime","state","isStartDatePopoverOpen","isEndDatePopoverOpen","onRefreshChange","asyncInterval","stop","onRefresh","handler","AsyncInterval","isDisabled","isAutoRefreshOnly","hidePrettyDuration","dateFormat","setStart","onStartDatePopoverToggle","onStartDatePopoverClose","setEnd","onEndDatePopoverToggle","onEndDatePopoverClose","applyTime","isLoading","handleClickUpdateButton","quickSelect","applyQuickTime","recentlyUsedRanges","customQuickSelectPanels","flexWrapperClasses","renderDatePickerRange","renderUpdateButton","Component","PropTypes","bool","string","func","isRequired","number","arrayOf","commonlyUsedRangeShape","recentlyUsedRangeShape","quickSelectPanelShape","commonDurationRanges"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport {\n  commonlyUsedRangeShape,\n  recentlyUsedRangeShape,\n  quickSelectPanelShape,\n} from './types';\nimport {\n  prettyDuration,\n  showPrettyDuration,\n  commonDurationRanges,\n} from './pretty_duration';\nimport { prettyInterval } from './pretty_interval';\n\nimport dateMath from '@elastic/datemath';\n\nimport { EuiSuperUpdateButton } from './super_update_button';\nimport { EuiQuickSelectPopover } from './quick_select_popover/quick_select_popover';\nimport { EuiDatePopoverButton } from './date_popover/date_popover_button';\n\nimport { EuiDatePickerRange } from '../date_picker_range';\nimport { EuiFormControlLayout } from '../../form';\nimport { EuiFlexGroup, EuiFlexItem } from '../../flex';\nimport { AsyncInterval } from './async_interval';\nimport { EuiI18n } from '../../i18n';\n\nexport { prettyDuration, commonDurationRanges };\n\nfunction isRangeInvalid(start, end) {\n  if (start === 'now' && end === 'now') {\n    return true;\n  }\n\n  const startMoment = dateMath.parse(start);\n  const endMoment = dateMath.parse(end, { roundUp: true });\n  if (\n    !startMoment ||\n    !endMoment ||\n    !startMoment.isValid() ||\n    !endMoment.isValid()\n  ) {\n    return true;\n  }\n  if (startMoment.isAfter(endMoment)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport class EuiSuperDatePicker extends Component {\n  static propTypes = {\n    isLoading: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    /**\n     * String as either datemath (e.g.: now, now-15m, now-15m/m) or\n     * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n     */\n    start: PropTypes.string,\n    /**\n     * String as either datemath (e.g.: now, now-15m, now-15m/m) or\n     * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n     */\n    end: PropTypes.string,\n    /**\n     * Callback for when the time changes. Called with { start, end, isQuickSelection, isInvalid }\n     */\n    onTimeChange: PropTypes.func.isRequired,\n    isPaused: PropTypes.bool,\n    /**\n     * Refresh interval in milliseconds\n     */\n    refreshInterval: PropTypes.number,\n    /**\n     * Callback for when the refresh interval changes. Called with { isPaused, refreshInterval }\n     * Supply onRefreshChange to show refresh interval inputs in quick select popover\n     */\n    onRefreshChange: PropTypes.func,\n\n    /**\n     * Callback for when the refresh interval is fired. Called with { start, end, refreshInterval }\n     * EuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\n     * If a promise is returned, the next refresh interval will not start until the promise has resolved.\n     * If the promise rejects the refresh interval will stop and the error thrown\n     */\n    onRefresh: PropTypes.func,\n\n    /**\n     * 'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\n     * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n     */\n    commonlyUsedRanges: PropTypes.arrayOf(commonlyUsedRangeShape),\n    dateFormat: PropTypes.string,\n    /**\n     * 'start' and 'end' must be string as either datemath (e.g.: now, now-15m, now-15m/m) or\n     * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n     */\n    recentlyUsedRanges: PropTypes.arrayOf(recentlyUsedRangeShape),\n    /**\n     * Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.\n     */\n    showUpdateButton: PropTypes.bool,\n    /**\n     * Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.\n     */\n    isAutoRefreshOnly: PropTypes.bool,\n    customQuickSelectPanels: PropTypes.arrayOf(quickSelectPanelShape),\n  };\n\n  static defaultProps = {\n    start: 'now-15m',\n    end: 'now',\n    isPaused: true,\n    isDisabled: false,\n    refreshInterval: 0,\n    commonlyUsedRanges: commonDurationRanges,\n    dateFormat: 'MMM D, YYYY @ HH:mm:ss.SSS',\n    recentlyUsedRanges: [],\n    showUpdateButton: true,\n    isAutoRefreshOnly: false,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (\n      nextProps.start !== prevState.prevProps.start ||\n      nextProps.end !== prevState.prevProps.end\n    ) {\n      return {\n        prevProps: {\n          start: nextProps.start,\n          end: nextProps.end,\n        },\n        start: nextProps.start,\n        end: nextProps.end,\n        isInvalid: isRangeInvalid(nextProps.start, nextProps.end),\n        hasChanged: false,\n        showPrettyDuration: showPrettyDuration(\n          nextProps.start,\n          nextProps.end,\n          nextProps.commonlyUsedRanges\n        ),\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { start, end, commonlyUsedRanges } = this.props;\n\n    this.state = {\n      prevProps: {\n        start: props.start,\n        end: props.end,\n      },\n      start,\n      end,\n      isInvalid: isRangeInvalid(start, end),\n      hasChanged: false,\n      showPrettyDuration: showPrettyDuration(start, end, commonlyUsedRanges),\n      isStartDatePopoverOpen: false,\n      isEndDatePopoverOpen: false,\n    };\n  }\n\n  setTime = ({ start, end }) => {\n    const isInvalid = isRangeInvalid(start, end);\n\n    this.setState({\n      start,\n      end,\n      isInvalid,\n      hasChanged: true,\n    });\n\n    if (!this.props.showUpdateButton) {\n      this.props.onTimeChange({\n        start,\n        end,\n        isQuickSelection: false,\n        isInvalid,\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (!this.props.isPaused) {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.props.isPaused) {\n      this.stopInterval();\n    } else {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.stopInterval();\n  };\n\n  setStart = start => {\n    this.setTime({ start, end: this.state.end });\n  };\n\n  setEnd = end => {\n    this.setTime({ start: this.state.start, end });\n  };\n\n  applyTime = () => {\n    this.props.onTimeChange({\n      start: this.state.start,\n      end: this.state.end,\n      isQuickSelection: false,\n      isInvalid: false,\n    });\n  };\n\n  applyQuickTime = ({ start, end }) => {\n    this.setState({\n      showPrettyDuration: showPrettyDuration(\n        start,\n        end,\n        this.props.commonlyUsedRanges\n      ),\n    });\n    this.props.onTimeChange({\n      start,\n      end,\n      isQuickSelection: true,\n      isInvalid: false,\n    });\n  };\n\n  hidePrettyDuration = () => {\n    this.setState({ showPrettyDuration: false });\n  };\n\n  onStartDatePopoverToggle = () => {\n    this.setState(prevState => {\n      return { isStartDatePopoverOpen: !prevState.isStartDatePopoverOpen };\n    });\n  };\n\n  onStartDatePopoverClose = () => {\n    this.setState({ isStartDatePopoverOpen: false });\n  };\n\n  onEndDatePopoverToggle = () => {\n    this.setState(prevState => {\n      return { isEndDatePopoverOpen: !prevState.isEndDatePopoverOpen };\n    });\n  };\n\n  onEndDatePopoverClose = () => {\n    this.setState({ isEndDatePopoverOpen: false });\n  };\n\n  onRefreshChange = ({ refreshInterval, isPaused }) => {\n    this.stopInterval();\n    if (!isPaused) {\n      this.startInterval(refreshInterval);\n    }\n    if (this.props.onRefreshChange) {\n      this.props.onRefreshChange({ refreshInterval, isPaused });\n    }\n  };\n\n  stopInterval = () => {\n    if (this.asyncInterval) {\n      this.asyncInterval.stop();\n    }\n  };\n\n  startInterval = refreshInterval => {\n    const { onRefresh } = this.props;\n    if (onRefresh) {\n      const handler = () => {\n        const { start, end } = this.props;\n        onRefresh({ start, end, refreshInterval });\n      };\n      this.asyncInterval = new AsyncInterval(handler, refreshInterval);\n    }\n  };\n\n  renderDatePickerRange = () => {\n    const { start, end, hasChanged, isInvalid } = this.state;\n    const { isDisabled } = this.props;\n\n    if (this.props.isAutoRefreshOnly) {\n      return (\n        <EuiDatePickerRange\n          className=\"euiDatePickerRange--inGroup\"\n          iconType={false}\n          isCustom\n          startDateControl={<div />}\n          endDateControl={<div />}\n          readOnly>\n          <span className=\"euiSuperDatePicker__prettyFormat\">\n            {prettyInterval(this.props.isPaused, this.props.refreshInterval)}\n          </span>\n        </EuiDatePickerRange>\n      );\n    }\n\n    if (\n      this.state.showPrettyDuration &&\n      !this.state.isStartDatePopoverOpen &&\n      !this.state.isEndDatePopoverOpen\n    ) {\n      return (\n        <EuiDatePickerRange\n          className=\"euiDatePickerRange--inGroup\"\n          iconType={false}\n          isCustom\n          startDateControl={<div />}\n          endDateControl={<div />}>\n          <button\n            className={classNames('euiSuperDatePicker__prettyFormat', {\n              'euiSuperDatePicker__prettyFormat--disabled': isDisabled,\n            })}\n            data-test-subj=\"superDatePickerShowDatesButton\"\n            disabled={isDisabled}\n            onClick={this.hidePrettyDuration}>\n            {prettyDuration(\n              start,\n              end,\n              this.props.commonlyUsedRanges,\n              this.props.dateFormat\n            )}\n            <span className=\"euiSuperDatePicker__prettyFormatLink\">\n              <EuiI18n\n                token=\"euiSuperDatePicker.showDatesButtonLabel\"\n                default=\"Show dates\"\n              />\n            </span>\n          </button>\n        </EuiDatePickerRange>\n      );\n    }\n\n    return (\n      <EuiDatePickerRange\n        className=\"euiDatePickerRange--inGroup\"\n        iconType={false}\n        isCustom\n        startDateControl={\n          <EuiDatePopoverButton\n            position=\"start\"\n            needsUpdating={hasChanged}\n            isInvalid={isInvalid}\n            isDisabled={isDisabled}\n            onChange={this.setStart}\n            value={start}\n            dateFormat={this.props.dateFormat}\n            isOpen={this.state.isStartDatePopoverOpen}\n            onPopoverToggle={this.onStartDatePopoverToggle}\n            onPopoverClose={this.onStartDatePopoverClose}\n          />\n        }\n        endDateControl={\n          <EuiDatePopoverButton\n            position=\"end\"\n            needsUpdating={hasChanged}\n            isInvalid={isInvalid}\n            isDisabled={isDisabled}\n            onChange={this.setEnd}\n            value={end}\n            dateFormat={this.props.dateFormat}\n            roundUp\n            isOpen={this.state.isEndDatePopoverOpen}\n            onPopoverToggle={this.onEndDatePopoverToggle}\n            onPopoverClose={this.onEndDatePopoverClose}\n          />\n        }\n      />\n    );\n  };\n\n  handleClickUpdateButton = () => {\n    if (!this.state.hasChanged && this.props.onRefresh) {\n      const { start, end, refreshInterval } = this.props;\n      this.props.onRefresh({ start, end, refreshInterval });\n    } else {\n      this.applyTime();\n    }\n  };\n\n  renderUpdateButton = () => {\n    if (!this.props.showUpdateButton || this.props.isAutoRefreshOnly) {\n      return;\n    }\n\n    return (\n      <EuiFlexItem grow={false}>\n        <EuiSuperUpdateButton\n          needsUpdate={this.state.hasChanged}\n          isLoading={this.props.isLoading}\n          isDisabled={this.props.isDisabled || this.state.isInvalid}\n          onClick={this.handleClickUpdateButton}\n          data-test-subj=\"superDatePickerApplyTimeButton\"\n        />\n      </EuiFlexItem>\n    );\n  };\n\n  render() {\n    const quickSelect = (\n      <EuiQuickSelectPopover\n        applyTime={this.applyQuickTime}\n        start={this.props.start}\n        end={this.props.end}\n        applyRefreshInterval={\n          this.props.onRefreshChange ? this.onRefreshChange : null\n        }\n        isDisabled={this.props.isDisabled}\n        isPaused={this.props.isPaused}\n        refreshInterval={this.props.refreshInterval}\n        commonlyUsedRanges={this.props.commonlyUsedRanges}\n        dateFormat={this.props.dateFormat}\n        recentlyUsedRanges={this.props.recentlyUsedRanges}\n        isAutoRefreshOnly={this.props.isAutoRefreshOnly}\n        customQuickSelectPanels={this.props.customQuickSelectPanels}\n      />\n    );\n\n    const flexWrapperClasses = classNames('euiSuperDatePicker__flexWrapper', {\n      'euiSuperDatePicker__flexWrapper--noUpdateButton': !this.props\n        .showUpdateButton,\n      'euiSuperDatePicker__flexWrapper--isAutoRefreshOnly': this.props\n        .isAutoRefreshOnly,\n    });\n\n    return (\n      <EuiFlexGroup\n        gutterSize=\"s\"\n        responsive={false}\n        className={flexWrapperClasses}>\n        <EuiFlexItem>\n          <EuiFormControlLayout\n            className=\"euiSuperDatePicker\"\n            isDisabled={this.props.isDisabled}\n            prepend={quickSelect}>\n            {this.renderDatePickerRange()}\n          </EuiFormControlLayout>\n        </EuiFlexItem>\n\n        {this.renderUpdateButton()}\n      </EuiFlexGroup>\n    );\n  }\n}\n"]}]}