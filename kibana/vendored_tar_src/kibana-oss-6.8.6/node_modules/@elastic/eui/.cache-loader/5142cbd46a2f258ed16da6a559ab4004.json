{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/context_menu/context_menu.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/context_menu/context_menu.tsx","mtime":1567626462140},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiContextMenu = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _context_menu_panel = require(\"./context_menu_panel\");\n\nvar _context_menu_item = require(\"./context_menu_item\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction mapIdsToPanels(panels) {\n  var map = {};\n  panels.forEach(function (panel) {\n    map[panel.id] = panel;\n  });\n  return map;\n}\n\nfunction mapIdsToPreviousPanels(panels) {\n  var idToPreviousPanelIdMap = {};\n  panels.forEach(function (panel) {\n    if (Array.isArray(panel.items)) {\n      panel.items.forEach(function (item) {\n        var isCloseable = item.panel !== undefined;\n\n        if (isCloseable) {\n          idToPreviousPanelIdMap[item.panel] = panel.id;\n        }\n      });\n    }\n  });\n  return idToPreviousPanelIdMap;\n}\n\nfunction mapPanelItemsToPanels(panels) {\n  var idAndItemIndexToPanelIdMap = {};\n  panels.forEach(function (panel) {\n    idAndItemIndexToPanelIdMap[panel.id] = {};\n\n    if (panel.items) {\n      panel.items.forEach(function (item, index) {\n        if (item.panel) {\n          idAndItemIndexToPanelIdMap[panel.id][index] = item.panel;\n        }\n      });\n    }\n  });\n  return idAndItemIndexToPanelIdMap;\n}\n\nvar EuiContextMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiContextMenu, _Component);\n\n  _createClass(EuiContextMenu, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var panels = nextProps.panels;\n\n      if (panels && prevState.prevProps.panels !== panels) {\n        return {\n          prevProps: {\n            panels: panels\n          },\n          idToPanelMap: mapIdsToPanels(panels),\n          idToPreviousPanelIdMap: mapIdsToPreviousPanels(panels),\n          idAndItemIndexToPanelIdMap: mapPanelItemsToPanels(panels)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function EuiContextMenu(props) {\n    var _this;\n\n    _classCallCheck(this, EuiContextMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiContextMenu).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasPreviousPanel\", function (panelId) {\n      var previousPanelId = _this.state.idToPreviousPanelIdMap[panelId];\n      return typeof previousPanelId !== 'undefined';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showNextPanel\", function (itemIndex) {\n      if (!itemIndex) {\n        return;\n      }\n\n      var nextPanelId = _this.state.idAndItemIndexToPanelIdMap[_this.state.incomingPanelId][itemIndex];\n\n      if (nextPanelId) {\n        if (_this.state.isUsingKeyboardToNavigate) {\n          _this.setState({\n            focusedItemIndex: 0\n          });\n        }\n\n        _this.showPanel(nextPanelId, 'next');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showPreviousPanel\", function () {\n      // If there's a previous panel, then we can close the current panel to go back to it.\n      if (_this.hasPreviousPanel(_this.state.incomingPanelId)) {\n        var previousPanelId = _this.state.idToPreviousPanelIdMap[_this.state.incomingPanelId]; // Set focus on the item which shows the panel we're leaving.\n\n        var previousPanel = _this.state.idToPanelMap[previousPanelId];\n\n        var _focusedItemIndex = previousPanel.items.findIndex(function (item) {\n          return item.panel === _this.state.incomingPanelId;\n        });\n\n        if (_focusedItemIndex !== -1) {\n          _this.setState({\n            focusedItemIndex: _focusedItemIndex\n          });\n        }\n\n        _this.showPanel(previousPanelId, 'previous');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onIncomingPanelHeightChange\", function (height) {\n      _this.setState(function (_ref) {\n        var prevHeight = _ref.height;\n\n        if (height === prevHeight) {\n          return null;\n        }\n\n        return {\n          height: height\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOutGoingPanelTransitionComplete\", function () {\n      _this.setState({\n        isOutgoingPanelVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onUseKeyboardToNavigate\", function () {\n      if (!_this.state.isUsingKeyboardToNavigate) {\n        _this.setState({\n          isUsingKeyboardToNavigate: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mapIdsToRenderedItems\", function () {\n      var panels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var idToRenderedItemsMap = {}; // Pre-rendering the items lets us check reference equality inside of EuiContextMenuPanel.\n\n      panels.forEach(function (panel) {\n        idToRenderedItemsMap[panel.id] = _this.renderItems(panel.items);\n      });\n      return idToRenderedItemsMap;\n    });\n\n    _this.state = {\n      prevProps: {},\n      idToPanelMap: {},\n      idToPreviousPanelIdMap: {},\n      idAndItemIndexToPanelIdMap: {},\n      idToRenderedItemsMap: _this.mapIdsToRenderedItems(_this.props.panels),\n      height: undefined,\n      outgoingPanelId: undefined,\n      incomingPanelId: props.initialPanelId,\n      transitionDirection: undefined,\n      isOutgoingPanelVisible: false,\n      focusedItemIndex: undefined,\n      isUsingKeyboardToNavigate: false\n    };\n    return _this;\n  }\n\n  _createClass(EuiContextMenu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.panels !== this.props.panels) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          idToRenderedItemsMap: this.mapIdsToRenderedItems(this.props.panels)\n        });\n      }\n    }\n  }, {\n    key: \"showPanel\",\n    value: function showPanel(panelId, direction) {\n      this.setState({\n        outgoingPanelId: this.state.incomingPanelId,\n        incomingPanelId: panelId,\n        transitionDirection: direction,\n        isOutgoingPanelVisible: true\n      });\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this2 = this;\n\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return items.map(function (item, index) {\n        var panel = item.panel,\n            name = item.name,\n            icon = item.icon,\n            onClick = item.onClick,\n            toolTipTitle = item.toolTipTitle,\n            toolTipContent = item.toolTipContent,\n            rest = _objectWithoutProperties(item, [\"panel\", \"name\", \"icon\", \"onClick\", \"toolTipTitle\", \"toolTipContent\"]);\n\n        var onClickHandler = panel ? function (event) {\n          if (onClick && event) {\n            event.persist();\n          } // This component is commonly wrapped in a EuiOutsideClickDetector, which means we'll\n          // need to wait for that logic to complete before re-rendering the DOM via showPanel.\n\n\n          window.requestAnimationFrame(function () {\n            if (onClick) {\n              onClick(event);\n            }\n\n            _this2.showNextPanel(index);\n          });\n        } : onClick;\n        return _react.default.createElement(_context_menu_item.EuiContextMenuItem, _extends({\n          key: name,\n          icon: icon,\n          onClick: onClickHandler,\n          hasPanel: Boolean(panel),\n          toolTipTitle: toolTipTitle,\n          toolTipContent: toolTipContent\n        }, rest), name);\n      });\n    }\n  }, {\n    key: \"renderPanel\",\n    value: function renderPanel(panelId, transitionType) {\n      var _this3 = this;\n\n      var panel = this.state.idToPanelMap[panelId];\n\n      if (!panel) {\n        return;\n      } // As above, we need to wait for EuiOutsideClickDetector to complete its logic before\n      // re-rendering via showPanel.\n\n\n      var onClose;\n\n      if (this.hasPreviousPanel(panelId)) {\n        onClose = function onClose() {\n          return window.requestAnimationFrame(_this3.showPreviousPanel);\n        };\n      }\n\n      return _react.default.createElement(_context_menu_panel.EuiContextMenuPanel, {\n        key: panelId,\n        className: \"euiContextMenu__panel\",\n        onHeightChange: transitionType === 'in' ? this.onIncomingPanelHeightChange : undefined,\n        onTransitionComplete: transitionType === 'out' ? this.onOutGoingPanelTransitionComplete : undefined,\n        title: panel.title,\n        onClose: onClose,\n        transitionType: this.state.isOutgoingPanelVisible ? transitionType : undefined,\n        transitionDirection: this.state.isOutgoingPanelVisible ? this.state.transitionDirection : undefined,\n        hasFocus: transitionType === 'in',\n        items: this.state.idToRenderedItemsMap[panelId],\n        initialFocusedItemIndex: this.state.isUsingKeyboardToNavigate ? this.state.focusedItemIndex : undefined,\n        onUseKeyboardToNavigate: this.onUseKeyboardToNavigate,\n        showNextPanel: this.showNextPanel,\n        showPreviousPanel: this.showPreviousPanel\n      }, panel.content);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          panels = _this$props.panels,\n          className = _this$props.className,\n          initialPanelId = _this$props.initialPanelId,\n          rest = _objectWithoutProperties(_this$props, [\"panels\", \"className\", \"initialPanelId\"]);\n\n      var incomingPanel = this.renderPanel(this.state.incomingPanelId, 'in');\n      var outgoingPanel;\n\n      if (this.state.isOutgoingPanelVisible) {\n        outgoingPanel = this.renderPanel(this.state.outgoingPanelId, 'out');\n      }\n\n      var width = this.state.idToPanelMap[this.state.incomingPanelId] && this.state.idToPanelMap[this.state.incomingPanelId].width ? this.state.idToPanelMap[this.state.incomingPanelId].width : undefined;\n      var classes = (0, _classnames.default)('euiContextMenu', className);\n      return _react.default.createElement(\"div\", _extends({\n        className: classes,\n        style: {\n          height: this.state.height,\n          width: width\n        }\n      }, rest), outgoingPanel, incomingPanel);\n    }\n  }]);\n\n  return EuiContextMenu;\n}(_react.Component);\n\nexports.EuiContextMenu = EuiContextMenu;\n\n_defineProperty(EuiContextMenu, \"defaultProps\", {\n  panels: []\n});\n\nEuiContextMenu.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  panels: _propTypes.default.arrayOf(_propTypes.default.shape({\n    id: _propTypes.default.oneOfType([_propTypes.default.string.isRequired, _propTypes.default.number.isRequired]).isRequired,\n    title: _propTypes.default.string,\n    items: _propTypes.default.arrayOf(_propTypes.default.shape({\n      name: _propTypes.default.string.isRequired,\n      panel: _propTypes.default.oneOfType([_propTypes.default.string.isRequired, _propTypes.default.number.isRequired])\n    }).isRequired),\n    content: _propTypes.default.node,\n    width: _propTypes.default.number\n  }).isRequired),\n  initialPanelId: _propTypes.default.oneOfType([_propTypes.default.string.isRequired, _propTypes.default.number.isRequired])\n};\nEuiContextMenu.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"nextProps\",\n      \"type\": null\n    }, {\n      \"name\": \"prevState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"hasPreviousPanel\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"panelId\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"showPanel\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"panelId\",\n      \"type\": null\n    }, {\n      \"name\": \"direction\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"showNextPanel\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"itemIndex\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"showPreviousPanel\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onIncomingPanelHeightChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"height\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onOutGoingPanelTransitionComplete\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onUseKeyboardToNavigate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"mapIdsToRenderedItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"panels\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"items\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderPanel\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"panelId\",\n      \"type\": null\n    }, {\n      \"name\": \"transitionType\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiContextMenu\",\n  \"props\": {\n    \"panels\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            },\n            \"title\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"items\": {\n              \"name\": \"arrayOf\",\n              \"value\": {\n                \"name\": \"shape\",\n                \"value\": {\n                  \"name\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  },\n                  \"panel\": {\n                    \"name\": \"union\",\n                    \"value\": [{\n                      \"name\": \"string\"\n                    }, {\n                      \"name\": \"number\"\n                    }],\n                    \"required\": false\n                  }\n                }\n              },\n              \"required\": false\n            },\n            \"content\": {\n              \"name\": \"node\",\n              \"required\": false\n            },\n            \"width\": {\n              \"name\": \"number\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"initialPanelId\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/context_menu/context_menu.tsx"],"names":["mapIdsToPanels","panels","map","forEach","panel","id","mapIdsToPreviousPanels","idToPreviousPanelIdMap","Array","isArray","items","item","isCloseable","undefined","mapPanelItemsToPanels","idAndItemIndexToPanelIdMap","index","EuiContextMenu","nextProps","prevState","prevProps","idToPanelMap","props","panelId","previousPanelId","state","itemIndex","nextPanelId","incomingPanelId","isUsingKeyboardToNavigate","setState","focusedItemIndex","showPanel","hasPreviousPanel","previousPanel","findIndex","height","prevHeight","isOutgoingPanelVisible","idToRenderedItemsMap","renderItems","mapIdsToRenderedItems","outgoingPanelId","initialPanelId","transitionDirection","direction","name","icon","onClick","toolTipTitle","toolTipContent","rest","onClickHandler","event","persist","window","requestAnimationFrame","showNextPanel","Boolean","transitionType","onClose","showPreviousPanel","onIncomingPanelHeightChange","onOutGoingPanelTransitionComplete","title","onUseKeyboardToNavigate","content","className","incomingPanel","renderPanel","outgoingPanel","width","classes","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AAGA;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAASA,cAAT,CAAwBC,MAAxB,EAAiE;AAC/D,MAAMC,GAAoD,GAAG,EAA7D;AAEAD,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBF,IAAAA,GAAG,CAACE,KAAK,CAACC,EAAP,CAAH,GAAgBD,KAAhB;AACD,GAFD;AAIA,SAAOF,GAAP;AACD;;AAED,SAASI,sBAAT,CAAgCL,MAAhC,EAAyE;AACvE,MAAMM,sBAAkE,GAAG,EAA3E;AAEAN,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtB,QAAII,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACM,KAApB,CAAJ,EAAgC;AAC9BN,MAAAA,KAAK,CAACM,KAAN,CAAYP,OAAZ,CAAoB,UAAAQ,IAAI,EAAI;AAC1B,YAAMC,WAAW,GAAGD,IAAI,CAACP,KAAL,KAAeS,SAAnC;;AACA,YAAID,WAAJ,EAAiB;AACfL,UAAAA,sBAAsB,CAACI,IAAI,CAACP,KAAN,CAAtB,GAAsCA,KAAK,CAACC,EAA5C;AACD;AACF,OALD;AAMD;AACF,GATD;AAWA,SAAOE,sBAAP;AACD;;AAED,SAASO,qBAAT,CAA+Bb,MAA/B,EAAwE;AACtE,MAAMc,0BAEL,GAAG,EAFJ;AAIAd,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBW,IAAAA,0BAA0B,CAACX,KAAK,CAACC,EAAP,CAA1B,GAAuC,EAAvC;;AAEA,QAAID,KAAK,CAACM,KAAV,EAAiB;AACfN,MAAAA,KAAK,CAACM,KAAN,CAAYP,OAAZ,CAAoB,UAACQ,IAAD,EAAOK,KAAP,EAAiB;AACnC,YAAIL,IAAI,CAACP,KAAT,EAAgB;AACdW,UAAAA,0BAA0B,CAACX,KAAK,CAACC,EAAP,CAA1B,CAAqCW,KAArC,IAA8CL,IAAI,CAACP,KAAnD;AACD;AACF,OAJD;AAKD;AACF,GAVD;AAYA,SAAOW,0BAAP;AACD;;IAsBYE,c;;;;;;;6CAMTC,S,EACAC,S,EACuB;AAAA,UACflB,MADe,GACJiB,SADI,CACfjB,MADe;;AAGvB,UAAIA,MAAM,IAAIkB,SAAS,CAACC,SAAV,CAAoBnB,MAApB,KAA+BA,MAA7C,EAAqD;AACnD,eAAO;AACLmB,UAAAA,SAAS,EAAE;AAAEnB,YAAAA,MAAM,EAANA;AAAF,WADN;AAELoB,UAAAA,YAAY,EAAErB,cAAc,CAACC,MAAD,CAFvB;AAGLM,UAAAA,sBAAsB,EAAED,sBAAsB,CAACL,MAAD,CAHzC;AAILc,UAAAA,0BAA0B,EAAED,qBAAqB,CAACb,MAAD;AAJ5C,SAAP;AAMD;;AAED,aAAO,IAAP;AACD;;;AAED,0BAAYqB,KAAZ,EAAwC;AAAA;;AAAA;;AACtC,wFAAMA,KAAN;;AADsC,+FA6BrB,UAACC,OAAD,EAAoC;AACrD,UAAMC,eAAe,GAAG,MAAKC,KAAL,CAAWlB,sBAAX,CAAkCgB,OAAlC,CAAxB;AACA,aAAO,OAAOC,eAAP,KAA2B,WAAlC;AACD,KAhCuC;;AAAA,4FA8CxB,UAACE,SAAD,EAAwB;AACtC,UAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AAED,UAAMC,WAAW,GAAG,MAAKF,KAAL,CAAWV,0BAAX,CAClB,MAAKU,KAAL,CAAWG,eADO,EAElBF,SAFkB,CAApB;;AAIA,UAAIC,WAAJ,EAAiB;AACf,YAAI,MAAKF,KAAL,CAAWI,yBAAf,EAA0C;AACxC,gBAAKC,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAE;AADN,WAAd;AAGD;;AAED,cAAKC,SAAL,CAAeL,WAAf,EAA4B,MAA5B;AACD;AACF,KAhEuC;;AAAA,gGAkEpB,YAAM;AACxB;AACA,UAAI,MAAKM,gBAAL,CAAsB,MAAKR,KAAL,CAAWG,eAAjC,CAAJ,EAAwD;AACtD,YAAMJ,eAAe,GAAG,MAAKC,KAAL,CAAWlB,sBAAX,CACtB,MAAKkB,KAAL,CAAWG,eADW,CAAxB,CADsD,CAKtD;;AACA,YAAMM,aAAa,GAAG,MAAKT,KAAL,CAAWJ,YAAX,CAAwBG,eAAxB,CAAtB;;AACA,YAAMO,iBAAgB,GAAGG,aAAa,CAACxB,KAAd,CAAqByB,SAArB,CACvB,UAAAxB,IAAI;AAAA,iBAAIA,IAAI,CAACP,KAAL,KAAe,MAAKqB,KAAL,CAAWG,eAA9B;AAAA,SADmB,CAAzB;;AAIA,YAAIG,iBAAgB,KAAK,CAAC,CAA1B,EAA6B;AAC3B,gBAAKD,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAhBA;AADY,WAAd;AAGD;;AAED,cAAKC,SAAL,CAAeR,eAAf,EAAgC,UAAhC;AACD;AACF,KAvFuC;;AAAA,0GAyFV,UAACY,MAAD,EAAoB;AAChD,YAAKN,QAAL,CAAc,gBAA4B;AAAA,YAAjBO,UAAiB,QAAzBD,MAAyB;;AACxC,YAAIA,MAAM,KAAKC,UAAf,EAA2B;AACzB,iBAAO,IAAP;AACD;;AAED,eAAO;AAAED,UAAAA,MAAM,EAANA;AAAF,SAAP;AACD,OAND;AAOD,KAjGuC;;AAAA,gHAmGJ,YAAM;AACxC,YAAKN,QAAL,CAAc;AACZQ,QAAAA,sBAAsB,EAAE;AADZ,OAAd;AAGD,KAvGuC;;AAAA,sGAyGd,YAAM;AAC9B,UAAI,CAAC,MAAKb,KAAL,CAAWI,yBAAhB,EAA2C;AACzC,cAAKC,QAAL,CAAc;AACZD,UAAAA,yBAAyB,EAAE;AADf,SAAd;AAGD;AACF,KA/GuC;;AAAA,oGAiHhB,YAAkD;AAAA,UAAjD5B,MAAiD,uEAAP,EAAO;AACxE,UAAMsC,oBAAsD,GAAG,EAA/D,CADwE,CAGxE;;AACAtC,MAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBmC,QAAAA,oBAAoB,CAACnC,KAAK,CAACC,EAAP,CAApB,GAAiC,MAAKmC,WAAL,CAAiBpC,KAAK,CAACM,KAAvB,CAAjC;AACD,OAFD;AAIA,aAAO6B,oBAAP;AACD,KA1HuC;;AAGtC,UAAKd,KAAL,GAAa;AACXL,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXd,MAAAA,sBAAsB,EAAE,EAHb;AAIXQ,MAAAA,0BAA0B,EAAE,EAJjB;AAKXwB,MAAAA,oBAAoB,EAAE,MAAKE,qBAAL,CAA2B,MAAKnB,KAAL,CAAWrB,MAAtC,CALX;AAOXmC,MAAAA,MAAM,EAAEvB,SAPG;AAQX6B,MAAAA,eAAe,EAAE7B,SARN;AASXe,MAAAA,eAAe,EAAEN,KAAK,CAACqB,cATZ;AAUXC,MAAAA,mBAAmB,EAAE/B,SAVV;AAWXyB,MAAAA,sBAAsB,EAAE,KAXb;AAYXP,MAAAA,gBAAgB,EAAElB,SAZP;AAaXgB,MAAAA,yBAAyB,EAAE;AAbhB,KAAb;AAHsC;AAkBvC;;;;uCAEkBT,S,EAAgC;AACjD,UAAIA,SAAS,CAACnB,MAAV,KAAqB,KAAKqB,KAAL,CAAWrB,MAApC,EAA4C;AAC1C;AACA,aAAK6B,QAAL,CAAc;AACZS,UAAAA,oBAAoB,EAAE,KAAKE,qBAAL,CAA2B,KAAKnB,KAAL,CAAWrB,MAAtC;AADV,SAAd;AAGD;AACF;;;8BAQCsB,O,EACAsB,S,EACA;AACA,WAAKf,QAAL,CAAc;AACZY,QAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWG,eADhB;AAEZA,QAAAA,eAAe,EAAEL,OAFL;AAGZqB,QAAAA,mBAAmB,EAAEC,SAHT;AAIZP,QAAAA,sBAAsB,EAAE;AAJZ,OAAd;AAMD;;;kCAgF4D;AAAA;;AAAA,UAAjD5B,KAAiD,uEAAJ,EAAI;AAC3D,aAAOA,KAAK,CAACR,GAAN,CAAU,UAACS,IAAD,EAAOK,KAAP,EAAiB;AAAA,YAE9BZ,KAF8B,GAS5BO,IAT4B,CAE9BP,KAF8B;AAAA,YAG9B0C,IAH8B,GAS5BnC,IAT4B,CAG9BmC,IAH8B;AAAA,YAI9BC,IAJ8B,GAS5BpC,IAT4B,CAI9BoC,IAJ8B;AAAA,YAK9BC,OAL8B,GAS5BrC,IAT4B,CAK9BqC,OAL8B;AAAA,YAM9BC,YAN8B,GAS5BtC,IAT4B,CAM9BsC,YAN8B;AAAA,YAO9BC,cAP8B,GAS5BvC,IAT4B,CAO9BuC,cAP8B;AAAA,YAQ3BC,IAR2B,4BAS5BxC,IAT4B;;AAWhC,YAAMyC,cAAc,GAAGhD,KAAK,GACxB,UAACiD,KAAD,EAA6B;AAC3B,cAAIL,OAAO,IAAIK,KAAf,EAAsB;AACpBA,YAAAA,KAAK,CAACC,OAAN;AACD,WAH0B,CAI3B;AACA;;;AACAC,UAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAM;AACjC,gBAAIR,OAAJ,EAAa;AACXA,cAAAA,OAAO,CAACK,KAAD,CAAP;AACD;;AACD,YAAA,MAAI,CAACI,aAAL,CAAmBzC,KAAnB;AACD,WALD;AAMD,SAbuB,GAcxBgC,OAdJ;AAgBA,eACE,6BAAC,qCAAD;AACE,UAAA,GAAG,EAAEF,IADP;AAEE,UAAA,IAAI,EAAEC,IAFR;AAGE,UAAA,OAAO,EAAEK,cAHX;AAIE,UAAA,QAAQ,EAAEM,OAAO,CAACtD,KAAD,CAJnB;AAKE,UAAA,YAAY,EAAE6C,YALhB;AAME,UAAA,cAAc,EAAEC;AANlB,WAOMC,IAPN,GAQGL,IARH,CADF;AAYD,OAvCM,CAAP;AAwCD;;;gCAGCvB,O,EACAoC,c,EACA;AAAA;;AACA,UAAMvD,KAAK,GAAG,KAAKqB,KAAL,CAAWJ,YAAX,CAAwBE,OAAxB,CAAd;;AAEA,UAAI,CAACnB,KAAL,EAAY;AACV;AACD,OALD,CAOA;AACA;;;AACA,UAAIwD,OAAJ;;AACA,UAAI,KAAK3B,gBAAL,CAAsBV,OAAtB,CAAJ,EAAoC;AAClCqC,QAAAA,OAAO,GAAG;AAAA,iBAAML,MAAM,CAACC,qBAAP,CAA6B,MAAI,CAACK,iBAAlC,CAAN;AAAA,SAAV;AACD;;AAED,aACE,6BAAC,uCAAD;AACE,QAAA,GAAG,EAAEtC,OADP;AAEE,QAAA,SAAS,EAAC,uBAFZ;AAGE,QAAA,cAAc,EACZoC,cAAc,KAAK,IAAnB,GAA0B,KAAKG,2BAA/B,GAA6DjD,SAJjE;AAME,QAAA,oBAAoB,EAClB8C,cAAc,KAAK,KAAnB,GACI,KAAKI,iCADT,GAEIlD,SATR;AAWE,QAAA,KAAK,EAAET,KAAK,CAAC4D,KAXf;AAYE,QAAA,OAAO,EAAEJ,OAZX;AAaE,QAAA,cAAc,EACZ,KAAKnC,KAAL,CAAWa,sBAAX,GAAoCqB,cAApC,GAAqD9C,SAdzD;AAgBE,QAAA,mBAAmB,EACjB,KAAKY,KAAL,CAAWa,sBAAX,GACI,KAAKb,KAAL,CAAWmB,mBADf,GAEI/B,SAnBR;AAqBE,QAAA,QAAQ,EAAE8C,cAAc,KAAK,IArB/B;AAsBE,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWc,oBAAX,CAAgChB,OAAhC,CAtBT;AAuBE,QAAA,uBAAuB,EACrB,KAAKE,KAAL,CAAWI,yBAAX,GACI,KAAKJ,KAAL,CAAWM,gBADf,GAEIlB,SA1BR;AA4BE,QAAA,uBAAuB,EAAE,KAAKoD,uBA5BhC;AA6BE,QAAA,aAAa,EAAE,KAAKR,aA7BtB;AA8BE,QAAA,iBAAiB,EAAE,KAAKI;AA9B1B,SA+BGzD,KAAK,CAAC8D,OA/BT,CADF;AAmCD;;;6BAEQ;AAAA,wBACgD,KAAK5C,KADrD;AAAA,UACCrB,MADD,eACCA,MADD;AAAA,UACSkE,SADT,eACSA,SADT;AAAA,UACoBxB,cADpB,eACoBA,cADpB;AAAA,UACuCQ,IADvC;;AAGP,UAAMiB,aAAa,GAAG,KAAKC,WAAL,CAAiB,KAAK5C,KAAL,CAAWG,eAA5B,EAA8C,IAA9C,CAAtB;AACA,UAAI0C,aAAJ;;AAEA,UAAI,KAAK7C,KAAL,CAAWa,sBAAf,EAAuC;AACrCgC,QAAAA,aAAa,GAAG,KAAKD,WAAL,CAAiB,KAAK5C,KAAL,CAAWiB,eAA5B,EAA8C,KAA9C,CAAhB;AACD;;AAED,UAAM6B,KAAK,GACT,KAAK9C,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWG,eAAnC,KACA,KAAKH,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWG,eAAnC,EAAqD2C,KADrD,GAEI,KAAK9C,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWG,eAAnC,EAAqD2C,KAFzD,GAGI1D,SAJN;AAMA,UAAM2D,OAAO,GAAG,yBAAW,gBAAX,EAA6BL,SAA7B,CAAhB;AAEA,aACE;AACE,QAAA,SAAS,EAAEK,OADb;AAEE,QAAA,KAAK,EAAE;AAAEpC,UAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWW,MAArB;AAA6BmC,UAAAA,KAAK,EAAEA;AAApC;AAFT,SAGMpB,IAHN,GAIGmB,aAJH,EAKGF,aALH,CADF;AASD;;;;EA/QiCK,gB;;;;gBAAvBxD,c,kBACyC;AAClDhB,EAAAA,MAAM,EAAE;AAD0C,C","sourcesContent":["import \"core-js/modules/web.dom.iterable\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { EuiContextMenuPanel } from './context_menu_panel';\nimport { EuiContextMenuItem } from './context_menu_item';\n\nfunction mapIdsToPanels(panels) {\n  var map = {};\n  panels.forEach(function (panel) {\n    map[panel.id] = panel;\n  });\n  return map;\n}\n\nfunction mapIdsToPreviousPanels(panels) {\n  var idToPreviousPanelIdMap = {};\n  panels.forEach(function (panel) {\n    if (Array.isArray(panel.items)) {\n      panel.items.forEach(function (item) {\n        var isCloseable = item.panel !== undefined;\n\n        if (isCloseable) {\n          idToPreviousPanelIdMap[item.panel] = panel.id;\n        }\n      });\n    }\n  });\n  return idToPreviousPanelIdMap;\n}\n\nfunction mapPanelItemsToPanels(panels) {\n  var idAndItemIndexToPanelIdMap = {};\n  panels.forEach(function (panel) {\n    idAndItemIndexToPanelIdMap[panel.id] = {};\n\n    if (panel.items) {\n      panel.items.forEach(function (item, index) {\n        if (item.panel) {\n          idAndItemIndexToPanelIdMap[panel.id][index] = item.panel;\n        }\n      });\n    }\n  });\n  return idAndItemIndexToPanelIdMap;\n}\n\nexport class EuiContextMenu extends Component {\n  static defaultProps = {\n    panels: []\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      panels\n    } = nextProps;\n\n    if (panels && prevState.prevProps.panels !== panels) {\n      return {\n        prevProps: {\n          panels\n        },\n        idToPanelMap: mapIdsToPanels(panels),\n        idToPreviousPanelIdMap: mapIdsToPreviousPanels(panels),\n        idAndItemIndexToPanelIdMap: mapPanelItemsToPanels(panels)\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevProps: {},\n      idToPanelMap: {},\n      idToPreviousPanelIdMap: {},\n      idAndItemIndexToPanelIdMap: {},\n      idToRenderedItemsMap: this.mapIdsToRenderedItems(this.props.panels),\n      height: undefined,\n      outgoingPanelId: undefined,\n      incomingPanelId: props.initialPanelId,\n      transitionDirection: undefined,\n      isOutgoingPanelVisible: false,\n      focusedItemIndex: undefined,\n      isUsingKeyboardToNavigate: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.panels !== this.props.panels) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        idToRenderedItemsMap: this.mapIdsToRenderedItems(this.props.panels)\n      });\n    }\n  }\n\n  hasPreviousPanel = panelId => {\n    const previousPanelId = this.state.idToPreviousPanelIdMap[panelId];\n    return typeof previousPanelId !== 'undefined';\n  };\n\n  showPanel(panelId, direction) {\n    this.setState({\n      outgoingPanelId: this.state.incomingPanelId,\n      incomingPanelId: panelId,\n      transitionDirection: direction,\n      isOutgoingPanelVisible: true\n    });\n  }\n\n  showNextPanel = itemIndex => {\n    if (!itemIndex) {\n      return;\n    }\n\n    const nextPanelId = this.state.idAndItemIndexToPanelIdMap[this.state.incomingPanelId][itemIndex];\n\n    if (nextPanelId) {\n      if (this.state.isUsingKeyboardToNavigate) {\n        this.setState({\n          focusedItemIndex: 0\n        });\n      }\n\n      this.showPanel(nextPanelId, 'next');\n    }\n  };\n  showPreviousPanel = () => {\n    // If there's a previous panel, then we can close the current panel to go back to it.\n    if (this.hasPreviousPanel(this.state.incomingPanelId)) {\n      const previousPanelId = this.state.idToPreviousPanelIdMap[this.state.incomingPanelId]; // Set focus on the item which shows the panel we're leaving.\n\n      const previousPanel = this.state.idToPanelMap[previousPanelId];\n      const focusedItemIndex = previousPanel.items.findIndex(item => item.panel === this.state.incomingPanelId);\n\n      if (focusedItemIndex !== -1) {\n        this.setState({\n          focusedItemIndex\n        });\n      }\n\n      this.showPanel(previousPanelId, 'previous');\n    }\n  };\n  onIncomingPanelHeightChange = height => {\n    this.setState(({\n      height: prevHeight\n    }) => {\n      if (height === prevHeight) {\n        return null;\n      }\n\n      return {\n        height\n      };\n    });\n  };\n  onOutGoingPanelTransitionComplete = () => {\n    this.setState({\n      isOutgoingPanelVisible: false\n    });\n  };\n  onUseKeyboardToNavigate = () => {\n    if (!this.state.isUsingKeyboardToNavigate) {\n      this.setState({\n        isUsingKeyboardToNavigate: true\n      });\n    }\n  };\n  mapIdsToRenderedItems = (panels = []) => {\n    const idToRenderedItemsMap = {}; // Pre-rendering the items lets us check reference equality inside of EuiContextMenuPanel.\n\n    panels.forEach(panel => {\n      idToRenderedItemsMap[panel.id] = this.renderItems(panel.items);\n    });\n    return idToRenderedItemsMap;\n  };\n\n  renderItems(items = []) {\n    return items.map((item, index) => {\n      const {\n        panel,\n        name,\n        icon,\n        onClick,\n        toolTipTitle,\n        toolTipContent,\n        ...rest\n      } = item;\n      const onClickHandler = panel ? event => {\n        if (onClick && event) {\n          event.persist();\n        } // This component is commonly wrapped in a EuiOutsideClickDetector, which means we'll\n        // need to wait for that logic to complete before re-rendering the DOM via showPanel.\n\n\n        window.requestAnimationFrame(() => {\n          if (onClick) {\n            onClick(event);\n          }\n\n          this.showNextPanel(index);\n        });\n      } : onClick;\n      return <EuiContextMenuItem key={name} icon={icon} onClick={onClickHandler} hasPanel={Boolean(panel)} toolTipTitle={toolTipTitle} toolTipContent={toolTipContent} {...rest}>\n          {name}\n        </EuiContextMenuItem>;\n    });\n  }\n\n  renderPanel(panelId, transitionType) {\n    const panel = this.state.idToPanelMap[panelId];\n\n    if (!panel) {\n      return;\n    } // As above, we need to wait for EuiOutsideClickDetector to complete its logic before\n    // re-rendering via showPanel.\n\n\n    let onClose;\n\n    if (this.hasPreviousPanel(panelId)) {\n      onClose = () => window.requestAnimationFrame(this.showPreviousPanel);\n    }\n\n    return <EuiContextMenuPanel key={panelId} className=\"euiContextMenu__panel\" onHeightChange={transitionType === 'in' ? this.onIncomingPanelHeightChange : undefined} onTransitionComplete={transitionType === 'out' ? this.onOutGoingPanelTransitionComplete : undefined} title={panel.title} onClose={onClose} transitionType={this.state.isOutgoingPanelVisible ? transitionType : undefined} transitionDirection={this.state.isOutgoingPanelVisible ? this.state.transitionDirection : undefined} hasFocus={transitionType === 'in'} items={this.state.idToRenderedItemsMap[panelId]} initialFocusedItemIndex={this.state.isUsingKeyboardToNavigate ? this.state.focusedItemIndex : undefined} onUseKeyboardToNavigate={this.onUseKeyboardToNavigate} showNextPanel={this.showNextPanel} showPreviousPanel={this.showPreviousPanel}>\n        {panel.content}\n      </EuiContextMenuPanel>;\n  }\n\n  render() {\n    const {\n      panels,\n      className,\n      initialPanelId,\n      ...rest\n    } = this.props;\n    const incomingPanel = this.renderPanel(this.state.incomingPanelId, 'in');\n    let outgoingPanel;\n\n    if (this.state.isOutgoingPanelVisible) {\n      outgoingPanel = this.renderPanel(this.state.outgoingPanelId, 'out');\n    }\n\n    const width = this.state.idToPanelMap[this.state.incomingPanelId] && this.state.idToPanelMap[this.state.incomingPanelId].width ? this.state.idToPanelMap[this.state.incomingPanelId].width : undefined;\n    const classes = classNames('euiContextMenu', className);\n    return <div className={classes} style={{\n      height: this.state.height,\n      width: width\n    }} {...rest}>\n        {outgoingPanel}\n        {incomingPanel}\n      </div>;\n  }\n\n}\nEuiContextMenu.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  panels: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired,\n    title: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      panel: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n    }).isRequired),\n    content: PropTypes.node,\n    width: PropTypes.number\n  }).isRequired),\n  initialPanelId: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n};"]}]}