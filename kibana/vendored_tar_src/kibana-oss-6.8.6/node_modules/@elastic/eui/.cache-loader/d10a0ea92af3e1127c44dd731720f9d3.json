{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/code/_code_block.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/code/_code_block.js","mtime":1566421648722},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiCodeBlockImpl = exports.PADDING_SIZES = exports.FONT_SIZES = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _highlight = _interopRequireDefault(require(\"highlight.js\"));\n\nvar _copy = require(\"../copy\");\n\nvar _button = require(\"../button\");\n\nvar _overlay_mask = require(\"../overlay_mask\");\n\nvar _focus_trap = require(\"../focus_trap\");\n\nvar _services = require(\"../../services\");\n\nvar _i18n = require(\"../i18n\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar fontSizeToClassNameMap = {\n  s: 'euiCodeBlock--fontSmall',\n  m: 'euiCodeBlock--fontMedium',\n  l: 'euiCodeBlock--fontLarge'\n};\nvar FONT_SIZES = Object.keys(fontSizeToClassNameMap);\nexports.FONT_SIZES = FONT_SIZES;\nvar paddingSizeToClassNameMap = {\n  none: '',\n  s: 'euiCodeBlock--paddingSmall',\n  m: 'euiCodeBlock--paddingMedium',\n  l: 'euiCodeBlock--paddingLarge'\n};\nvar PADDING_SIZES = Object.keys(paddingSizeToClassNameMap);\n/**\n * This is the base component extended by EuiCode and EuiCodeBlock. These components\n * share the same propTypes definition with EuiCodeBlockImpl.\n */\n\nexports.PADDING_SIZES = PADDING_SIZES;\n\nvar EuiCodeBlockImpl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiCodeBlockImpl, _Component);\n\n  function EuiCodeBlockImpl(props) {\n    var _this;\n\n    _classCallCheck(this, EuiCodeBlockImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiCodeBlockImpl).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"highlight\", function () {\n      if (_this.props.language) {\n        _highlight.default.highlightBlock(_this.code);\n\n        if (_this.codeFullScreen) {\n          _highlight.default.highlightBlock(_this.codeFullScreen);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      if (event.keyCode === _services.keyCodes.ESCAPE) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        _this.closeFullScreen();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleFullScreen\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isFullScreen: !prevState.isFullScreen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeFullScreen\", function () {\n      _this.setState({\n        isFullScreen: false\n      });\n    });\n\n    _this.state = {\n      isFullScreen: false\n    };\n    return _this;\n  }\n\n  _createClass(EuiCodeBlockImpl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highlight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.highlight();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          inline = _this$props.inline,\n          children = _this$props.children,\n          className = _this$props.className,\n          fontSize = _this$props.fontSize,\n          language = _this$props.language,\n          overflowHeight = _this$props.overflowHeight,\n          paddingSize = _this$props.paddingSize,\n          transparentBackground = _this$props.transparentBackground,\n          isCopyable = _this$props.isCopyable,\n          otherProps = _objectWithoutProperties(_this$props, [\"inline\", \"children\", \"className\", \"fontSize\", \"language\", \"overflowHeight\", \"paddingSize\", \"transparentBackground\", \"isCopyable\"]);\n\n      var classes = (0, _classnames.default)('euiCodeBlock', fontSizeToClassNameMap[fontSize], paddingSizeToClassNameMap[paddingSize], {\n        'euiCodeBlock--transparentBackground': transparentBackground,\n        'euiCodeBlock--inline': inline,\n        'euiCodeBlock-isCopyable': isCopyable\n      }, className);\n      var codeClasses = (0, _classnames.default)('euiCodeBlock__code', language);\n      var optionalStyles = {};\n\n      if (overflowHeight) {\n        optionalStyles.height = overflowHeight;\n      }\n\n      var codeSnippet = _react.default.createElement(\"code\", _extends({\n        ref: function ref(_ref) {\n          _this2.code = _ref;\n        },\n        className: codeClasses\n      }, otherProps), children);\n\n      var wrapperProps = {\n        className: classes,\n        style: optionalStyles\n      };\n\n      if (inline) {\n        return _react.default.createElement(\"span\", wrapperProps, codeSnippet);\n      }\n\n      var copyButton;\n\n      if (isCopyable) {\n        copyButton = _react.default.createElement(\"div\", {\n          className: \"euiCodeBlock__copyButton\"\n        }, _react.default.createElement(_i18n.EuiI18n, {\n          token: \"euiCodeBlock.copyButton\",\n          default: \"Copy\"\n        }, function (copyButton) {\n          return _react.default.createElement(_copy.EuiCopy, {\n            textToCopy: children\n          }, function (copy) {\n            return _react.default.createElement(_button.EuiButtonIcon, {\n              size: \"s\",\n              onClick: copy,\n              iconType: \"copy\",\n              color: \"text\",\n              \"aria-label\": copyButton\n            });\n          });\n        }));\n      }\n\n      var fullScreenButton;\n\n      if (!inline && overflowHeight) {\n        fullScreenButton = _react.default.createElement(_i18n.EuiI18n, {\n          tokens: ['euiCodeBlock.fullscreenCollapse', 'euiCodeBlock.fullscreenExpand'],\n          defaults: ['Collapse', 'Expand']\n        }, function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              fullscreenCollapse = _ref3[0],\n              fullscreenExpand = _ref3[1];\n\n          return _react.default.createElement(_button.EuiButtonIcon, {\n            className: \"euiCodeBlock__fullScreenButton\",\n            size: \"s\",\n            onClick: _this2.toggleFullScreen,\n            iconType: _this2.state.isFullScreen ? 'cross' : 'fullScreen',\n            color: \"text\",\n            \"aria-label\": _this2.state.isFullScreen ? fullscreenCollapse : fullscreenExpand\n          });\n        });\n      }\n\n      var codeBlockControls;\n\n      if (copyButton || fullScreenButton) {\n        codeBlockControls = _react.default.createElement(\"div\", {\n          className: \"euiCodeBlock__controls\"\n        }, fullScreenButton, copyButton);\n      }\n\n      var fullScreenDisplay;\n\n      if (this.state.isFullScreen) {\n        {\n          /*\n          Force fullscreen to use large font and padding.\n          */\n        }\n        var fullScreenClasses = (0, _classnames.default)('euiCodeBlock', fontSizeToClassNameMap[fontSize], 'euiCodeBlock-paddingLarge', 'euiCodeBlock-isFullScreen', className);\n        fullScreenDisplay = _react.default.createElement(_overlay_mask.EuiOverlayMask, null, _react.default.createElement(_focus_trap.EuiFocusTrap, {\n          clickOutsideDisables: true\n        }, _react.default.createElement(\"div\", {\n          className: fullScreenClasses\n        }, _react.default.createElement(\"pre\", {\n          className: \"euiCodeBlock__pre\"\n        }, _react.default.createElement(\"code\", {\n          ref: function ref(_ref4) {\n            _this2.codeFullScreen = _ref4;\n          },\n          className: codeClasses,\n          tabIndex: 0,\n          onKeyDown: this.onKeyDown\n        }, children)), codeBlockControls)));\n      }\n\n      return _react.default.createElement(\"div\", wrapperProps, _react.default.createElement(\"pre\", {\n        className: \"euiCodeBlock__pre\"\n      }, codeSnippet), codeBlockControls, fullScreenDisplay);\n    }\n  }]);\n\n  return EuiCodeBlockImpl;\n}(_react.Component);\n\nexports.EuiCodeBlockImpl = EuiCodeBlockImpl;\nEuiCodeBlockImpl.propTypes = {\n  children: _propTypes.default.node,\n  className: _propTypes.default.string,\n  paddingSize: _propTypes.default.oneOf(PADDING_SIZES),\n\n  /**\n   * Sets the syntax highlighting for a specific language\n   */\n  language: _propTypes.default.string,\n  overflowHeight: _propTypes.default.number,\n  fontSize: _propTypes.default.oneOf(FONT_SIZES),\n  transparentBackground: _propTypes.default.bool,\n\n  /**\n   * Displays the passed code in an inline format. Also removes any margins set.\n   */\n  inline: _propTypes.default.bool,\n\n  /**\n   * Displays an icon button to copy the code snippet to the clipboard.\n   */\n  isCopyable: _propTypes.default.bool\n};\nEuiCodeBlockImpl.defaultProps = {\n  transparentBackground: false,\n  paddingSize: 'l',\n  fontSize: 's',\n  isCopyable: false\n};\nEuiCodeBlockImpl.__docgenInfo = {\n  \"description\": \"This is the base component extended by EuiCode and EuiCodeBlock. These components\\nshare the same propTypes definition with EuiCodeBlockImpl.\",\n  \"methods\": [{\n    \"name\": \"highlight\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiCodeBlockImpl\",\n  \"props\": {\n    \"transparentBackground\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"paddingSize\": {\n      \"defaultValue\": {\n        \"value\": \"'l'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fontSize\": {\n      \"defaultValue\": {\n        \"value\": \"'s'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isCopyable\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Displays an icon button to copy the code snippet to the clipboard.\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"language\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Sets the syntax highlighting for a specific language\"\n    },\n    \"overflowHeight\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"inline\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Displays the passed code in an inline format. Also removes any margins set.\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/code/_code_block.js"],"names":["fontSizeToClassNameMap","s","m","l","FONT_SIZES","Object","keys","paddingSizeToClassNameMap","none","PADDING_SIZES","EuiCodeBlockImpl","props","language","hljs","highlightBlock","code","codeFullScreen","event","keyCode","keyCodes","ESCAPE","preventDefault","stopPropagation","closeFullScreen","setState","prevState","isFullScreen","state","highlight","inline","children","className","fontSize","overflowHeight","paddingSize","transparentBackground","isCopyable","otherProps","classes","codeClasses","optionalStyles","height","codeSnippet","ref","wrapperProps","style","copyButton","copy","fullScreenButton","fullscreenCollapse","fullscreenExpand","toggleFullScreen","codeBlockControls","fullScreenDisplay","fullScreenClasses","onKeyDown","Component","propTypes","PropTypes","node","string","oneOf","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport hljs from 'highlight.js';\n\nimport { EuiCopy } from '../copy';\n\nimport { EuiButtonIcon } from '../button';\n\nimport { EuiOverlayMask } from '../overlay_mask';\n\nimport { EuiFocusTrap } from '../focus_trap';\n\nimport { keyCodes } from '../../services';\nimport { EuiI18n } from '../i18n';\n\nconst fontSizeToClassNameMap = {\n  s: 'euiCodeBlock--fontSmall',\n  m: 'euiCodeBlock--fontMedium',\n  l: 'euiCodeBlock--fontLarge',\n};\n\nexport const FONT_SIZES = Object.keys(fontSizeToClassNameMap);\n\nconst paddingSizeToClassNameMap = {\n  none: '',\n  s: 'euiCodeBlock--paddingSmall',\n  m: 'euiCodeBlock--paddingMedium',\n  l: 'euiCodeBlock--paddingLarge',\n};\n\nexport const PADDING_SIZES = Object.keys(paddingSizeToClassNameMap);\n\n/**\n * This is the base component extended by EuiCode and EuiCodeBlock. These components\n * share the same propTypes definition with EuiCodeBlockImpl.\n */\nexport class EuiCodeBlockImpl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFullScreen: false,\n    };\n  }\n\n  highlight = () => {\n    if (this.props.language) {\n      hljs.highlightBlock(this.code);\n\n      if (this.codeFullScreen) {\n        hljs.highlightBlock(this.codeFullScreen);\n      }\n    }\n  };\n\n  onKeyDown = event => {\n    if (event.keyCode === keyCodes.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.closeFullScreen();\n    }\n  };\n\n  toggleFullScreen = () => {\n    this.setState(prevState => ({\n      isFullScreen: !prevState.isFullScreen,\n    }));\n  };\n\n  closeFullScreen = () => {\n    this.setState({\n      isFullScreen: false,\n    });\n  };\n\n  componentDidMount() {\n    this.highlight();\n  }\n\n  componentDidUpdate() {\n    this.highlight();\n  }\n\n  render() {\n    const {\n      inline,\n      children,\n      className,\n      fontSize,\n      language,\n      overflowHeight,\n      paddingSize,\n      transparentBackground,\n      isCopyable,\n      ...otherProps\n    } = this.props;\n\n    const classes = classNames(\n      'euiCodeBlock',\n      fontSizeToClassNameMap[fontSize],\n      paddingSizeToClassNameMap[paddingSize],\n      {\n        'euiCodeBlock--transparentBackground': transparentBackground,\n        'euiCodeBlock--inline': inline,\n        'euiCodeBlock-isCopyable': isCopyable,\n      },\n      className\n    );\n\n    const codeClasses = classNames('euiCodeBlock__code', language);\n\n    const optionalStyles = {};\n\n    if (overflowHeight) {\n      optionalStyles.height = overflowHeight;\n    }\n\n    const codeSnippet = (\n      <code\n        ref={ref => {\n          this.code = ref;\n        }}\n        className={codeClasses}\n        {...otherProps}>\n        {children}\n      </code>\n    );\n\n    const wrapperProps = {\n      className: classes,\n      style: optionalStyles,\n    };\n\n    if (inline) {\n      return <span {...wrapperProps}>{codeSnippet}</span>;\n    }\n\n    let copyButton;\n\n    if (isCopyable) {\n      copyButton = (\n        <div className=\"euiCodeBlock__copyButton\">\n          <EuiI18n token=\"euiCodeBlock.copyButton\" default=\"Copy\">\n            {copyButton => (\n              <EuiCopy textToCopy={children}>\n                {copy => (\n                  <EuiButtonIcon\n                    size=\"s\"\n                    onClick={copy}\n                    iconType=\"copy\"\n                    color=\"text\"\n                    aria-label={copyButton}\n                  />\n                )}\n              </EuiCopy>\n            )}\n          </EuiI18n>\n        </div>\n      );\n    }\n\n    let fullScreenButton;\n\n    if (!inline && overflowHeight) {\n      fullScreenButton = (\n        <EuiI18n\n          tokens={[\n            'euiCodeBlock.fullscreenCollapse',\n            'euiCodeBlock.fullscreenExpand',\n          ]}\n          defaults={['Collapse', 'Expand']}>\n          {([fullscreenCollapse, fullscreenExpand]) => (\n            <EuiButtonIcon\n              className=\"euiCodeBlock__fullScreenButton\"\n              size=\"s\"\n              onClick={this.toggleFullScreen}\n              iconType={this.state.isFullScreen ? 'cross' : 'fullScreen'}\n              color=\"text\"\n              aria-label={\n                this.state.isFullScreen ? fullscreenCollapse : fullscreenExpand\n              }\n            />\n          )}\n        </EuiI18n>\n      );\n    }\n\n    let codeBlockControls;\n\n    if (copyButton || fullScreenButton) {\n      codeBlockControls = (\n        <div className=\"euiCodeBlock__controls\">\n          {fullScreenButton}\n          {copyButton}\n        </div>\n      );\n    }\n\n    let fullScreenDisplay;\n\n    if (this.state.isFullScreen) {\n      {\n        /*\n        Force fullscreen to use large font and padding.\n      */\n      }\n      const fullScreenClasses = classNames(\n        'euiCodeBlock',\n        fontSizeToClassNameMap[fontSize],\n        'euiCodeBlock-paddingLarge',\n        'euiCodeBlock-isFullScreen',\n        className\n      );\n\n      fullScreenDisplay = (\n        <EuiOverlayMask>\n          <EuiFocusTrap clickOutsideDisables={true}>\n            <div className={fullScreenClasses}>\n              <pre className=\"euiCodeBlock__pre\">\n                <code\n                  ref={ref => {\n                    this.codeFullScreen = ref;\n                  }}\n                  className={codeClasses}\n                  tabIndex={0}\n                  onKeyDown={this.onKeyDown}>\n                  {children}\n                </code>\n              </pre>\n\n              {codeBlockControls}\n            </div>\n          </EuiFocusTrap>\n        </EuiOverlayMask>\n      );\n    }\n\n    return (\n      <div {...wrapperProps}>\n        <pre className=\"euiCodeBlock__pre\">{codeSnippet}</pre>\n\n        {/*\n          If the below fullScreen code renders, it actually attaches to the body because of\n          EuiOverlayMask's React portal usage.\n        */}\n        {codeBlockControls}\n        {fullScreenDisplay}\n      </div>\n    );\n  }\n}\n\nEuiCodeBlockImpl.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  paddingSize: PropTypes.oneOf(PADDING_SIZES),\n\n  /**\n   * Sets the syntax highlighting for a specific language\n   */\n  language: PropTypes.string,\n  overflowHeight: PropTypes.number,\n  fontSize: PropTypes.oneOf(FONT_SIZES),\n  transparentBackground: PropTypes.bool,\n\n  /**\n   * Displays the passed code in an inline format. Also removes any margins set.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Displays an icon button to copy the code snippet to the clipboard.\n   */\n  isCopyable: PropTypes.bool,\n};\n\nEuiCodeBlockImpl.defaultProps = {\n  transparentBackground: false,\n  paddingSize: 'l',\n  fontSize: 's',\n  isCopyable: false,\n};\n"]}]}