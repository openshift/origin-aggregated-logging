{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/drag_and_drop_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/drag_and_drop_example.js","mtime":1565204169464},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DragAndDropExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _services = require(\"../../services\");\n\nvar _drag_and_drop_bare = _interopRequireDefault(require(\"./drag_and_drop_bare\"));\n\nvar _drag_and_drop = _interopRequireDefault(require(\"./drag_and_drop\"));\n\nvar _drag_and_drop_custom_handle = _interopRequireDefault(require(\"./drag_and_drop_custom_handle\"));\n\nvar _drag_and_drop_disable_blocking = _interopRequireDefault(require(\"./drag_and_drop_disable_blocking\"));\n\nvar _drag_and_drop_move_lists = _interopRequireDefault(require(\"./drag_and_drop_move_lists\"));\n\nvar _drag_and_drop_types = _interopRequireDefault(require(\"./drag_and_drop_types\"));\n\nvar _drag_and_drop_clone = _interopRequireDefault(require(\"./drag_and_drop_clone\"));\n\nvar _drag_and_drop_complex = _interopRequireDefault(require(\"./drag_and_drop_complex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dragAndDropBareSource = require('!!raw-loader!./drag_and_drop_bare');\n\nvar dragAndDropBareHtml = (0, _services.renderToHtml)(_drag_and_drop_bare.default);\n\nvar dragAndDropSource = require('!!raw-loader!./drag_and_drop');\n\nvar dragAndDropHtml = (0, _services.renderToHtml)(_drag_and_drop.default);\n\nvar dragAndDropCustomHandleSource = require('!!raw-loader!./drag_and_drop_custom_handle');\n\nvar dragAndDropCustomHandleHtml = (0, _services.renderToHtml)(_drag_and_drop_custom_handle.default);\n\nvar dragAndDropDisableBlockingSource = require('!!raw-loader!./drag_and_drop_disable_blocking');\n\nvar dragAndDropDisableBlockingHtml = (0, _services.renderToHtml)(_drag_and_drop_disable_blocking.default);\n\nvar dragAndDropMoveListsSource = require('!!raw-loader!./drag_and_drop_move_lists');\n\nvar dragAndDropMoveListsHtml = (0, _services.renderToHtml)(_drag_and_drop_move_lists.default);\n\nvar dragAndDropTypesSource = require('!!raw-loader!./drag_and_drop_types');\n\nvar dragAndDropTypesHtml = (0, _services.renderToHtml)(_drag_and_drop_types.default);\n\nvar dragAndDropCloneSource = require('!!raw-loader!./drag_and_drop_clone');\n\nvar dragAndDropCloneHtml = (0, _services.renderToHtml)(_drag_and_drop_clone.default);\n\nvar dragAndDropComplexSource = require('!!raw-loader!./drag_and_drop_complex');\n\nvar dragAndDropComplexHtml = (0, _services.renderToHtml)(_drag_and_drop_complex.default);\nvar DragAndDropExample = {\n  title: 'Drag And Drop',\n  beta: true,\n  intro: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_components2.EuiText, null, _react.default.createElement(\"p\", null, \"An extension of\", ' ', _react.default.createElement(_components2.EuiLink, {\n    href: \"https://github.com/atlassian/react-beautiful-dnd\"\n  }, \"react-beautiful-dnd\"), ' ', \"with a compatible API and built-in style opinions. Functionality results from 3 components working together:\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, '<EuiDragDropContext />'), \": Section of your application containing the draggable elements and the drop targets.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, '<EuiDroppable />'), \": Area into which items can be dropped. Contains \", _react.default.createElement(_components2.EuiCode, null, '<EuiDraggable />'), \"s.\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, '<EuiDraggable />'), \": Items that can be dragged. Must be part of an \", _react.default.createElement(_components2.EuiCode, null, '<EuiDroppable />')))), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiCallOut, {\n    title: \"Consider your users, use case\",\n    color: \"warning\"\n  }, _react.default.createElement(\"p\", null, \"Drag and drop interfaces are not well-adapted to many cases, and may be less suitable than other form types for data operations. For instance, drag and drop interaction relies heavily on spatial orientation that may not be entirelty valid to all users (e.g., screen readers as the sole source of information). Similarly, users navigating by keyboard may not be afforded nuanced, dual-axis drag item manipulation.\"), _react.default.createElement(\"p\", null, \"EUI (largely due to the great work already in react-beautiful-dnd) has and will continue to ensure accessibility where possible.\\n          With that in mind, keep your users' working context in mind.\")), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"l\"\n  })),\n  sections: [{\n    title: 'Just the facts',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropBareSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropBareHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" makes very few assumptions about what content it contains. To give affordance to draggable elements and to ensure a consistent experience, child elements must be able to accept a border and drop shadow (automatically applied via CSS). No other style opinions are applied, however.\"), _react.default.createElement(\"p\", null, \"Similarly, \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \" must accept a background color overlay (automatically applied via CSS), but has no other restrictions.\"), _react.default.createElement(\"p\", null, \"All \", _react.default.createElement(_components2.EuiCode, null, \"EuiDragDropContext\"), \" elements are discrete and isolated; \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \"s and\", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \"s cannot be shared/transferred between instances. Also, \", _react.default.createElement(_components2.EuiCode, null, \"EuiDragDropContext\"), \"s cannot be nested. It is recommended that a single, high-level\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDragDropContext\"), \" is used and\", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \"s account for categorical and functional separation (see later examples).\"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDragDropContext\"), \" handles all eventing but makes no assumptions about the result of a drop event. As such, the following event handlers are available:\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"onBeforeDragStart\")), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"onDragStart\")), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"onDragUpdate\")), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"onDragEnd\"), \" (required)\")), _react.default.createElement(\"p\", null, \"EUI also provides methods for helping to deal to common action types:\"), _react.default.createElement(\"ul\", null, _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"reorder\"), \":\", ' ', \"change an item's location in a droppable area\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"copy\"), \": create a duplicate of an item in a different droppable area\"), _react.default.createElement(\"li\", null, _react.default.createElement(_components2.EuiCode, null, \"move\"), \": move an item to a differnt droppable area\"))),\n    props: {\n      EuiDragDropContext: _components2.EuiDragDropContext,\n      EuiDraggable: _components2.EuiDraggable,\n      EuiDroppable: _components2.EuiDroppable\n    },\n    demo: _react.default.createElement(_drag_and_drop_bare.default, null)\n  }, {\n    title: 'Simple item reorder',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"The simplest case, demonstrating a single\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \" with \", _react.default.createElement(_components2.EuiCode, null, \"reorder\"), ' ', \"behavior.\"), _react.default.createElement(\"p\", null, \"Notice the ability to change rendered content based on dragging state.\", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" \", _react.default.createElement(_components2.EuiCode, null, \"children\"), \" is a render prop that mush return a \", _react.default.createElement(_components2.EuiCode, null, \"ReactElement\"), \". The\", ' ', _react.default.createElement(_components2.EuiCode, null, \"snapshot\"), \" parameter on that function has state data that can be used to alter appearance or behavior (e.g.,\", ' ', _react.default.createElement(_components2.EuiCode, null, \"isDragging\"), \").\")),\n    props: {\n      EuiDragDropContext: _components2.EuiDragDropContext,\n      EuiDraggable: _components2.EuiDraggable,\n      EuiDroppable: _components2.EuiDroppable\n    },\n    demo: _react.default.createElement(_drag_and_drop.default, null)\n  }, {\n    title: 'Custom drag handle',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropCustomHandleSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropCustomHandleHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"By default the entire element surface can initiate a drag. To specify a certain element within as the handle, set\", _react.default.createElement(_components2.EuiCode, null, \"customDragHandle=true\"), \" on the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \".\"), _react.default.createElement(\"p\", null, \"The \", _react.default.createElement(_components2.EuiCode, null, \"provided\"), \" parameter on the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" \", _react.default.createElement(_components2.EuiCode, null, \"children\"), \" render prop has all data required for functionality. Along with the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"customDragHandle\"), \" flag,\", _react.default.createElement(_components2.EuiCode, null, \"provided.dragHandleProps\"), \" needs to be added to the intended handle element.\")),\n    demo: _react.default.createElement(_drag_and_drop_custom_handle.default, null)\n  }, {\n    title: 'Interactive elements',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropDisableBlockingSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropDisableBlockingHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" elements can contain interactive elements such as buttons and form fields by adding the\", _react.default.createElement(_components2.EuiCode, null, \"disableInteractiveElementBlocking\"), \" prop. This will keep drag functionality while also enabling click, etc., events on the interactive child elements.\")),\n    demo: _react.default.createElement(_drag_and_drop_disable_blocking.default, null)\n  }, {\n    title: 'Move between lists',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropMoveListsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropMoveListsHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"By default, all \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \" elements are of the same type and will accept \", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" elements from others in the same \", _react.default.createElement(_components2.EuiCode, null, \"EuiDragDropContext\"), \".\"), _react.default.createElement(\"p\", null, \"The EUI \", _react.default.createElement(_components2.EuiCode, null, \"move\"), \" method is demonstrated in this example.\")),\n    demo: _react.default.createElement(_drag_and_drop_move_lists.default, null)\n  }, {\n    title: 'Distinguish droppable areas by type',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropTypesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropTypesHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"Setting the \", _react.default.createElement(_components2.EuiCode, null, \"type\"), \" prop on an\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \" element will ensure that it will only accept\", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" elements from the same type of\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \".\"), _react.default.createElement(\"p\", null, \"Notice that the enabled, compatible \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), ' ', \"elements have a visual change that indicates they can accept the actively moving/focused \", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" element.\")),\n    demo: _react.default.createElement(_drag_and_drop_types.default, null)\n  }, {\n    title: 'Copyable items',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropCloneSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropCloneHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, \"For cases where collections of \", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), ' ', \"elements are static or can be used in multiple places set\", ' ', _react.default.createElement(_components2.EuiCode, null, \"cloneDraggables=true\"), \" on the parent\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \". The \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \"becomes disabled (does not accept new\", ' ', _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \" elements) in this scenario to avoid mixed content intentions.\"), _react.default.createElement(\"p\", null, \"The EUI \", _react.default.createElement(_components2.EuiCode, null, \"copy\"), \" method is available and demonstrated in the example below. Note that the data point used as\", _react.default.createElement(_components2.EuiCode, null, \"draggableId\"), \" in \", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), ' ', \"must change to allow for real duplication.\"), _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"isRemovable\"), \" is used in the example for cloned items. This API is likely to change, but currently provides the visual changes with drop-to-remove interactions.\")),\n    demo: _react.default.createElement(_drag_and_drop_clone.default, null)\n  }, {\n    title: 'We have fun',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: dragAndDropComplexSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: dragAndDropComplexHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \"s in \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppables\"), \", \", _react.default.createElement(_components2.EuiCode, null, \"EuiDroppable\"), \"s in\", _react.default.createElement(_components2.EuiCode, null, \"EuiDraggable\"), \"s, custom drag handles, horizontal movement, vertical movement, flexbox,\", _react.default.createElement(_components2.EuiCode, null, \"EuiPanel\"), \" \", _react.default.createElement(\"em\", null, \"Inception\"), \", you name it.\")),\n    demo: _react.default.createElement(_drag_and_drop_complex.default, null)\n  }]\n};\nexports.DragAndDropExample = DragAndDropExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/drag_and_drop/drag_and_drop_example.js"],"names":["dragAndDropBareSource","require","dragAndDropBareHtml","DragAndDropBare","dragAndDropSource","dragAndDropHtml","DragAndDrop","dragAndDropCustomHandleSource","dragAndDropCustomHandleHtml","DragAndDropCustomHandle","dragAndDropDisableBlockingSource","dragAndDropDisableBlockingHtml","DragAndDropDisableBlocking","dragAndDropMoveListsSource","dragAndDropMoveListsHtml","DragAndDropMoveLists","dragAndDropTypesSource","dragAndDropTypesHtml","DragAndDropTypes","dragAndDropCloneSource","dragAndDropCloneHtml","DragAndDropClone","dragAndDropComplexSource","dragAndDropComplexHtml","DragAndDropComplex","DragAndDropExample","title","beta","intro","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiDragDropContext","EuiDraggable","EuiDroppable","demo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GuideSectionTypes } from '../../components';\nimport {\n  EuiCallOut,\n  EuiCode,\n  EuiDragDropContext,\n  EuiDraggable,\n  EuiDroppable,\n  EuiLink,\n  EuiSpacer,\n  EuiText,\n} from '../../../../src/components';\nimport { renderToHtml } from '../../services';\n\nimport DragAndDropBare from './drag_and_drop_bare';\nconst dragAndDropBareSource = require('!!raw-loader!./drag_and_drop_bare');\nconst dragAndDropBareHtml = renderToHtml(DragAndDropBare);\n\nimport DragAndDrop from './drag_and_drop';\nconst dragAndDropSource = require('!!raw-loader!./drag_and_drop');\nconst dragAndDropHtml = renderToHtml(DragAndDrop);\n\nimport DragAndDropCustomHandle from './drag_and_drop_custom_handle';\nconst dragAndDropCustomHandleSource = require('!!raw-loader!./drag_and_drop_custom_handle');\nconst dragAndDropCustomHandleHtml = renderToHtml(DragAndDropCustomHandle);\n\nimport DragAndDropDisableBlocking from './drag_and_drop_disable_blocking';\nconst dragAndDropDisableBlockingSource = require('!!raw-loader!./drag_and_drop_disable_blocking');\nconst dragAndDropDisableBlockingHtml = renderToHtml(DragAndDropDisableBlocking);\n\nimport DragAndDropMoveLists from './drag_and_drop_move_lists';\nconst dragAndDropMoveListsSource = require('!!raw-loader!./drag_and_drop_move_lists');\nconst dragAndDropMoveListsHtml = renderToHtml(DragAndDropMoveLists);\n\nimport DragAndDropTypes from './drag_and_drop_types';\nconst dragAndDropTypesSource = require('!!raw-loader!./drag_and_drop_types');\nconst dragAndDropTypesHtml = renderToHtml(DragAndDropTypes);\n\nimport DragAndDropClone from './drag_and_drop_clone';\nconst dragAndDropCloneSource = require('!!raw-loader!./drag_and_drop_clone');\nconst dragAndDropCloneHtml = renderToHtml(DragAndDropClone);\n\nimport DragAndDropComplex from './drag_and_drop_complex';\nconst dragAndDropComplexSource = require('!!raw-loader!./drag_and_drop_complex');\nconst dragAndDropComplexHtml = renderToHtml(DragAndDropComplex);\n\nexport const DragAndDropExample = {\n  title: 'Drag And Drop',\n  beta: true,\n  intro: (\n    <React.Fragment>\n      <EuiText>\n        <p>\n          An extension of{' '}\n          <EuiLink href=\"https://github.com/atlassian/react-beautiful-dnd\">\n            react-beautiful-dnd\n          </EuiLink>{' '}\n          with a compatible API and built-in style opinions. Functionality\n          results from 3 components working together:\n        </p>\n        <ul>\n          <li>\n            <EuiCode>{'<EuiDragDropContext />'}</EuiCode>: Section of your\n            application containing the draggable elements and the drop targets.\n          </li>\n          <li>\n            <EuiCode>{'<EuiDroppable />'}</EuiCode>: Area into which items can\n            be dropped. Contains <EuiCode>{'<EuiDraggable />'}</EuiCode>s.\n          </li>\n          <li>\n            <EuiCode>{'<EuiDraggable />'}</EuiCode>: Items that can be dragged.\n            Must be part of an <EuiCode>{'<EuiDroppable />'}</EuiCode>\n          </li>\n        </ul>\n      </EuiText>\n\n      <EuiSpacer />\n\n      <EuiCallOut title=\"Consider your users, use case\" color=\"warning\">\n        <p>\n          Drag and drop interfaces are not well-adapted to many cases, and may\n          be less suitable than other form types for data operations. For\n          instance, drag and drop interaction relies heavily on spatial\n          orientation that may not be entirelty valid to all users (e.g., screen\n          readers as the sole source of information). Similarly, users\n          navigating by keyboard may not be afforded nuanced, dual-axis drag\n          item manipulation.\n        </p>\n        <p>\n          {`EUI (largely due to the great work already in react-beautiful-dnd) has and will continue to ensure accessibility where possible.\n          With that in mind, keep your users' working context in mind.`}\n        </p>\n      </EuiCallOut>\n\n      <EuiSpacer size=\"l\" />\n    </React.Fragment>\n  ),\n  sections: [\n    {\n      title: 'Just the facts',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropBareSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropBareHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            <EuiCode>EuiDraggable</EuiCode> makes very few assumptions about\n            what content it contains. To give affordance to draggable elements\n            and to ensure a consistent experience, child elements must be able\n            to accept a border and drop shadow (automatically applied via CSS).\n            No other style opinions are applied, however.\n          </p>\n          <p>\n            Similarly, <EuiCode>EuiDroppable</EuiCode> must accept a background\n            color overlay (automatically applied via CSS), but has no other\n            restrictions.\n          </p>\n          <p>\n            All <EuiCode>EuiDragDropContext</EuiCode> elements are discrete and\n            isolated; <EuiCode>EuiDroppable</EuiCode>s and\n            <EuiCode>EuiDraggable</EuiCode>s cannot be shared/transferred\n            between instances. Also, <EuiCode>EuiDragDropContext</EuiCode>s\n            cannot be nested. It is recommended that a single, high-level{' '}\n            <EuiCode>EuiDragDropContext</EuiCode> is used and\n            <EuiCode>EuiDroppable</EuiCode>s account for categorical and\n            functional separation (see later examples).\n          </p>\n          <p>\n            <EuiCode>EuiDragDropContext</EuiCode> handles all eventing but makes\n            no assumptions about the result of a drop event. As such, the\n            following event handlers are available:\n          </p>\n          <ul>\n            <li>\n              <EuiCode>onBeforeDragStart</EuiCode>\n            </li>\n            <li>\n              <EuiCode>onDragStart</EuiCode>\n            </li>\n            <li>\n              <EuiCode>onDragUpdate</EuiCode>\n            </li>\n            <li>\n              <EuiCode>onDragEnd</EuiCode> (required)\n            </li>\n          </ul>\n          <p>\n            EUI also provides methods for helping to deal to common action\n            types:\n          </p>\n          <ul>\n            <li>\n              <EuiCode>reorder</EuiCode>:{' '}\n              {\"change an item's location in a droppable area\"}\n            </li>\n            <li>\n              <EuiCode>copy</EuiCode>: create a duplicate of an item in a\n              different droppable area\n            </li>\n            <li>\n              <EuiCode>move</EuiCode>: move an item to a differnt droppable area\n            </li>\n          </ul>\n        </React.Fragment>\n      ),\n      props: { EuiDragDropContext, EuiDraggable, EuiDroppable },\n      demo: <DragAndDropBare />,\n    },\n    {\n      title: 'Simple item reorder',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            The simplest case, demonstrating a single{' '}\n            <EuiCode>EuiDroppable</EuiCode> with <EuiCode>reorder</EuiCode>{' '}\n            behavior.\n          </p>\n          <p>\n            Notice the ability to change rendered content based on dragging\n            state.\n            <EuiCode>EuiDraggable</EuiCode> <EuiCode>children</EuiCode> is a\n            render prop that mush return a <EuiCode>ReactElement</EuiCode>. The{' '}\n            <EuiCode>snapshot</EuiCode> parameter on that function has state\n            data that can be used to alter appearance or behavior (e.g.,{' '}\n            <EuiCode>isDragging</EuiCode>).\n          </p>\n        </React.Fragment>\n      ),\n      props: { EuiDragDropContext, EuiDraggable, EuiDroppable },\n      demo: <DragAndDrop />,\n    },\n    {\n      title: 'Custom drag handle',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropCustomHandleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropCustomHandleHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            By default the entire element surface can initiate a drag. To\n            specify a certain element within as the handle, set\n            <EuiCode>customDragHandle=true</EuiCode> on the{' '}\n            <EuiCode>EuiDraggable</EuiCode>.\n          </p>\n          <p>\n            The <EuiCode>provided</EuiCode> parameter on the{' '}\n            <EuiCode>EuiDraggable</EuiCode> <EuiCode>children</EuiCode> render\n            prop has all data required for functionality. Along with the{' '}\n            <EuiCode>customDragHandle</EuiCode> flag,\n            <EuiCode>provided.dragHandleProps</EuiCode> needs to be added to the\n            intended handle element.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropCustomHandle />,\n    },\n    {\n      title: 'Interactive elements',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropDisableBlockingSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropDisableBlockingHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            <EuiCode>EuiDraggable</EuiCode> elements can contain interactive\n            elements such as buttons and form fields by adding the\n            <EuiCode>disableInteractiveElementBlocking</EuiCode> prop. This will\n            keep drag functionality while also enabling click, etc., events on\n            the interactive child elements.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropDisableBlocking />,\n    },\n    {\n      title: 'Move between lists',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropMoveListsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropMoveListsHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            By default, all <EuiCode>EuiDroppable</EuiCode> elements are of the\n            same type and will accept <EuiCode>EuiDraggable</EuiCode> elements\n            from others in the same <EuiCode>EuiDragDropContext</EuiCode>.\n          </p>\n          <p>\n            The EUI <EuiCode>move</EuiCode> method is demonstrated in this\n            example.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropMoveLists />,\n    },\n    {\n      title: 'Distinguish droppable areas by type',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropTypesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropTypesHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            Setting the <EuiCode>type</EuiCode> prop on an{' '}\n            <EuiCode>EuiDroppable</EuiCode> element will ensure that it will\n            only accept\n            <EuiCode>EuiDraggable</EuiCode> elements from the same type of{' '}\n            <EuiCode>EuiDroppable</EuiCode>.\n          </p>\n          <p>\n            Notice that the enabled, compatible <EuiCode>EuiDroppable</EuiCode>{' '}\n            elements have a visual change that indicates they can accept the\n            actively moving/focused <EuiCode>EuiDraggable</EuiCode> element.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropTypes />,\n    },\n    {\n      title: 'Copyable items',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropCloneSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropCloneHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            For cases where collections of <EuiCode>EuiDraggable</EuiCode>{' '}\n            elements are static or can be used in multiple places set{' '}\n            <EuiCode>cloneDraggables=true</EuiCode> on the parent{' '}\n            <EuiCode>EuiDroppable</EuiCode>. The <EuiCode>EuiDroppable</EuiCode>\n            becomes disabled (does not accept new{' '}\n            <EuiCode>EuiDraggable</EuiCode> elements) in this scenario to avoid\n            mixed content intentions.\n          </p>\n          <p>\n            The EUI <EuiCode>copy</EuiCode> method is available and demonstrated\n            in the example below. Note that the data point used as\n            <EuiCode>draggableId</EuiCode> in <EuiCode>EuiDraggable</EuiCode>{' '}\n            must change to allow for real duplication.\n          </p>\n          <p>\n            <EuiCode>isRemovable</EuiCode> is used in the example for cloned\n            items. This API is likely to change, but currently provides the\n            visual changes with drop-to-remove interactions.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropClone />,\n    },\n    {\n      title: 'We have fun',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dragAndDropComplexSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dragAndDropComplexHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            <EuiCode>EuiDraggable</EuiCode>s in <EuiCode>EuiDroppables</EuiCode>\n            , <EuiCode>EuiDroppable</EuiCode>s in\n            <EuiCode>EuiDraggable</EuiCode>s, custom drag handles, horizontal\n            movement, vertical movement, flexbox,\n            <EuiCode>EuiPanel</EuiCode> <em>Inception</em>, you name it.\n          </p>\n        </React.Fragment>\n      ),\n      demo: <DragAndDropComplex />,\n    },\n  ],\n};\n"]}]}