{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/drag_and_drop/draggable.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/drag_and_drop/draggable.tsx","mtime":1567626462148},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiDraggable = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactBeautifulDnd = require(\"react-beautiful-dnd\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _droppable = require(\"./droppable\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar spacingToClassNameMap = {\n  none: null,\n  s: 'euiDraggable--s',\n  m: 'euiDraggable--m',\n  l: 'euiDraggable--l'\n};\n\nvar EuiDraggable = function EuiDraggable(_ref) {\n  var _ref$customDragHandle = _ref.customDragHandle,\n      customDragHandle = _ref$customDragHandle === void 0 ? false : _ref$customDragHandle,\n      draggableId = _ref.draggableId,\n      _ref$isDragDisabled = _ref.isDragDisabled,\n      isDragDisabled = _ref$isDragDisabled === void 0 ? false : _ref$isDragDisabled,\n      _ref$isRemovable = _ref.isRemovable,\n      isRemovable = _ref$isRemovable === void 0 ? false : _ref$isRemovable,\n      index = _ref.index,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing,\n      style = _ref.style,\n      _ref$dataTestSubj = _ref['data-test-subj'],\n      dataTestSubj = _ref$dataTestSubj === void 0 ? 'draggable' : _ref$dataTestSubj,\n      rest = _objectWithoutProperties(_ref, [\"customDragHandle\", \"draggableId\", \"isDragDisabled\", \"isRemovable\", \"index\", \"children\", \"className\", \"spacing\", \"style\", \"data-test-subj\"]);\n\n  var _useContext = (0, _react.useContext)(_droppable.EuiDroppableContext),\n      cloneItems = _useContext.cloneItems;\n\n  return _react.default.createElement(_reactBeautifulDnd.Draggable, _extends({\n    draggableId: draggableId,\n    index: index\n  }, rest), function (provided, snapshot) {\n    var classes = (0, _classnames.default)('euiDraggable', {\n      'euiDraggable--hasClone': cloneItems,\n      'euiDraggable--hasCustomDragHandle': customDragHandle,\n      'euiDraggable--isDragging': snapshot.isDragging,\n      'euiDraggable--withoutDropAnimation': isRemovable\n    }, spacingToClassNameMap[spacing], className);\n    var childClasses = (0, _classnames.default)('euiDraggable__item', {\n      'euiDraggable__item--hasCustomDragHandle': customDragHandle,\n      'euiDraggable__item--isDisabled': isDragDisabled,\n      'euiDraggable__item--isDragging': snapshot.isDragging,\n      'euiDraggable__item--isDropAnimating': snapshot.isDropAnimating\n    });\n    var DraggableElement = typeof children === 'function' ? children(provided, snapshot) : children; // as specified by `DraggableProps`\n\n    return _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"div\", _extends({}, provided.draggableProps, !customDragHandle ? provided.dragHandleProps : {}, {\n      ref: provided.innerRef,\n      \"data-test-subj\": dataTestSubj,\n      className: classes,\n      style: _objectSpread({}, style, provided.draggableProps.style)\n    }), (0, _react.cloneElement)(DraggableElement, {\n      className: (0, _classnames.default)(DraggableElement.props.className, childClasses)\n    })), cloneItems && snapshot.isDragging && _react.default.createElement(\"div\", {\n      className: (0, _classnames.default)(classes, 'euiDraggable--clone')\n    }, DraggableElement));\n  });\n};\n\nexports.EuiDraggable = EuiDraggable;\nEuiDraggable.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired, _propTypes.default.any.isRequired]).isRequired,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.string]),\n\n  /**\n     * Whether the `children` will provide and set up its own drag handle\n     */\n  customDragHandle: _propTypes.default.bool,\n\n  /**\n     * Whether the item is currently in a position to be removed\n     */\n  isRemovable: _propTypes.default.bool,\n\n  /**\n     * Adds padding to the draggable item\n     */\n  spacing: _propTypes.default.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n  style: _propTypes.default.any,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string\n};\nEuiDraggable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiDraggable\",\n  \"props\": {\n    \"customDragHandle\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether the `children` will provide and set up its own drag handle\"\n    },\n    \"isDragDisabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"isRemovable\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether the item is currently in a position to be removed\"\n    },\n    \"spacing\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Adds padding to the draggable item\"\n    },\n    \"data-test-subj\": {\n      \"defaultValue\": {\n        \"value\": \"'draggable'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"any\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/drag_and_drop/draggable.tsx"],"names":["spacingToClassNameMap","none","s","m","l","EuiDraggable","customDragHandle","draggableId","isDragDisabled","isRemovable","index","children","className","spacing","style","dataTestSubj","rest","EuiDroppableContext","cloneItems","provided","snapshot","classes","isDragging","childClasses","isDropAnimating","DraggableElement","draggableProps","dragHandleProps","innerRef","props"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAQA;;AACA;;AAEA;;;;;;;;;;;;;;;;AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,IADsB;AAE5BC,EAAAA,CAAC,EAAE,iBAFyB;AAG5BC,EAAAA,CAAC,EAAE,iBAHyB;AAI5BC,EAAAA,CAAC,EAAE;AAJyB,CAA9B;;AA6BO,IAAMC,YAAkD,GAAG,SAArDA,YAAqD,OAY5D;AAAA,mCAXJC,gBAWI;AAAA,MAXJA,gBAWI,sCAXe,KAWf;AAAA,MAVJC,WAUI,QAVJA,WAUI;AAAA,iCATJC,cASI;AAAA,MATJA,cASI,oCATa,KASb;AAAA,8BARJC,WAQI;AAAA,MARJA,WAQI,iCARU,KAQV;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,0BAJJC,OAII;AAAA,MAJJA,OAII,6BAJM,MAIN;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,+BAFJ,gBAEI;AAAA,MAFcC,YAEd,kCAF6B,WAE7B;AAAA,MADDC,IACC;;AAAA,oBACmB,uBAAWC,8BAAX,CADnB;AAAA,MACIC,UADJ,eACIA,UADJ;;AAGJ,SACE,6BAAC,4BAAD;AAAW,IAAA,WAAW,EAAEX,WAAxB;AAAqC,IAAA,KAAK,EAAEG;AAA5C,KAAuDM,IAAvD,GACG,UAACG,QAAD,EAAWC,QAAX,EAAwB;AACvB,QAAMC,OAAO,GAAG,yBACd,cADc,EAEd;AACE,gCAA0BH,UAD5B;AAEE,2CAAqCZ,gBAFvC;AAGE,kCAA4Bc,QAAQ,CAACE,UAHvC;AAIE,4CAAsCb;AAJxC,KAFc,EAQdT,qBAAqB,CAACa,OAAD,CARP,EASdD,SATc,CAAhB;AAWA,QAAMW,YAAY,GAAG,yBAAW,oBAAX,EAAiC;AACpD,iDAA2CjB,gBADS;AAEpD,wCAAkCE,cAFkB;AAGpD,wCAAkCY,QAAQ,CAACE,UAHS;AAIpD,6CAAuCF,QAAQ,CAACI;AAJI,KAAjC,CAArB;AAMA,QAAMC,gBAAgB,GACpB,OAAOd,QAAP,KAAoB,UAApB,GACIA,QAAQ,CAACQ,QAAD,EAAWC,QAAX,CADZ,GAEKT,QAHP,CAlBuB,CAqBW;;AAClC,WACE,6BAAC,eAAD,QACE,iDACMQ,QAAQ,CAACO,cADf,EAEO,CAACpB,gBAAD,GAAoBa,QAAQ,CAACQ,eAA7B,GAA+C,EAFtD;AAGE,MAAA,GAAG,EAAER,QAAQ,CAACS,QAHhB;AAIE,wBAAgBb,YAJlB;AAKE,MAAA,SAAS,EAAEM,OALb;AAME,MAAA,KAAK,oBAAOP,KAAP,EAAiBK,QAAQ,CAACO,cAAT,CAAwBZ,KAAzC;AANP,QAOG,yBAAaW,gBAAb,EAA+B;AAC9Bb,MAAAA,SAAS,EAAE,yBACTa,gBAAgB,CAACI,KAAjB,CAAuBjB,SADd,EAETW,YAFS;AADmB,KAA/B,CAPH,CADF,EAeGL,UAAU,IACRE,QAAQ,CAACE,UAAT,IACC;AAAK,MAAA,SAAS,EAAE,yBAAWD,OAAX,EAAoB,qBAApB;AAAhB,OACGI,gBADH,CAjBN,CADF;AAwBD,GA/CH,CADF;AAmDD,CAlEM","sourcesContent":["import React, { Fragment, cloneElement, useContext } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { EuiDroppableContext } from './droppable';\nvar spacingToClassNameMap = {\n  none: null,\n  s: 'euiDraggable--s',\n  m: 'euiDraggable--m',\n  l: 'euiDraggable--l'\n};\nexport var EuiDraggable = ({\n  customDragHandle = false,\n  draggableId,\n  isDragDisabled = false,\n  isRemovable = false,\n  index,\n  children,\n  className,\n  spacing = 'none',\n  style,\n  'data-test-subj': dataTestSubj = 'draggable',\n  ...rest\n}) => {\n  const {\n    cloneItems\n  } = useContext(EuiDroppableContext);\n  return <Draggable draggableId={draggableId} index={index} {...rest}>\n      {(provided, snapshot) => {\n      const classes = classNames('euiDraggable', {\n        'euiDraggable--hasClone': cloneItems,\n        'euiDraggable--hasCustomDragHandle': customDragHandle,\n        'euiDraggable--isDragging': snapshot.isDragging,\n        'euiDraggable--withoutDropAnimation': isRemovable\n      }, spacingToClassNameMap[spacing], className);\n      const childClasses = classNames('euiDraggable__item', {\n        'euiDraggable__item--hasCustomDragHandle': customDragHandle,\n        'euiDraggable__item--isDisabled': isDragDisabled,\n        'euiDraggable__item--isDragging': snapshot.isDragging,\n        'euiDraggable__item--isDropAnimating': snapshot.isDropAnimating\n      });\n      const DraggableElement = typeof children === 'function' ? children(provided, snapshot) : children; // as specified by `DraggableProps`\n\n      return <Fragment>\n            <div {...provided.draggableProps} {...!customDragHandle ? provided.dragHandleProps : {}} ref={provided.innerRef} data-test-subj={dataTestSubj} className={classes} style={{ ...style,\n          ...provided.draggableProps.style\n        }}>\n              {cloneElement(DraggableElement, {\n            className: classNames(DraggableElement.props.className, childClasses)\n          })}\n            </div>\n            {cloneItems && snapshot.isDragging && <div className={classNames(classes, 'euiDraggable--clone')}>\n                  {DraggableElement}\n                </div>}\n          </Fragment>;\n    }}\n    </Draggable>;\n};\nEuiDraggable.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.any.isRequired]).isRequired,\n  className: PropTypes.oneOfType([PropTypes.string, _propTypes.default.string]),\n\n  /**\n     * Whether the `children` will provide and set up its own drag handle\n     */\n  customDragHandle: PropTypes.bool,\n\n  /**\n     * Whether the item is currently in a position to be removed\n     */\n  isRemovable: PropTypes.bool,\n\n  /**\n     * Adds padding to the draggable item\n     */\n  spacing: PropTypes.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n  style: PropTypes.any,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string\n};"]}]}