{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/text/text_align.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/text/text_align.tsx","mtime":1565204170038},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiTextAlign = exports.ALIGNMENTS = exports.alignmentToClassNameMap = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _common = require(\"../common\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar alignmentToClassNameMap = {\n  left: 'euiTextAlign--left',\n  right: 'euiTextAlign--right',\n  center: 'euiTextAlign--center'\n};\nexports.alignmentToClassNameMap = alignmentToClassNameMap;\nvar ALIGNMENTS = (0, _common.keysOf)(alignmentToClassNameMap);\nexports.ALIGNMENTS = ALIGNMENTS;\n\nvar EuiTextAlign = function EuiTextAlign(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$textAlign = _ref.textAlign,\n      textAlign = _ref$textAlign === void 0 ? 'left' : _ref$textAlign,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"textAlign\"]);\n\n  var classes = (0, _classnames.default)('euiTextAlign', alignmentToClassNameMap[textAlign], className);\n  return _react.default.createElement(\"div\", _extends({\n    className: classes\n  }, rest), children);\n};\n\nexports.EuiTextAlign = EuiTextAlign;\nEuiTextAlign.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  textAlign: _propTypes.default.oneOf([\"left\", \"right\", \"center\"])\n};\nEuiTextAlign.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiTextAlign\",\n  \"props\": {\n    \"textAlign\": {\n      \"defaultValue\": {\n        \"value\": \"'left'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/text/text_align.tsx"],"names":["alignmentToClassNameMap","left","right","center","ALIGNMENTS","EuiTextAlign","children","className","textAlign","rest","classes"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,uBAAuB,GAAG;AACrCC,EAAAA,IAAI,EAAE,oBAD+B;AAErCC,EAAAA,KAAK,EAAE,qBAF8B;AAGrCC,EAAAA,MAAM,EAAE;AAH6B,CAAhC;;AAQA,IAAMC,UAAU,GAAG,oBAAOJ,uBAAP,CAAnB;;;AAOA,IAAMK,YAAsC,GAAG,SAAzCA,YAAyC,OAKhD;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,4BAFJC,SAEI;AAAA,MAFJA,SAEI,+BAFQ,MAER;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAG,yBACd,cADc,EAEdV,uBAAuB,CAACQ,SAAD,CAFT,EAGdD,SAHc,CAAhB;AAMA,SACE;AAAK,IAAA,SAAS,EAAEG;AAAhB,KAA6BD,IAA7B,GACGH,QADH,CADF;AAKD,CAjBM","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nexport var alignmentToClassNameMap = {\n  left: 'euiTextAlign--left',\n  right: 'euiTextAlign--right',\n  center: 'euiTextAlign--center'\n};\nexport var ALIGNMENTS = keysOf(alignmentToClassNameMap);\nexport var EuiTextAlign = ({\n  children,\n  className,\n  textAlign = 'left',\n  ...rest\n}) => {\n  const classes = classNames('euiTextAlign', alignmentToClassNameMap[textAlign], className);\n  return <div className={classes} {...rest}>\n      {children}\n    </div>;\n};\nEuiTextAlign.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  textAlign: PropTypes.oneOf([\"left\", \"right\", \"center\"])\n};"]}]}