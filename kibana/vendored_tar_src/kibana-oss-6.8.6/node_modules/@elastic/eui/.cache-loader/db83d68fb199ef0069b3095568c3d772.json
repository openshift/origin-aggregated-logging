{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tabs/tabs_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tabs/tabs_example.js","mtime":1565204169564},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabsExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _tabs = _interopRequireDefault(require(\"./tabs\"));\n\nvar _tabs_condensed = _interopRequireDefault(require(\"./tabs_condensed\"));\n\nvar _tabbed_content = _interopRequireDefault(require(\"./tabbed_content\"));\n\nvar _controlled = _interopRequireDefault(require(\"./controlled\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tabsSource = require('!!raw-loader!./tabs');\n\nvar tabsHtml = (0, _services.renderToHtml)(_tabs.default);\n\nvar tabsCondensedSource = require('!!raw-loader!./tabs_condensed');\n\nvar tabsCondensedHtml = (0, _services.renderToHtml)(_tabs_condensed.default);\n\nvar tabbedContentSource = require('!!raw-loader!./tabbed_content');\n\nvar tabbedContentHtml = (0, _services.renderToHtml)(_tabbed_content.default);\n\nvar controlledSource = require('!!raw-loader!./controlled');\n\nvar controlledHtml = (0, _services.renderToHtml)(_controlled.default);\nvar controlledSnippet = \"<EuiTabbedContent\\n  tabs={tabs}\\n  selectedTab={this.state.selectedTab}\\n  onTabClick={this.onTabClick}\\n/>\\n\";\nvar TabsExample = {\n  title: 'Tabs',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: tabsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: tabsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiTabs\"), \" allow a \", _react.default.createElement(_components2.EuiCode, null, \"size\"), \" prop. In general you should always use the default size, but in rare cases (like putting tabs within a popover of other small menu) it is OK to use the smaller sizing.\"),\n    props: {\n      EuiTabs: _components2.EuiTabs,\n      EuiTab: _components2.EuiTab\n    },\n    demo: _react.default.createElement(_tabs.default, null),\n    snippet: \"<EuiTabs>\\n  <EuiTab onClick={onClick}>Example 1</EuiTab>\\n  <EuiTab onClick={onClick}>Example 2</EuiTab>\\n</EuiTabs>\"\n  }, {\n    title: 'Condensed tabs',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: tabsCondensedSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: tabsCondensedHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiTabs\"), \" allow a \", _react.default.createElement(_components2.EuiCode, null, \"display\"), \" prop. In general you should always use the default display. However, it is acceptable to use the alternative \", _react.default.createElement(_components2.EuiCode, null, \"condensed\"), \" display in situations where it is desirable to display a bolder, more compact and borderless tab interface (for use as primary navigation within your application or to establish a higher level hierarchy of tabs).\"),\n    props: {\n      EuiTabs: _components2.EuiTabs\n    },\n    demo: _react.default.createElement(_tabs_condensed.default, null),\n    snippet: \"<EuiTabs display=\\\"condensed\\\">\\n  <EuiTab onClick={onClick}>Example 1</EuiTab>\\n  <EuiTab onClick={onClick}>Example 2</EuiTab>\\n</EuiTabs>\"\n  }, {\n    title: 'Tabbed content',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: tabbedContentSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: tabbedContentHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiTabbedContent\"), \" makes it easier to associate tabs with content based on the selected tab. Use the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"initialSelectedTab\"), \" prop to specify which tab to initially select.\"),\n    props: {\n      EuiTabbedContent: _components2.EuiTabbedContent\n    },\n    demo: _react.default.createElement(_tabbed_content.default, null),\n    snippet: \"<EuiTabbedContent \\n  tabs={[\\n    {\\n      id: 'example1',\\n      name: 'Example 1',\\n      content: 'Example 1 content.',\\n    },\\n    {\\n      id: 'example2',\\n      name: 'Example 2',\\n      content: 'Example 2 content.',\\n    },\\n  ]}\\n/>\"\n  }, {\n    title: 'Controlled tabbed content',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: controlledSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: controlledHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can also use the \", _react.default.createElement(_components2.EuiCode, null, \"selectedTab\"), \" and\", ' ', _react.default.createElement(_components2.EuiCode, null, \"onTabClick\"), \" props to take complete control over tab selection. This can be useful if you want to change tabs based on user interaction with another part of the UI.\"),\n    props: {\n      EuiTabbedContent: _components2.EuiTabbedContent\n    },\n    snippet: controlledSnippet,\n    demo: _react.default.createElement(_controlled.default, null)\n  }]\n};\nexports.TabsExample = TabsExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tabs/tabs_example.js"],"names":["tabsSource","require","tabsHtml","Tabs","tabsCondensedSource","tabsCondensedHtml","TabsCondensed","tabbedContentSource","tabbedContentHtml","TabbedContent","controlledSource","controlledHtml","Controlled","controlledSnippet","TabsExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiTabs","EuiTab","demo","snippet","EuiTabbedContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiTabs,\n  EuiTab,\n  EuiTabbedContent,\n} from '../../../../src/components';\n\nimport Tabs from './tabs';\nconst tabsSource = require('!!raw-loader!./tabs');\nconst tabsHtml = renderToHtml(Tabs);\n\nimport TabsCondensed from './tabs_condensed';\nconst tabsCondensedSource = require('!!raw-loader!./tabs_condensed');\nconst tabsCondensedHtml = renderToHtml(TabsCondensed);\n\nimport TabbedContent from './tabbed_content';\nconst tabbedContentSource = require('!!raw-loader!./tabbed_content');\nconst tabbedContentHtml = renderToHtml(TabbedContent);\n\nimport Controlled from './controlled';\nconst controlledSource = require('!!raw-loader!./controlled');\nconst controlledHtml = renderToHtml(Controlled);\nconst controlledSnippet = `<EuiTabbedContent\n  tabs={tabs}\n  selectedTab={this.state.selectedTab}\n  onTabClick={this.onTabClick}\n/>\n`;\n\nexport const TabsExample = {\n  title: 'Tabs',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: tabsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: tabsHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiTabs</EuiCode> allow a <EuiCode>size</EuiCode> prop. In\n          general you should always use the default size, but in rare cases\n          (like putting tabs within a popover of other small menu) it is OK to\n          use the smaller sizing.\n        </p>\n      ),\n      props: {\n        EuiTabs,\n        EuiTab,\n      },\n      demo: <Tabs />,\n      snippet: `<EuiTabs>\n  <EuiTab onClick={onClick}>Example 1</EuiTab>\n  <EuiTab onClick={onClick}>Example 2</EuiTab>\n</EuiTabs>`,\n    },\n    {\n      title: 'Condensed tabs',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: tabsCondensedSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: tabsCondensedHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiTabs</EuiCode> allow a <EuiCode>display</EuiCode> prop. In\n          general you should always use the default display. However, it is\n          acceptable to use the alternative <EuiCode>condensed</EuiCode> display\n          in situations where it is desirable to display a bolder, more compact\n          and borderless tab interface (for use as primary navigation within\n          your application or to establish a higher level hierarchy of tabs).\n        </p>\n      ),\n      props: {\n        EuiTabs,\n      },\n      demo: <TabsCondensed />,\n      snippet: `<EuiTabs display=\"condensed\">\n  <EuiTab onClick={onClick}>Example 1</EuiTab>\n  <EuiTab onClick={onClick}>Example 2</EuiTab>\n</EuiTabs>`,\n    },\n    {\n      title: 'Tabbed content',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: tabbedContentSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: tabbedContentHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiTabbedContent</EuiCode> makes it easier to associate tabs\n          with content based on the selected tab. Use the{' '}\n          <EuiCode>initialSelectedTab</EuiCode> prop to specify which tab to\n          initially select.\n        </p>\n      ),\n      props: {\n        EuiTabbedContent,\n      },\n      demo: <TabbedContent />,\n      snippet: `<EuiTabbedContent \n  tabs={[\n    {\n      id: 'example1',\n      name: 'Example 1',\n      content: 'Example 1 content.',\n    },\n    {\n      id: 'example2',\n      name: 'Example 2',\n      content: 'Example 2 content.',\n    },\n  ]}\n/>`,\n    },\n    {\n      title: 'Controlled tabbed content',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: controlledSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: controlledHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can also use the <EuiCode>selectedTab</EuiCode> and{' '}\n          <EuiCode>onTabClick</EuiCode> props to take complete control over tab\n          selection. This can be useful if you want to change tabs based on user\n          interaction with another part of the UI.\n        </p>\n      ),\n      props: {\n        EuiTabbedContent,\n      },\n      snippet: controlledSnippet,\n      demo: <Controlled />,\n    },\n  ],\n};\n"]}]}