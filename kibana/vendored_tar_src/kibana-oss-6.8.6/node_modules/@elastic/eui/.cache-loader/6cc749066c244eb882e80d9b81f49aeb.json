{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/combo_box/combo_box.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/combo_box/combo_box.js","mtime":1565204169640},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiComboBox = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _services = require(\"../../services\");\n\nvar _key_codes = require(\"../../services/key_codes\");\n\nvar _portal = require(\"../portal\");\n\nvar _combo_box_input = require(\"./combo_box_input\");\n\nvar _combo_box_options_list = require(\"./combo_box_options_list\");\n\nvar _matching_options = require(\"./matching_options\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiComboBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiComboBox, _Component);\n\n  function EuiComboBox(props) {\n    var _this;\n\n    _classCallCheck(this, EuiComboBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiComboBox).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openList\", function () {\n      _this.setState({\n        isListOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeList\", function () {\n      _this.clearActiveOption();\n\n      _this.setState({\n        isListOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateListPosition\", function () {\n      var listElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.listElement;\n\n      if (!_this._isMounted) {\n        return;\n      }\n\n      if (!_this.state.isListOpen) {\n        return;\n      }\n\n      if (!listElement) {\n        return;\n      } // it's possible that updateListPosition is called when listElement is becoming visible, but isn't yet\n\n\n      var listElementBounds = listElement.getBoundingClientRect();\n\n      if (listElementBounds.width === 0 || listElementBounds.height === 0) {\n        return;\n      }\n\n      var comboBoxBounds = _this.comboBox.getBoundingClientRect();\n\n      var _findPopoverPosition = (0, _services.findPopoverPosition)({\n        anchor: _this.comboBox,\n        popover: listElement,\n        position: 'bottom',\n        allowCrossAxis: false\n      }),\n          position = _findPopoverPosition.position,\n          top = _findPopoverPosition.top;\n\n      _this.optionsList.style.top = \"\".concat(top, \"px\"); // listElement doesn't have its width set until after updating the position\n      // which means the popover service won't know about the correct width\n      // however, we already know where to position the element\n\n      _this.optionsList.style.left = \"\".concat(comboBoxBounds.left + window.pageXOffset, \"px\");\n      _this.optionsList.style.width = \"\".concat(comboBoxBounds.width, \"px\"); // Cache for future calls.\n\n      _this.setState({\n        listElement: listElement,\n        width: comboBoxBounds.width,\n        listPosition: position\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"incrementActiveOptionIndex\", function (amount) {\n      // If there are no options available, do nothing.\n      if (!_this.state.matchingOptions.length) {\n        return;\n      }\n\n      _this.setState(function (_ref) {\n        var activeOptionIndex = _ref.activeOptionIndex,\n            matchingOptions = _ref.matchingOptions;\n        var nextActiveOptionIndex;\n\n        if (activeOptionIndex < 0) {\n          // If this is the beginning of the user's keyboard navigation of the menu, then we'll focus\n          // either the first or last item.\n          nextActiveOptionIndex = amount < 0 ? matchingOptions.length - 1 : 0;\n        } else {\n          nextActiveOptionIndex = activeOptionIndex + amount;\n\n          if (nextActiveOptionIndex < 0) {\n            nextActiveOptionIndex = matchingOptions.length - 1;\n          } else if (nextActiveOptionIndex === matchingOptions.length) {\n            nextActiveOptionIndex = 0;\n          }\n        } // Group titles are included in option list but are not selectable\n        // Skip group title options\n\n\n        var direction = amount > 0 ? 1 : -1;\n\n        while (matchingOptions[nextActiveOptionIndex].isGroupLabelOption) {\n          nextActiveOptionIndex = nextActiveOptionIndex + direction;\n\n          if (nextActiveOptionIndex < 0) {\n            nextActiveOptionIndex = matchingOptions.length - 1;\n          } else if (nextActiveOptionIndex === matchingOptions.length) {\n            nextActiveOptionIndex = 0;\n          }\n        }\n\n        return {\n          activeOptionIndex: nextActiveOptionIndex\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasActiveOption\", function () {\n      return _this.state.activeOptionIndex > -1 && _this.state.activeOptionIndex < _this.state.matchingOptions.length;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clearActiveOption\", function () {\n      _this.setState({\n        activeOptionIndex: -1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clearSearchValue\", function () {\n      _this.onSearchChange('');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"removeLastOption\", function () {\n      if (!_this.props.selectedOptions.length) {\n        return;\n      } // Backspace will be used to delete the input, not a pill.\n\n\n      if (_this.state.searchValue.length) {\n        return;\n      } // Delete last pill.\n\n\n      _this.onRemoveOption(_this.props.selectedOptions[_this.props.selectedOptions.length - 1]);\n\n      if (_this.props.singleSelection && !_this.state.isListOpen) {\n        _this.openList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addCustomOption\", function (isContainerBlur) {\n      var _this$props = _this.props,\n          options = _this$props.options,\n          selectedOptions = _this$props.selectedOptions,\n          onCreateOption = _this$props.onCreateOption,\n          singleSelection = _this$props.singleSelection;\n      var _this$state = _this.state,\n          searchValue = _this$state.searchValue,\n          matchingOptions = _this$state.matchingOptions;\n\n      if (_this.doesSearchMatchOnlyOption()) {\n        _this.onAddOption(matchingOptions[0], isContainerBlur);\n\n        return;\n      }\n\n      if (!onCreateOption) {\n        return;\n      } // Don't bother trying to create an option if the user hasn't typed anything.\n\n\n      if (!searchValue) {\n        return;\n      } // Don't create the value if it's already been selected.\n\n\n      if ((0, _matching_options.getSelectedOptionForSearchValue)(searchValue, selectedOptions)) {\n        return;\n      } // Add new custom pill if this is custom input, even if it partially matches an option..\n\n\n      var isOptionCreated = _this.props.onCreateOption(searchValue, (0, _matching_options.flattenOptionGroups)(options)); // Expect the consumer to be explicit in rejecting a custom option.\n\n\n      if (isOptionCreated === false) {\n        return;\n      }\n\n      _this.clearSearchValue();\n\n      if (_this.isSingleSelectionCustomOption() || singleSelection && matchingOptions.length < 1) {\n        // Adding a custom option to a single select that does not appear in the list of options\n        _this.closeList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"doesSearchMatchOnlyOption\", function () {\n      var searchValue = _this.state.searchValue;\n\n      if (_this.state.matchingOptions.length !== 1) {\n        return false;\n      }\n\n      return _this.state.matchingOptions[0].label.toLowerCase() === searchValue.toLowerCase();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"areAllOptionsSelected\", function () {\n      var _this$props2 = _this.props,\n          options = _this$props2.options,\n          selectedOptions = _this$props2.selectedOptions,\n          async = _this$props2.async; // Assume if this is async then there could be infinite options.\n\n      if (async) {\n        return false;\n      }\n\n      return (0, _matching_options.flattenOptionGroups)(options).length === selectedOptions.length;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isSingleSelectionCustomOption\", function () {\n      var _this$props3 = _this.props,\n          onCreateOption = _this$props3.onCreateOption,\n          options = _this$props3.options,\n          selectedOptions = _this$props3.selectedOptions,\n          singleSelection = _this$props3.singleSelection; // The selected option of a single select is custom and does not appear in the list of options\n\n      return singleSelection && onCreateOption && selectedOptions.length > 0 && !options.includes(selectedOptions[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onComboBoxFocus\", function () {\n      if (_this.props.onFocus) {\n        _this.props.onFocus();\n      }\n\n      if (!_this.isSingleSelectionCustomOption()) {\n        _this.openList();\n      }\n\n      _this.setState({\n        hasFocus: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onContainerBlur\", function (e) {\n      // close the options list, unless the use clicked on an option\n      // FireFox returns `relatedTarget` as `null` for security reasons, but provides a proprietary `explicitOriginalTarget`\n      var relatedTarget = e.relatedTarget || e.explicitOriginalTarget;\n\n      var focusedInOptionsList = relatedTarget && _this.optionsList && _this.optionsList.contains(relatedTarget);\n\n      var focusedInInput = relatedTarget && _this.comboBox && _this.comboBox.contains(relatedTarget);\n\n      if (!focusedInOptionsList && !focusedInInput) {\n        _this.closeList();\n\n        if (_this.props.onBlur) {\n          _this.props.onBlur();\n        }\n\n        _this.setState({\n          hasFocus: false\n        }); // If the user tabs away or changes focus to another element, take whatever input they've\n        // typed and convert it into a pill, to prevent the combo box from looking like a text input.\n\n\n        if (!_this.hasActiveOption()) {\n          _this.addCustomOption(true);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (e) {\n      switch (e.keyCode) {\n        case _services.comboBoxKeyCodes.UP:\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (_this.state.isListOpen) {\n            _this.incrementActiveOptionIndex(-1);\n          } else {\n            _this.openList();\n          }\n\n          break;\n\n        case _services.comboBoxKeyCodes.DOWN:\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (_this.state.isListOpen) {\n            _this.incrementActiveOptionIndex(1);\n          } else {\n            _this.openList();\n          }\n\n          break;\n\n        case _key_codes.BACKSPACE:\n          e.stopPropagation();\n\n          _this.removeLastOption();\n\n          break;\n\n        case _key_codes.ESCAPE:\n          e.stopPropagation();\n\n          _this.closeList();\n\n          break;\n\n        case _services.comboBoxKeyCodes.ENTER:\n          e.stopPropagation();\n\n          if (_this.hasActiveOption()) {\n            _this.onAddOption(_this.state.matchingOptions[_this.state.activeOptionIndex]);\n          } else {\n            _this.addCustomOption();\n          }\n\n          break;\n\n        case _key_codes.TAB:\n          // Disallow tabbing when the user is navigating the options.\n          if (_this.hasActiveOption() && _this.state.isListOpen) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          break;\n\n        default:\n          if (_this.props.onKeyDown) {\n            _this.props.onKeyDown(e);\n          }\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOptionEnterKey\", function (option) {\n      _this.onAddOption(option);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOptionClick\", function (option) {\n      _this.onAddOption(option);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onAddOption\", function (addedOption, isContainerBlur) {\n      if (addedOption.disabled) {\n        return;\n      }\n\n      var _this$props4 = _this.props,\n          onChange = _this$props4.onChange,\n          selectedOptions = _this$props4.selectedOptions,\n          singleSelection = _this$props4.singleSelection;\n      onChange(singleSelection ? [addedOption] : selectedOptions.concat(addedOption));\n\n      _this.clearSearchValue();\n\n      _this.clearActiveOption();\n\n      if (!isContainerBlur) {\n        _this.searchInput.focus();\n      }\n\n      if (singleSelection) {\n        _this.closeList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRemoveOption\", function (removedOption) {\n      var _this$props5 = _this.props,\n          onChange = _this$props5.onChange,\n          selectedOptions = _this$props5.selectedOptions;\n      onChange(selectedOptions.filter(function (option) {\n        return option !== removedOption;\n      }));\n\n      _this.clearActiveOption();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clearSelectedOptions\", function () {\n      _this.props.onChange([]); // Clicking the clear button will also cause it to disappear. This would result in focus\n      // shifting unexpectedly to the body element so we set it to the input which is more reasonable,\n\n\n      _this.searchInput.focus();\n\n      if (!_this.state.isListOpen) {\n        _this.openList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onComboBoxClick\", function () {\n      // When the user clicks anywhere on the box, enter the interaction state.\n      _this.searchInput.focus(); // If the user does this from a state in which an option has focus, then we need to reset it or clear it.\n\n\n      if (_this.props.singleSelection && _this.props.selectedOptions.length === 1) {\n        _this.setState({\n          activeOptionIndex: _this.state.matchingOptions.indexOf(_this.props.selectedOptions[0])\n        });\n      } else {\n        _this.clearActiveOption();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOpenListClick\", function () {\n      _this.searchInput.focus();\n\n      if (!_this.state.isListOpen) {\n        _this.openList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onCloseListClick\", function () {\n      _this.closeList();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearchChange\", function (searchValue) {\n      if (_this.props.onSearchChange) {\n        var hasMatchingOptions = _this.state.matchingOptions.length > 0;\n\n        _this.props.onSearchChange(searchValue, hasMatchingOptions);\n      }\n\n      _this.setState({\n        searchValue: searchValue\n      }, function () {\n        if (searchValue && _this.state.isListOpen === false) _this.openList();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"comboBoxRef\", function (node) {\n      // IE11 doesn't support the `relatedTarget` event property for blur events\n      // but does add it for focusout. React doesn't support `onFocusOut` so here we are.\n      if (_this.comboBox != null) {\n        _this.comboBox.removeEventListener('focusout', _this.onContainerBlur);\n      }\n\n      _this.comboBox = node;\n\n      if (_this.comboBox) {\n        _this.comboBox.addEventListener('focusout', _this.onContainerBlur);\n\n        var comboBoxBounds = _this.comboBox.getBoundingClientRect();\n\n        _this.setState({\n          width: comboBoxBounds.width\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"autoSizeInputRef\", function (node) {\n      _this.autoSizeInput = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"searchInputRef\", function (node) {\n      _this.searchInput = node;\n\n      if (_this.props.inputRef) {\n        _this.props.inputRef(node);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"optionsListRef\", function (node) {\n      _this.optionsList = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"optionRef\", function (index, node) {\n      _this.options[index] = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleButtonRef\", function (node) {\n      _this.toggleButton = node;\n    });\n\n    var initialSearchValue = '';\n    var _options = props.options,\n        _selectedOptions = props.selectedOptions,\n        _singleSelection = props.singleSelection;\n    _this.state = {\n      matchingOptions: (0, _matching_options.getMatchingOptions)(_options, _selectedOptions, initialSearchValue, props.async, _singleSelection),\n      listElement: undefined,\n      searchValue: initialSearchValue,\n      isListOpen: false,\n      listPosition: 'bottom',\n      activeOptionIndex: -1,\n      hasFocus: false\n    };\n    _this.rootId = (0, _services.htmlIdGenerator)(); // Refs.\n\n    _this.comboBox = undefined;\n    _this.autoSizeInput = undefined;\n    _this.searchInput = undefined;\n    _this.optionsList = undefined;\n    _this.options = [];\n    return _this;\n  }\n\n  _createClass(EuiComboBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true; // TODO: This will need to be called once the actual stylesheet loads.\n\n      setTimeout(function () {\n        if (_this2.autoSizeInput) {\n          _this2.autoSizeInput.copyInputStyles();\n        }\n      }, 100);\n    }\n  }, {\n    key: \"updateMatchingOptionsIfDifferent\",\n    value: function updateMatchingOptionsIfDifferent(newMatchingOptions) {\n      var _this$state2 = this.state,\n          matchingOptions = _this$state2.matchingOptions,\n          activeOptionIndex = _this$state2.activeOptionIndex;\n      var _this$props6 = this.props,\n          singleSelection = _this$props6.singleSelection,\n          selectedOptions = _this$props6.selectedOptions;\n      var areOptionsDifferent = false;\n\n      if (matchingOptions.length !== newMatchingOptions.length) {\n        areOptionsDifferent = true;\n      } else {\n        for (var i = 0; i < matchingOptions.length; i++) {\n          if (matchingOptions[i].label !== newMatchingOptions[i].label) {\n            areOptionsDifferent = true;\n            break;\n          }\n        }\n      }\n\n      if (areOptionsDifferent) {\n        this.options = [];\n        var nextActiveOptionIndex = activeOptionIndex; // ensure that the currently selected single option is active if it is in the matchingOptions\n\n        if (singleSelection && selectedOptions.length === 1) {\n          if (newMatchingOptions.includes(selectedOptions[0])) {\n            nextActiveOptionIndex = newMatchingOptions.indexOf(selectedOptions[0]);\n          }\n        }\n\n        this.setState({\n          matchingOptions: newMatchingOptions,\n          activeOptionIndex: nextActiveOptionIndex\n        });\n\n        if (!newMatchingOptions.length) {\n          // Prevent endless setState -> componentWillUpdate -> setState loop.\n          if (this.hasActiveOption()) {\n            this.clearActiveOption();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props7 = this.props,\n          options = _this$props7.options,\n          selectedOptions = _this$props7.selectedOptions,\n          singleSelection = _this$props7.singleSelection;\n      var searchValue = this.state.searchValue; // React 16.3 has a bug (fixed in 16.4) where getDerivedStateFromProps\n      // isn't called after a state change, and we track `searchValue` in state\n      // instead we need to react to a change in searchValue here\n\n      this.updateMatchingOptionsIfDifferent((0, _matching_options.getMatchingOptions)(options, selectedOptions, searchValue, this.props.async, singleSelection));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          id = _this$props8.id,\n          isDisabled = _this$props8.isDisabled,\n          className = _this$props8.className,\n          isLoading = _this$props8.isLoading,\n          options = _this$props8.options,\n          selectedOptions = _this$props8.selectedOptions,\n          onCreateOption = _this$props8.onCreateOption,\n          placeholder = _this$props8.placeholder,\n          noSuggestions = _this$props8.noSuggestions,\n          renderOption = _this$props8.renderOption,\n          singleSelection = _this$props8.singleSelection,\n          onChange = _this$props8.onChange,\n          onSearchChange = _this$props8.onSearchChange,\n          async = _this$props8.async,\n          onBlur = _this$props8.onBlur,\n          inputRef = _this$props8.inputRef,\n          isInvalid = _this$props8.isInvalid,\n          rowHeight = _this$props8.rowHeight,\n          isClearable = _this$props8.isClearable,\n          fullWidth = _this$props8.fullWidth,\n          compressed = _this$props8.compressed,\n          dataTestSubj = _this$props8['data-test-subj'],\n          rest = _objectWithoutProperties(_this$props8, [\"id\", \"isDisabled\", \"className\", \"isLoading\", \"options\", \"selectedOptions\", \"onCreateOption\", \"placeholder\", \"noSuggestions\", \"renderOption\", \"singleSelection\", \"onChange\", \"onSearchChange\", \"async\", \"onBlur\", \"inputRef\", \"isInvalid\", \"rowHeight\", \"isClearable\", \"fullWidth\", \"compressed\", \"data-test-subj\"]);\n\n      var _this$state3 = this.state,\n          hasFocus = _this$state3.hasFocus,\n          searchValue = _this$state3.searchValue,\n          isListOpen = _this$state3.isListOpen,\n          listPosition = _this$state3.listPosition,\n          width = _this$state3.width,\n          activeOptionIndex = _this$state3.activeOptionIndex; // Visually indicate the combobox is in an invalid state if it has lost focus but there is text entered in the input.\n      // When custom options are disabled and the user leaves the combo box after entering text that does not match any\n      // options, this tells the user that they've entered invalid input.\n\n      var markAsInvalid = isInvalid || (hasFocus === false || isListOpen === false) && searchValue;\n      var classes = (0, _classnames.default)('euiComboBox', className, {\n        'euiComboBox-isOpen': isListOpen,\n        'euiComboBox-isInvalid': markAsInvalid,\n        'euiComboBox-isDisabled': isDisabled,\n        'euiComboBox--fullWidth': fullWidth,\n        'euiComboBox--compressed': compressed\n      });\n      var value = selectedOptions.map(function (selectedOption) {\n        return selectedOption.label;\n      }).join(', ');\n      var optionsList;\n\n      if (!noSuggestions && isListOpen) {\n        var optionsListDataTestSubj = dataTestSubj ? \"\".concat(dataTestSubj, \"-optionsList\") : undefined;\n        optionsList = _react.default.createElement(_portal.EuiPortal, null, _react.default.createElement(_combo_box_options_list.EuiComboBoxOptionsList, {\n          isLoading: isLoading,\n          options: options,\n          selectedOptions: selectedOptions,\n          onCreateOption: onCreateOption,\n          searchValue: searchValue,\n          matchingOptions: this.state.matchingOptions,\n          activeOptionIndex: this.state.activeOptionIndex,\n          listRef: this.optionsListRef,\n          optionRef: this.optionRef,\n          onOptionClick: this.onOptionClick,\n          onOptionEnterKey: this.onOptionEnterKey,\n          areAllOptionsSelected: this.areAllOptionsSelected(),\n          getSelectedOptionForSearchValue: _matching_options.getSelectedOptionForSearchValue,\n          updatePosition: this.updateListPosition,\n          position: listPosition,\n          renderOption: renderOption,\n          width: width,\n          scrollToIndex: activeOptionIndex,\n          rowHeight: rowHeight,\n          \"data-test-subj\": optionsListDataTestSubj,\n          fullWidth: fullWidth,\n          rootId: this.rootId,\n          onCloseList: this.closeList\n        }));\n      }\n\n      return (\n        /**\n         * Re: jsx-a11y/interactive-supports-focus\n         * Focus is managed and is placed on the textbox element (`EuiComboBoxInput`)\n         *\n         * Re: jsx-a11y/role-has-required-aria-props\n         * Expansion is managed and required `aria-controls` prop is placed on the textbox element (`EuiComboBoxInput`)\n         *\n         * Reference for both: https://www.w3.org/TR/2017/REC-wai-aria-1.1-20171214/#combobox,\n         * which verifies that this implementation follows the spec.\n         */\n        // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n        _react.default.createElement(\"div\", _extends({}, rest, {\n          className: classes,\n          onKeyDown: this.onKeyDown,\n          ref: this.comboBoxRef,\n          \"data-test-subj\": dataTestSubj,\n          role: \"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\n          ,\n          \"aria-haspopup\": \"listbox\",\n          \"aria-expanded\": isListOpen\n        }), _react.default.createElement(_combo_box_input.EuiComboBoxInput, {\n          id: id,\n          placeholder: placeholder,\n          selectedOptions: selectedOptions,\n          onRemoveOption: this.onRemoveOption,\n          onClick: this.onComboBoxClick,\n          onChange: this.onSearchChange,\n          onFocus: this.onComboBoxFocus,\n          value: value,\n          searchValue: searchValue,\n          autoSizeInputRef: this.autoSizeInputRef,\n          inputRef: this.searchInputRef,\n          updatePosition: this.updateListPosition,\n          onClear: isClearable && !isDisabled ? this.clearSelectedOptions : undefined,\n          hasSelectedOptions: selectedOptions.length > 0,\n          isListOpen: isListOpen,\n          onOpenListClick: this.onOpenListClick,\n          onCloseListClick: this.onCloseListClick,\n          singleSelection: singleSelection,\n          isDisabled: isDisabled,\n          toggleButtonRef: this.toggleButtonRef,\n          fullWidth: fullWidth,\n          noIcon: !!noSuggestions,\n          rootId: this.rootId,\n          focusedOptionId: this.hasActiveOption() ? this.rootId(\"_option-\".concat(this.state.activeOptionIndex)) : null,\n          compressed: compressed\n        }), optionsList)\n      );\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var options = nextProps.options,\n          selectedOptions = nextProps.selectedOptions,\n          singleSelection = nextProps.singleSelection;\n      var activeOptionIndex = prevState.activeOptionIndex,\n          searchValue = prevState.searchValue; // Calculate and cache the options which match the searchValue, because we use this information\n      // in multiple places and it would be expensive to calculate repeatedly.\n\n      var matchingOptions = (0, _matching_options.getMatchingOptions)(options, selectedOptions, searchValue, nextProps.async, singleSelection);\n      var stateUpdate = {\n        matchingOptions: matchingOptions\n      };\n\n      if (activeOptionIndex >= matchingOptions.length) {\n        stateUpdate.activeOptionIndex = -1;\n      }\n\n      return stateUpdate;\n    }\n  }]);\n\n  return EuiComboBox;\n}(_react.Component);\n\nexports.EuiComboBox = EuiComboBox;\n\n_defineProperty(EuiComboBox, \"propTypes\", {\n  id: _propTypes.default.string,\n  isDisabled: _propTypes.default.bool,\n  className: _propTypes.default.string,\n  placeholder: _propTypes.default.string,\n  isLoading: _propTypes.default.bool,\n  async: _propTypes.default.bool,\n  singleSelection: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n    asPlainText: _propTypes.default.bool\n  })]),\n  noSuggestions: _propTypes.default.bool,\n  options: _propTypes.default.array,\n  selectedOptions: _propTypes.default.array,\n  onBlur: _propTypes.default.func,\n  onChange: _propTypes.default.func,\n  onFocus: _propTypes.default.func,\n  onSearchChange: _propTypes.default.func,\n  onCreateOption: _propTypes.default.func,\n  renderOption: _propTypes.default.func,\n  isInvalid: _propTypes.default.bool,\n  rowHeight: _propTypes.default.number,\n  isClearable: _propTypes.default.bool,\n  fullWidth: _propTypes.default.bool,\n  compressed: _propTypes.default.bool,\n  inputRef: _propTypes.default.func\n});\n\n_defineProperty(EuiComboBox, \"defaultProps\", {\n  options: [],\n  selectedOptions: [],\n  isClearable: true,\n  singleSelection: false,\n  fullWidth: false,\n  compressed: false\n});\n\nEuiComboBox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"openList\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeList\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"updateListPosition\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"listElement\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"incrementActiveOptionIndex\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"amount\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"hasActiveOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"clearActiveOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"clearSearchValue\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"removeLastOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"addCustomOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"isContainerBlur\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"doesSearchMatchOnlyOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"areAllOptionsSelected\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"isSingleSelectionCustomOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onComboBoxFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onContainerBlur\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onKeyDown\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onOptionEnterKey\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"option\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onOptionClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"option\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onAddOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"addedOption\",\n      \"type\": null\n    }, {\n      \"name\": \"isContainerBlur\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onRemoveOption\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"removedOption\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"clearSelectedOptions\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onComboBoxClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onOpenListClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onCloseListClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onSearchChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"searchValue\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"comboBoxRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"autoSizeInputRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"searchInputRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"optionsListRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"optionRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"index\",\n      \"type\": null\n    }, {\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"toggleButtonRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"nextProps\",\n      \"type\": null\n    }, {\n      \"name\": \"prevState\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"updateMatchingOptionsIfDifferent\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"newMatchingOptions\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiComboBox\",\n  \"props\": {\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectedOptions\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isClearable\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"singleSelection\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"bool\"\n        }, {\n          \"name\": \"shape\",\n          \"value\": {\n            \"asPlainText\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"async\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"noSuggestions\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onSearchChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onCreateOption\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"renderOption\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rowHeight\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"inputRef\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/combo_box/combo_box.js"],"names":["EuiComboBox","props","setState","isListOpen","clearActiveOption","listElement","state","_isMounted","listElementBounds","getBoundingClientRect","width","height","comboBoxBounds","comboBox","anchor","popover","position","allowCrossAxis","top","optionsList","style","left","window","pageXOffset","listPosition","amount","matchingOptions","length","activeOptionIndex","nextActiveOptionIndex","direction","isGroupLabelOption","onSearchChange","selectedOptions","searchValue","onRemoveOption","singleSelection","openList","isContainerBlur","options","onCreateOption","doesSearchMatchOnlyOption","onAddOption","isOptionCreated","clearSearchValue","isSingleSelectionCustomOption","closeList","label","toLowerCase","async","includes","onFocus","hasFocus","e","relatedTarget","explicitOriginalTarget","focusedInOptionsList","contains","focusedInInput","onBlur","hasActiveOption","addCustomOption","keyCode","comboBoxKeyCodes","UP","preventDefault","stopPropagation","incrementActiveOptionIndex","DOWN","BACKSPACE","removeLastOption","ESCAPE","ENTER","TAB","onKeyDown","option","addedOption","disabled","onChange","concat","searchInput","focus","removedOption","filter","indexOf","hasMatchingOptions","node","removeEventListener","onContainerBlur","addEventListener","autoSizeInput","inputRef","index","toggleButton","initialSearchValue","undefined","rootId","setTimeout","copyInputStyles","newMatchingOptions","areOptionsDifferent","i","updateMatchingOptionsIfDifferent","id","isDisabled","className","isLoading","placeholder","noSuggestions","renderOption","isInvalid","rowHeight","isClearable","fullWidth","compressed","dataTestSubj","rest","markAsInvalid","classes","value","map","selectedOption","join","optionsListDataTestSubj","optionsListRef","optionRef","onOptionClick","onOptionEnterKey","areAllOptionsSelected","getSelectedOptionForSearchValue","updateListPosition","comboBoxRef","onComboBoxClick","onComboBoxFocus","autoSizeInputRef","searchInputRef","clearSelectedOptions","onOpenListClick","onCloseListClick","toggleButtonRef","nextProps","prevState","stateUpdate","Component","PropTypes","string","bool","oneOfType","shape","asPlainText","array","func","number"],"mappings":"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","sourcesContent":["/**\n * Elements within EuiComboBox which would normally be tabbable (inputs, buttons) have been removed\n * from the tab order with tabindex=\"-1\" so that we can control the keyboard navigation interface.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  comboBoxKeyCodes,\n  findPopoverPosition,\n  htmlIdGenerator,\n} from '../../services';\nimport { BACKSPACE, TAB, ESCAPE } from '../../services/key_codes';\nimport { EuiPortal } from '../portal';\nimport { EuiComboBoxInput } from './combo_box_input';\nimport { EuiComboBoxOptionsList } from './combo_box_options_list';\n\nimport {\n  getMatchingOptions,\n  flattenOptionGroups,\n  getSelectedOptionForSearchValue,\n} from './matching_options';\n\nexport class EuiComboBox extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    isDisabled: PropTypes.bool,\n    className: PropTypes.string,\n    placeholder: PropTypes.string,\n    isLoading: PropTypes.bool,\n    async: PropTypes.bool,\n    singleSelection: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        asPlainText: PropTypes.bool,\n      }),\n    ]),\n    noSuggestions: PropTypes.bool,\n    options: PropTypes.array,\n    selectedOptions: PropTypes.array,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onSearchChange: PropTypes.func,\n    onCreateOption: PropTypes.func,\n    renderOption: PropTypes.func,\n    isInvalid: PropTypes.bool,\n    rowHeight: PropTypes.number,\n    isClearable: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    compressed: PropTypes.bool,\n    inputRef: PropTypes.func,\n  };\n\n  static defaultProps = {\n    options: [],\n    selectedOptions: [],\n    isClearable: true,\n    singleSelection: false,\n    fullWidth: false,\n    compressed: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const initialSearchValue = '';\n    const { options, selectedOptions, singleSelection } = props;\n\n    this.state = {\n      matchingOptions: getMatchingOptions(\n        options,\n        selectedOptions,\n        initialSearchValue,\n        props.async,\n        singleSelection\n      ),\n      listElement: undefined,\n      searchValue: initialSearchValue,\n      isListOpen: false,\n      listPosition: 'bottom',\n      activeOptionIndex: -1,\n      hasFocus: false,\n    };\n\n    this.rootId = htmlIdGenerator();\n\n    // Refs.\n    this.comboBox = undefined;\n    this.autoSizeInput = undefined;\n    this.searchInput = undefined;\n    this.optionsList = undefined;\n    this.options = [];\n  }\n\n  openList = () => {\n    this.setState({\n      isListOpen: true,\n    });\n  };\n\n  closeList = () => {\n    this.clearActiveOption();\n    this.setState({\n      isListOpen: false,\n    });\n  };\n\n  updateListPosition = (listElement = this.state.listElement) => {\n    if (!this._isMounted) {\n      return;\n    }\n\n    if (!this.state.isListOpen) {\n      return;\n    }\n\n    if (!listElement) {\n      return;\n    }\n\n    // it's possible that updateListPosition is called when listElement is becoming visible, but isn't yet\n    const listElementBounds = listElement.getBoundingClientRect();\n    if (listElementBounds.width === 0 || listElementBounds.height === 0) {\n      return;\n    }\n\n    const comboBoxBounds = this.comboBox.getBoundingClientRect();\n\n    const { position, top } = findPopoverPosition({\n      anchor: this.comboBox,\n      popover: listElement,\n      position: 'bottom',\n      allowCrossAxis: false,\n    });\n\n    this.optionsList.style.top = `${top}px`;\n    // listElement doesn't have its width set until after updating the position\n    // which means the popover service won't know about the correct width\n    // however, we already know where to position the element\n    this.optionsList.style.left = `${comboBoxBounds.left +\n      window.pageXOffset}px`;\n    this.optionsList.style.width = `${comboBoxBounds.width}px`;\n\n    // Cache for future calls.\n    this.setState({\n      listElement,\n      width: comboBoxBounds.width,\n      listPosition: position,\n    });\n  };\n\n  incrementActiveOptionIndex = amount => {\n    // If there are no options available, do nothing.\n    if (!this.state.matchingOptions.length) {\n      return;\n    }\n\n    this.setState(({ activeOptionIndex, matchingOptions }) => {\n      let nextActiveOptionIndex;\n\n      if (activeOptionIndex < 0) {\n        // If this is the beginning of the user's keyboard navigation of the menu, then we'll focus\n        // either the first or last item.\n        nextActiveOptionIndex = amount < 0 ? matchingOptions.length - 1 : 0;\n      } else {\n        nextActiveOptionIndex = activeOptionIndex + amount;\n\n        if (nextActiveOptionIndex < 0) {\n          nextActiveOptionIndex = matchingOptions.length - 1;\n        } else if (nextActiveOptionIndex === matchingOptions.length) {\n          nextActiveOptionIndex = 0;\n        }\n      }\n\n      // Group titles are included in option list but are not selectable\n      // Skip group title options\n      const direction = amount > 0 ? 1 : -1;\n      while (matchingOptions[nextActiveOptionIndex].isGroupLabelOption) {\n        nextActiveOptionIndex = nextActiveOptionIndex + direction;\n\n        if (nextActiveOptionIndex < 0) {\n          nextActiveOptionIndex = matchingOptions.length - 1;\n        } else if (nextActiveOptionIndex === matchingOptions.length) {\n          nextActiveOptionIndex = 0;\n        }\n      }\n\n      return { activeOptionIndex: nextActiveOptionIndex };\n    });\n  };\n\n  hasActiveOption = () => {\n    return (\n      this.state.activeOptionIndex > -1 &&\n      this.state.activeOptionIndex < this.state.matchingOptions.length\n    );\n  };\n\n  clearActiveOption = () => {\n    this.setState({\n      activeOptionIndex: -1,\n    });\n  };\n\n  clearSearchValue = () => {\n    this.onSearchChange('');\n  };\n\n  removeLastOption = () => {\n    if (!this.props.selectedOptions.length) {\n      return;\n    }\n\n    // Backspace will be used to delete the input, not a pill.\n    if (this.state.searchValue.length) {\n      return;\n    }\n\n    // Delete last pill.\n    this.onRemoveOption(\n      this.props.selectedOptions[this.props.selectedOptions.length - 1]\n    );\n\n    if (this.props.singleSelection && !this.state.isListOpen) {\n      this.openList();\n    }\n  };\n\n  addCustomOption = isContainerBlur => {\n    const {\n      options,\n      selectedOptions,\n      onCreateOption,\n      singleSelection,\n    } = this.props;\n\n    const { searchValue, matchingOptions } = this.state;\n\n    if (this.doesSearchMatchOnlyOption()) {\n      this.onAddOption(matchingOptions[0], isContainerBlur);\n      return;\n    }\n\n    if (!onCreateOption) {\n      return;\n    }\n\n    // Don't bother trying to create an option if the user hasn't typed anything.\n    if (!searchValue) {\n      return;\n    }\n\n    // Don't create the value if it's already been selected.\n    if (getSelectedOptionForSearchValue(searchValue, selectedOptions)) {\n      return;\n    }\n\n    // Add new custom pill if this is custom input, even if it partially matches an option..\n    const isOptionCreated = this.props.onCreateOption(\n      searchValue,\n      flattenOptionGroups(options)\n    );\n\n    // Expect the consumer to be explicit in rejecting a custom option.\n    if (isOptionCreated === false) {\n      return;\n    }\n\n    this.clearSearchValue();\n\n    if (\n      this.isSingleSelectionCustomOption() ||\n      (singleSelection && matchingOptions.length < 1)\n    ) {\n      // Adding a custom option to a single select that does not appear in the list of options\n      this.closeList();\n    }\n  };\n\n  doesSearchMatchOnlyOption = () => {\n    const { searchValue } = this.state;\n    if (this.state.matchingOptions.length !== 1) {\n      return false;\n    }\n    return (\n      this.state.matchingOptions[0].label.toLowerCase() ===\n      searchValue.toLowerCase()\n    );\n  };\n\n  areAllOptionsSelected = () => {\n    const { options, selectedOptions, async } = this.props;\n    // Assume if this is async then there could be infinite options.\n    if (async) {\n      return false;\n    }\n    return flattenOptionGroups(options).length === selectedOptions.length;\n  };\n\n  isSingleSelectionCustomOption = () => {\n    const {\n      onCreateOption,\n      options,\n      selectedOptions,\n      singleSelection,\n    } = this.props;\n    // The selected option of a single select is custom and does not appear in the list of options\n    return (\n      singleSelection &&\n      onCreateOption &&\n      selectedOptions.length > 0 &&\n      !options.includes(selectedOptions[0])\n    );\n  };\n\n  onComboBoxFocus = () => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n    if (!this.isSingleSelectionCustomOption()) {\n      this.openList();\n    }\n    this.setState({ hasFocus: true });\n  };\n\n  onContainerBlur = e => {\n    // close the options list, unless the use clicked on an option\n\n    // FireFox returns `relatedTarget` as `null` for security reasons, but provides a proprietary `explicitOriginalTarget`\n    const relatedTarget = e.relatedTarget || e.explicitOriginalTarget;\n    const focusedInOptionsList =\n      relatedTarget &&\n      this.optionsList &&\n      this.optionsList.contains(relatedTarget);\n    const focusedInInput =\n      relatedTarget && this.comboBox && this.comboBox.contains(relatedTarget);\n    if (!focusedInOptionsList && !focusedInInput) {\n      this.closeList();\n\n      if (this.props.onBlur) {\n        this.props.onBlur();\n      }\n      this.setState({ hasFocus: false });\n\n      // If the user tabs away or changes focus to another element, take whatever input they've\n      // typed and convert it into a pill, to prevent the combo box from looking like a text input.\n      if (!this.hasActiveOption()) {\n        this.addCustomOption(true);\n      }\n    }\n  };\n\n  onKeyDown = e => {\n    switch (e.keyCode) {\n      case comboBoxKeyCodes.UP:\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.state.isListOpen) {\n          this.incrementActiveOptionIndex(-1);\n        } else {\n          this.openList();\n        }\n        break;\n\n      case comboBoxKeyCodes.DOWN:\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.state.isListOpen) {\n          this.incrementActiveOptionIndex(1);\n        } else {\n          this.openList();\n        }\n        break;\n\n      case BACKSPACE:\n        e.stopPropagation();\n        this.removeLastOption();\n        break;\n\n      case ESCAPE:\n        e.stopPropagation();\n        this.closeList();\n        break;\n\n      case comboBoxKeyCodes.ENTER:\n        e.stopPropagation();\n        if (this.hasActiveOption()) {\n          this.onAddOption(\n            this.state.matchingOptions[this.state.activeOptionIndex]\n          );\n        } else {\n          this.addCustomOption();\n        }\n        break;\n\n      case TAB:\n        // Disallow tabbing when the user is navigating the options.\n        if (this.hasActiveOption() && this.state.isListOpen) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        break;\n\n      default:\n        if (this.props.onKeyDown) {\n          this.props.onKeyDown(e);\n        }\n    }\n  };\n\n  onOptionEnterKey = option => {\n    this.onAddOption(option);\n  };\n\n  onOptionClick = option => {\n    this.onAddOption(option);\n  };\n\n  onAddOption = (addedOption, isContainerBlur) => {\n    if (addedOption.disabled) {\n      return;\n    }\n\n    const { onChange, selectedOptions, singleSelection } = this.props;\n    onChange(\n      singleSelection ? [addedOption] : selectedOptions.concat(addedOption)\n    );\n\n    this.clearSearchValue();\n    this.clearActiveOption();\n\n    if (!isContainerBlur) {\n      this.searchInput.focus();\n    }\n\n    if (singleSelection) {\n      this.closeList();\n    }\n  };\n\n  onRemoveOption = removedOption => {\n    const { onChange, selectedOptions } = this.props;\n    onChange(selectedOptions.filter(option => option !== removedOption));\n\n    this.clearActiveOption();\n  };\n\n  clearSelectedOptions = () => {\n    this.props.onChange([]);\n    // Clicking the clear button will also cause it to disappear. This would result in focus\n    // shifting unexpectedly to the body element so we set it to the input which is more reasonable,\n    this.searchInput.focus();\n    if (!this.state.isListOpen) {\n      this.openList();\n    }\n  };\n\n  onComboBoxClick = () => {\n    // When the user clicks anywhere on the box, enter the interaction state.\n    this.searchInput.focus();\n\n    // If the user does this from a state in which an option has focus, then we need to reset it or clear it.\n    if (this.props.singleSelection && this.props.selectedOptions.length === 1) {\n      this.setState({\n        activeOptionIndex: this.state.matchingOptions.indexOf(\n          this.props.selectedOptions[0]\n        ),\n      });\n    } else {\n      this.clearActiveOption();\n    }\n  };\n\n  onOpenListClick = () => {\n    this.searchInput.focus();\n    if (!this.state.isListOpen) {\n      this.openList();\n    }\n  };\n\n  onCloseListClick = () => {\n    this.closeList();\n  };\n\n  onSearchChange = searchValue => {\n    if (this.props.onSearchChange) {\n      const hasMatchingOptions = this.state.matchingOptions.length > 0;\n      this.props.onSearchChange(searchValue, hasMatchingOptions);\n    }\n\n    this.setState({ searchValue }, () => {\n      if (searchValue && this.state.isListOpen === false) this.openList();\n    });\n  };\n\n  comboBoxRef = node => {\n    // IE11 doesn't support the `relatedTarget` event property for blur events\n    // but does add it for focusout. React doesn't support `onFocusOut` so here we are.\n    if (this.comboBox != null) {\n      this.comboBox.removeEventListener('focusout', this.onContainerBlur);\n    }\n\n    this.comboBox = node;\n\n    if (this.comboBox) {\n      this.comboBox.addEventListener('focusout', this.onContainerBlur);\n      const comboBoxBounds = this.comboBox.getBoundingClientRect();\n      this.setState({\n        width: comboBoxBounds.width,\n      });\n    }\n  };\n\n  autoSizeInputRef = node => {\n    this.autoSizeInput = node;\n  };\n\n  searchInputRef = node => {\n    this.searchInput = node;\n    if (this.props.inputRef) {\n      this.props.inputRef(node);\n    }\n  };\n\n  optionsListRef = node => {\n    this.optionsList = node;\n  };\n\n  optionRef = (index, node) => {\n    this.options[index] = node;\n  };\n\n  toggleButtonRef = node => {\n    this.toggleButton = node;\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    // TODO: This will need to be called once the actual stylesheet loads.\n    setTimeout(() => {\n      if (this.autoSizeInput) {\n        this.autoSizeInput.copyInputStyles();\n      }\n    }, 100);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { options, selectedOptions, singleSelection } = nextProps;\n    const { activeOptionIndex, searchValue } = prevState;\n\n    // Calculate and cache the options which match the searchValue, because we use this information\n    // in multiple places and it would be expensive to calculate repeatedly.\n    const matchingOptions = getMatchingOptions(\n      options,\n      selectedOptions,\n      searchValue,\n      nextProps.async,\n      singleSelection\n    );\n\n    const stateUpdate = { matchingOptions };\n\n    if (activeOptionIndex >= matchingOptions.length) {\n      stateUpdate.activeOptionIndex = -1;\n    }\n\n    return stateUpdate;\n  }\n\n  updateMatchingOptionsIfDifferent(newMatchingOptions) {\n    const { matchingOptions, activeOptionIndex } = this.state;\n    const { singleSelection, selectedOptions } = this.props;\n\n    let areOptionsDifferent = false;\n\n    if (matchingOptions.length !== newMatchingOptions.length) {\n      areOptionsDifferent = true;\n    } else {\n      for (let i = 0; i < matchingOptions.length; i++) {\n        if (matchingOptions[i].label !== newMatchingOptions[i].label) {\n          areOptionsDifferent = true;\n          break;\n        }\n      }\n    }\n\n    if (areOptionsDifferent) {\n      this.options = [];\n      let nextActiveOptionIndex = activeOptionIndex;\n      // ensure that the currently selected single option is active if it is in the matchingOptions\n      if (singleSelection && selectedOptions.length === 1) {\n        if (newMatchingOptions.includes(selectedOptions[0])) {\n          nextActiveOptionIndex = newMatchingOptions.indexOf(\n            selectedOptions[0]\n          );\n        }\n      }\n      this.setState({\n        matchingOptions: newMatchingOptions,\n        activeOptionIndex: nextActiveOptionIndex,\n      });\n\n      if (!newMatchingOptions.length) {\n        // Prevent endless setState -> componentWillUpdate -> setState loop.\n        if (this.hasActiveOption()) {\n          this.clearActiveOption();\n        }\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    const { options, selectedOptions, singleSelection } = this.props;\n    const { searchValue } = this.state;\n\n    // React 16.3 has a bug (fixed in 16.4) where getDerivedStateFromProps\n    // isn't called after a state change, and we track `searchValue` in state\n    // instead we need to react to a change in searchValue here\n    this.updateMatchingOptionsIfDifferent(\n      getMatchingOptions(\n        options,\n        selectedOptions,\n        searchValue,\n        this.props.async,\n        singleSelection\n      )\n    );\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      id,\n      isDisabled,\n      className,\n      isLoading,\n      options,\n      selectedOptions,\n      onCreateOption,\n      placeholder,\n      noSuggestions,\n      renderOption,\n      singleSelection,\n      onChange,\n      onSearchChange,\n      async,\n      onBlur,\n      inputRef,\n      isInvalid,\n      rowHeight,\n      isClearable,\n      fullWidth,\n      compressed,\n      'data-test-subj': dataTestSubj,\n      ...rest\n    } = this.props;\n    const {\n      hasFocus,\n      searchValue,\n      isListOpen,\n      listPosition,\n      width,\n      activeOptionIndex,\n    } = this.state;\n\n    // Visually indicate the combobox is in an invalid state if it has lost focus but there is text entered in the input.\n    // When custom options are disabled and the user leaves the combo box after entering text that does not match any\n    // options, this tells the user that they've entered invalid input.\n    const markAsInvalid =\n      isInvalid ||\n      ((hasFocus === false || isListOpen === false) && searchValue);\n\n    const classes = classNames('euiComboBox', className, {\n      'euiComboBox-isOpen': isListOpen,\n      'euiComboBox-isInvalid': markAsInvalid,\n      'euiComboBox-isDisabled': isDisabled,\n      'euiComboBox--fullWidth': fullWidth,\n      'euiComboBox--compressed': compressed,\n    });\n\n    const value = selectedOptions\n      .map(selectedOption => selectedOption.label)\n      .join(', ');\n\n    let optionsList;\n\n    if (!noSuggestions && isListOpen) {\n      const optionsListDataTestSubj = dataTestSubj\n        ? `${dataTestSubj}-optionsList`\n        : undefined;\n\n      optionsList = (\n        <EuiPortal>\n          <EuiComboBoxOptionsList\n            isLoading={isLoading}\n            options={options}\n            selectedOptions={selectedOptions}\n            onCreateOption={onCreateOption}\n            searchValue={searchValue}\n            matchingOptions={this.state.matchingOptions}\n            activeOptionIndex={this.state.activeOptionIndex}\n            listRef={this.optionsListRef}\n            optionRef={this.optionRef}\n            onOptionClick={this.onOptionClick}\n            onOptionEnterKey={this.onOptionEnterKey}\n            areAllOptionsSelected={this.areAllOptionsSelected()}\n            getSelectedOptionForSearchValue={getSelectedOptionForSearchValue}\n            updatePosition={this.updateListPosition}\n            position={listPosition}\n            renderOption={renderOption}\n            width={width}\n            scrollToIndex={activeOptionIndex}\n            rowHeight={rowHeight}\n            data-test-subj={optionsListDataTestSubj}\n            fullWidth={fullWidth}\n            rootId={this.rootId}\n            onCloseList={this.closeList}\n          />\n        </EuiPortal>\n      );\n    }\n\n    return (\n      /**\n       * Re: jsx-a11y/interactive-supports-focus\n       * Focus is managed and is placed on the textbox element (`EuiComboBoxInput`)\n       *\n       * Re: jsx-a11y/role-has-required-aria-props\n       * Expansion is managed and required `aria-controls` prop is placed on the textbox element (`EuiComboBoxInput`)\n       *\n       * Reference for both: https://www.w3.org/TR/2017/REC-wai-aria-1.1-20171214/#combobox,\n       * which verifies that this implementation follows the spec.\n       */\n      // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n      <div\n        {...rest}\n        className={classes}\n        onKeyDown={this.onKeyDown}\n        ref={this.comboBoxRef}\n        data-test-subj={dataTestSubj}\n        role=\"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\n        aria-haspopup=\"listbox\"\n        aria-expanded={isListOpen}>\n        <EuiComboBoxInput\n          id={id}\n          placeholder={placeholder}\n          selectedOptions={selectedOptions}\n          onRemoveOption={this.onRemoveOption}\n          onClick={this.onComboBoxClick}\n          onChange={this.onSearchChange}\n          onFocus={this.onComboBoxFocus}\n          value={value}\n          searchValue={searchValue}\n          autoSizeInputRef={this.autoSizeInputRef}\n          inputRef={this.searchInputRef}\n          updatePosition={this.updateListPosition}\n          onClear={\n            isClearable && !isDisabled ? this.clearSelectedOptions : undefined\n          }\n          hasSelectedOptions={selectedOptions.length > 0}\n          isListOpen={isListOpen}\n          onOpenListClick={this.onOpenListClick}\n          onCloseListClick={this.onCloseListClick}\n          singleSelection={singleSelection}\n          isDisabled={isDisabled}\n          toggleButtonRef={this.toggleButtonRef}\n          fullWidth={fullWidth}\n          noIcon={!!noSuggestions}\n          rootId={this.rootId}\n          focusedOptionId={\n            this.hasActiveOption()\n              ? this.rootId(`_option-${this.state.activeOptionIndex}`)\n              : null\n          }\n          compressed={compressed}\n        />\n\n        {optionsList}\n      </div>\n    );\n  }\n}\n"]}]}