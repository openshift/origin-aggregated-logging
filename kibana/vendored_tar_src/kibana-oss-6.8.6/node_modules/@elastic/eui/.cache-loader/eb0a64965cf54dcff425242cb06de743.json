{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/form/form_control_layout/form_control_layout.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/form/form_control_layout/form_control_layout.tsx","mtime":1565204169721},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ICON_SIDES\", {\n  enumerable: true,\n  get: function get() {\n    return _form_control_layout_icons.ICON_SIDES;\n  }\n});\nexports.EuiFormControlLayout = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _form_control_layout_icons = require(\"./form_control_layout_icons\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction isChildrenIsReactElement(append, prepend, children) {\n  return (!!append || !!prepend) && children != null;\n}\n\nvar EuiFormControlLayout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiFormControlLayout, _Component);\n\n  function EuiFormControlLayout() {\n    _classCallCheck(this, EuiFormControlLayout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EuiFormControlLayout).apply(this, arguments));\n  }\n\n  _createClass(EuiFormControlLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          icon = _this$props.icon,\n          clear = _this$props.clear,\n          fullWidth = _this$props.fullWidth,\n          isLoading = _this$props.isLoading,\n          isDisabled = _this$props.isDisabled,\n          compressed = _this$props.compressed,\n          className = _this$props.className,\n          prepend = _this$props.prepend,\n          append = _this$props.append,\n          readOnly = _this$props.readOnly,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"icon\", \"clear\", \"fullWidth\", \"isLoading\", \"isDisabled\", \"compressed\", \"className\", \"prepend\", \"append\", \"readOnly\"]);\n\n      var classes = (0, _classnames.default)('euiFormControlLayout', {\n        'euiFormControlLayout--fullWidth': fullWidth,\n        'euiFormControlLayout--compressed': compressed,\n        'euiFormControlLayout--readOnly': readOnly,\n        'euiFormControlLayout--group': prepend || append,\n        'euiFormControlLayout-isDisabled': isDisabled\n      }, className);\n      var prependNodes = this.renderPrepends();\n      var appendNodes = this.renderAppends();\n      var clonedChildren;\n\n      if (isChildrenIsReactElement(append, prepend, children)) {\n        clonedChildren = (0, _react.cloneElement)(children, {\n          className: \"\".concat(children.props.className, \" euiFormControlLayout__child--noStyle\")\n        });\n      }\n\n      return _react.default.createElement(\"div\", _extends({\n        className: classes\n      }, rest), prependNodes, _react.default.createElement(\"div\", {\n        className: \"euiFormControlLayout__childrenWrapper\"\n      }, clonedChildren || children, _react.default.createElement(_form_control_layout_icons.EuiFormControlLayoutIcons, {\n        icon: icon,\n        clear: clear,\n        isLoading: isLoading\n      })), appendNodes);\n    }\n  }, {\n    key: \"renderPrepends\",\n    value: function renderPrepends() {\n      var _this = this;\n\n      var prepend = this.props.prepend;\n\n      if (!prepend) {\n        return;\n      }\n\n      var prependNodes = _react.default.Children.map(prepend, function (item, index) {\n        return _this.createSideNode(item, 'prepend', index);\n      });\n\n      return prependNodes;\n    }\n  }, {\n    key: \"renderAppends\",\n    value: function renderAppends() {\n      var _this2 = this;\n\n      var append = this.props.append;\n\n      if (!append) {\n        return;\n      }\n\n      var appendNodes = _react.default.Children.map(append, function (item, index) {\n        return _this2.createSideNode(item, 'append', index);\n      });\n\n      return appendNodes;\n    }\n  }, {\n    key: \"createSideNode\",\n    value: function createSideNode(node, side, key) {\n      return (0, _react.cloneElement)(node, {\n        className: \"euiFormControlLayout__\".concat(side),\n        key: key\n      });\n    }\n  }]);\n\n  return EuiFormControlLayout;\n}(_react.Component);\n\nexports.EuiFormControlLayout = EuiFormControlLayout;\nEuiFormControlLayout.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n\n  /**\n       * Creates an input group with element(s) coming before children\n       */\n  prepend: _propTypes.default.oneOfType([_propTypes.default.element.isRequired, _propTypes.default.arrayOf(_propTypes.default.element.isRequired).isRequired]),\n\n  /**\n       * Creates an input group with element(s) coming after children\n       */\n  append: _propTypes.default.oneOfType([_propTypes.default.element.isRequired, _propTypes.default.arrayOf(_propTypes.default.element.isRequired).isRequired]),\n  icon: _propTypes.default.any,\n  clear: _propTypes.default.any,\n  fullWidth: _propTypes.default.bool,\n  isLoading: _propTypes.default.bool,\n  isDisabled: _propTypes.default.bool,\n  compressed: _propTypes.default.bool,\n  readOnly: _propTypes.default.bool\n};\nEuiFormControlLayout.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"renderPrepends\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"renderAppends\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"createSideNode\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }, {\n      \"name\": \"side\",\n      \"type\": null\n    }, {\n      \"name\": \"key\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiFormControlLayout\",\n  \"props\": {\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"prepend\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"element\"\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming before children\"\n    },\n    \"append\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"element\"\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming after children\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"clear\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullWidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"readOnly\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/form/form_control_layout/form_control_layout.tsx"],"names":["isChildrenIsReactElement","append","prepend","children","EuiFormControlLayout","props","icon","clear","fullWidth","isLoading","isDisabled","compressed","className","readOnly","rest","classes","prependNodes","renderPrepends","appendNodes","renderAppends","clonedChildren","React","Children","map","item","index","createSideNode","node","side","key","Component"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiFormControlLayoutIcons } from './form_control_layout_icons';\nexport { ICON_SIDES } from './form_control_layout_icons';\n\nfunction isChildrenIsReactElement(append, prepend, children) {\n  return (!!append || !!prepend) && children != null;\n}\n\nexport class EuiFormControlLayout extends Component {\n  render() {\n    const {\n      children,\n      icon,\n      clear,\n      fullWidth,\n      isLoading,\n      isDisabled,\n      compressed,\n      className,\n      prepend,\n      append,\n      readOnly,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiFormControlLayout', {\n      'euiFormControlLayout--fullWidth': fullWidth,\n      'euiFormControlLayout--compressed': compressed,\n      'euiFormControlLayout--readOnly': readOnly,\n      'euiFormControlLayout--group': prepend || append,\n      'euiFormControlLayout-isDisabled': isDisabled\n    }, className);\n    const prependNodes = this.renderPrepends();\n    const appendNodes = this.renderAppends();\n    let clonedChildren;\n\n    if (isChildrenIsReactElement(append, prepend, children)) {\n      clonedChildren = cloneElement(children, {\n        className: `${children.props.className} euiFormControlLayout__child--noStyle`\n      });\n    }\n\n    return <div className={classes} {...rest}>\n        {prependNodes}\n        <div className=\"euiFormControlLayout__childrenWrapper\">\n          {clonedChildren || children}\n\n          <EuiFormControlLayoutIcons icon={icon} clear={clear} isLoading={isLoading} />\n        </div>\n        {appendNodes}\n      </div>;\n  }\n\n  renderPrepends() {\n    const {\n      prepend\n    } = this.props;\n\n    if (!prepend) {\n      return;\n    }\n\n    const prependNodes = React.Children.map(prepend, (item, index) => this.createSideNode(item, 'prepend', index));\n    return prependNodes;\n  }\n\n  renderAppends() {\n    const {\n      append\n    } = this.props;\n\n    if (!append) {\n      return;\n    }\n\n    const appendNodes = React.Children.map(append, (item, index) => this.createSideNode(item, 'append', index));\n    return appendNodes;\n  }\n\n  createSideNode(node, side, key) {\n    return cloneElement(node, {\n      className: `euiFormControlLayout__${side}`,\n      key: key\n    });\n  }\n\n}\nEuiFormControlLayout.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * Creates an input group with element(s) coming before children\n       */\n  prepend: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.arrayOf(PropTypes.element.isRequired).isRequired]),\n\n  /**\n       * Creates an input group with element(s) coming after children\n       */\n  append: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.arrayOf(PropTypes.element.isRequired).isRequired]),\n  icon: PropTypes.any,\n  clear: PropTypes.any,\n  fullWidth: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  compressed: PropTypes.bool,\n  readOnly: PropTypes.bool\n};"]}]}