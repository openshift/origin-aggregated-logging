{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer_example.js","mtime":1565204169515},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MutationObserverExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _mutation_observer = require(\"./mutation_observer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mutationObserverSource = require('!!raw-loader!./mutation_observer');\n\nvar mutationObserverHtml = (0, _services.renderToHtml)(_mutation_observer.MutationObserver);\nvar MutationObserverExample = {\n  title: 'MutationObserver',\n  sections: [{\n    title: 'MutationObserver',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: mutationObserverSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: mutationObserverHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), \" is a wrapper around the\", _react.default.createElement(_components2.EuiLink, {\n      href: \"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\"\n    }, ' ', \"Mutation Observer API\", ' '), \"which allows watching for DOM changes to elements and their children.\", _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), \" takes the same configuration object as the browser API to describe what to watch for, and fires the callback when that mutation happens.\"), _react.default.createElement(\"p\", null, \"This is a render prop component, \", _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), ' ', \"will pass a \", _react.default.createElement(_components2.EuiCode, null, \"ref\"), \"callback which you must put on the element you wish to observe the mutations.\")),\n    components: {\n      EuiMutationObserver: _components2.EuiMutationObserver\n    },\n    demo: _react.default.createElement(_mutation_observer.MutationObserver, null)\n  }]\n};\nexports.MutationObserverExample = MutationObserverExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/mutation_observer/mutation_observer_example.js"],"names":["mutationObserverSource","require","mutationObserverHtml","MutationObserver","MutationObserverExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","components","EuiMutationObserver","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAMA;;;;AACA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,kCAAD,CAAtC;;AACA,IAAMC,oBAAoB,GAAG,4BAAaC,mCAAb,CAA7B;AAEO,IAAMC,uBAAuB,GAAG;AACrCC,EAAAA,KAAK,EAAE,kBAD8B;AAErCC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,KAAK,EAAE,kBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,6BAAC,cAAD,CAAO,QAAP,QACE,wCACE,6BAAC,oBAAD,2BADF,8BAEE,6BAAC,oBAAD;AAAS,MAAA,IAAI,EAAC;AAAd,OACG,GADH,2BAEwB,GAFxB,CAFF,2EAQE,6BAAC,oBAAD,2BARF,8IADF,EAaE,6EACmC,6BAAC,oBAAD,2BADnC,EACuE,GADvE,kBAEc,6BAAC,oBAAD,cAFd,kFAbF,CAbJ;AAkCEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,mBAAmB,EAAnBA;AAAF,KAlCd;AAmCEC,IAAAA,IAAI,EAAE,6BAAC,mCAAD;AAnCR,GADQ;AAF2B,CAAhC","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiLink,\n  EuiMutationObserver,\n} from '../../../../src/components';\n\nimport { MutationObserver } from './mutation_observer';\nconst mutationObserverSource = require('!!raw-loader!./mutation_observer');\nconst mutationObserverHtml = renderToHtml(MutationObserver);\n\nexport const MutationObserverExample = {\n  title: 'MutationObserver',\n  sections: [\n    {\n      title: 'MutationObserver',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: mutationObserverSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: mutationObserverHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            <EuiCode>MutationObserver</EuiCode> is a wrapper around the\n            <EuiLink href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\">\n              {' '}\n              Mutation Observer API{' '}\n            </EuiLink>\n            which allows watching for DOM changes to elements and their\n            children.\n            <EuiCode>MutationObserver</EuiCode> takes the same configuration\n            object as the browser API to describe what to watch for, and fires\n            the callback when that mutation happens.\n          </p>\n          <p>\n            This is a render prop component, <EuiCode>MutationObserver</EuiCode>{' '}\n            will pass a <EuiCode>ref</EuiCode>\n            callback which you must put on the element you wish to observe the\n            mutations.\n          </p>\n        </React.Fragment>\n      ),\n      components: { EuiMutationObserver },\n      demo: <MutationObserver />,\n    },\n  ],\n};\n"]}]}