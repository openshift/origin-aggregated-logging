{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/resize_observer/resize_observer_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/resize_observer/resize_observer_example.js","mtime":1565204169534},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResizeObserverExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _resize_observer = require(\"./resize_observer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar resizeObserverSource = require('!!raw-loader!./resize_observer');\n\nvar resizeObserverHtml = (0, _services.renderToHtml)(_resize_observer.ResizeObserverExample);\nvar ResizeObserverExample = {\n  title: 'ResizeObserver',\n  sections: [{\n    title: 'ResizeObserver',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: resizeObserverSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: resizeObserverHtml\n    }],\n    text: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"ResizeObserver\"), \" is a wrapper around the\", _react.default.createElement(_components2.EuiLink, {\n      href: \"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"\n    }, ' ', \"Resizer Observer API\", ' '), \"which allows watching for changes to the content rectangle of DOM elements. Unlike \", _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), \",\", ' ', _react.default.createElement(_components2.EuiCode, null, \"ResizeObserver\"), \" does not take parameters, but it does fire a more efficient and informative callback when resize events occur.\"), _react.default.createElement(\"p\", null, \"This is a render prop component, \", _react.default.createElement(_components2.EuiCode, null, \"ResizeObserver\"), ' ', \"will pass a \", _react.default.createElement(_components2.EuiCode, null, \"ref\"), \"callback which you must put on the element you wish to observe.\"), _react.default.createElement(\"p\", null, \"Due to limited browser support (currently supported in Chrome and Opera), \", _react.default.createElement(_components2.EuiCode, null, \"EuiResizeObserver\"), \" will fallback to using the \", _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), \" API with a default set of parameters that approximate the results of\", ' ', _react.default.createElement(_components2.EuiCode, null, \"MutationObserver\"), \".\")),\n    components: {\n      EuiResizeObserver: _components2.EuiResizeObserver\n    },\n    demo: _react.default.createElement(_resize_observer.ResizeObserverExample, null)\n  }]\n};\nexports.ResizeObserverExample = ResizeObserverExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/resize_observer/resize_observer_example.js"],"names":["resizeObserverSource","require","resizeObserverHtml","ResizeObserver","ResizeObserverExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","components","EuiResizeObserver","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAMA;;;;AACA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,gCAAD,CAApC;;AACA,IAAMC,kBAAkB,GAAG,4BAAaC,sCAAb,CAA3B;AAEO,IAAMC,qBAAqB,GAAG;AACnCC,EAAAA,KAAK,EAAE,gBAD4B;AAEnCC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,KAAK,EAAE,gBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CAFV;AAYEW,IAAAA,IAAI,EACF,6BAAC,cAAD,CAAO,QAAP,QACE,wCACE,6BAAC,oBAAD,yBADF,8BAEE,6BAAC,oBAAD;AAAS,MAAA,IAAI,EAAC;AAAd,OACG,GADH,0BAEuB,GAFvB,CAFF,yFAOmB,6BAAC,oBAAD,2BAPnB,OAOwD,GAPxD,EAQE,6BAAC,oBAAD,yBARF,oHADF,EAaE,6EACmC,6BAAC,oBAAD,yBADnC,EACqE,GADrE,kBAEc,6BAAC,oBAAD,cAFd,oEAbF,EAkBE,sHAEU,6BAAC,oBAAD,4BAFV,kCAGM,6BAAC,oBAAD,2BAHN,2EAI6C,GAJ7C,EAKE,6BAAC,oBAAD,2BALF,MAlBF,CAbJ;AAwCEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,iBAAiB,EAAjBA;AAAF,KAxCd;AAyCEC,IAAAA,IAAI,EAAE,6BAAC,sCAAD;AAzCR,GADQ;AAFyB,CAA9B","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiLink,\n  EuiResizeObserver,\n} from '../../../../src/components';\n\nimport { ResizeObserverExample as ResizeObserver } from './resize_observer';\nconst resizeObserverSource = require('!!raw-loader!./resize_observer');\nconst resizeObserverHtml = renderToHtml(ResizeObserver);\n\nexport const ResizeObserverExample = {\n  title: 'ResizeObserver',\n  sections: [\n    {\n      title: 'ResizeObserver',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: resizeObserverSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: resizeObserverHtml,\n        },\n      ],\n      text: (\n        <React.Fragment>\n          <p>\n            <EuiCode>ResizeObserver</EuiCode> is a wrapper around the\n            <EuiLink href=\"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\">\n              {' '}\n              Resizer Observer API{' '}\n            </EuiLink>\n            which allows watching for changes to the content rectangle of DOM\n            elements. Unlike <EuiCode>MutationObserver</EuiCode>,{' '}\n            <EuiCode>ResizeObserver</EuiCode> does not take parameters, but it\n            does fire a more efficient and informative callback when resize\n            events occur.\n          </p>\n          <p>\n            This is a render prop component, <EuiCode>ResizeObserver</EuiCode>{' '}\n            will pass a <EuiCode>ref</EuiCode>\n            callback which you must put on the element you wish to observe.\n          </p>\n          <p>\n            Due to limited browser support (currently supported in Chrome and\n            Opera), <EuiCode>EuiResizeObserver</EuiCode> will fallback to using\n            the <EuiCode>MutationObserver</EuiCode> API with a default set of\n            parameters that approximate the results of{' '}\n            <EuiCode>MutationObserver</EuiCode>.\n          </p>\n        </React.Fragment>\n      ),\n      components: { EuiResizeObserver },\n      demo: <ResizeObserver />,\n    },\n  ],\n};\n"]}]}