{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/utils/prop_types/is.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/utils/prop_types/is.ts","mtime":1565204170086},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.is = void 0;\n\nvar _predicate = require(\"../../services/predicate\");\n\nvar is = function is(expectedValue) {\n  var validator = function validator(props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if (value !== expectedValue) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is expected to equal [\").concat(expectedValue, \"] but\\n         [\").concat(value, \"] was provided instead.\"));\n    }\n\n    return null;\n  };\n\n  validator.isRequired = function (props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if ((0, _predicate.isNil)(value)) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is required but seems to be missing\"));\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  return validator;\n};\n\nexports.is = is;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/utils/prop_types/is.ts"],"names":["is","expectedValue","validator","props","propName","componentName","compName","value","Error","isRequired"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,EAAE,GAAI,SAANA,EAAM,CAAGC,aAAH,EAA0B;AAC3C,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAWC,QAAX,EAA8BC,aAA9B,EAAwD;AACxE,QAAMC,QAAQ,GAAGD,aAAa,IAAI,WAAlC;AACA,QAAME,KAAK,GAAGJ,KAAK,CAACC,QAAD,CAAnB;;AACA,QAAIG,KAAK,KAAKN,aAAd,EAA6B;AAC3B,aAAO,IAAIO,KAAJ,YAAcJ,QAAd,4BAAwCE,QAAxC,+CAAqFL,aAArF,8BACDM,KADC,6BAAP;AAED;;AACD,WAAO,IAAP;AACD,GARD;;AAUAL,EAAAA,SAAS,CAACO,UAAV,GAAuB,UACrBN,KADqB,EAErBC,QAFqB,EAGrBC,aAHqB,EAIlB;AACH,QAAMC,QAAQ,GAAGD,aAAa,IAAI,WAAlC;AACA,QAAME,KAAK,GAAGJ,KAAK,CAACC,QAAD,CAAnB;;AACA,QAAI,sBAAMG,KAAN,CAAJ,EAAkB;AAChB,aAAO,IAAIC,KAAJ,YACDJ,QADC,4BACyBE,QADzB,qDAAP;AAGD;;AACD,WAAOJ,SAAS,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,CAAhB;AACD,GAbD;;AAeA,SAAOH,SAAP;AACD,CA3BM","sourcesContent":["import { isNil } from '../../services/predicate';\n\nexport const is = <T>(expectedValue: any) => {\n  const validator = (props: T, propName: keyof T, componentName: string) => {\n    const compName = componentName || 'ANONYMOUS';\n    const value = props[propName];\n    if (value !== expectedValue) {\n      return new Error(`[${propName}] property in [${compName}] component is expected to equal [${expectedValue}] but\n         [${value}] was provided instead.`);\n    }\n    return null;\n  };\n\n  validator.isRequired = (\n    props: T,\n    propName: keyof T,\n    componentName: string\n  ) => {\n    const compName = componentName || 'ANONYMOUS';\n    const value = props[propName];\n    if (isNil(value)) {\n      return new Error(\n        `[${propName}] property in [${compName}] component is required but seems to be missing`\n      );\n    }\n    return validator(props, propName, componentName);\n  };\n\n  return validator;\n};\n"]}]}