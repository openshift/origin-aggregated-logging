{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/components/guide_theme_selector/guide_theme_selector.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/components/guide_theme_selector/guide_theme_selector.js","mtime":1565204169418},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GuideThemeSelector = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _components = require(\"../../../../src/components\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar GuideThemeSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GuideThemeSelector, _Component);\n\n  function GuideThemeSelector(props) {\n    var _this;\n\n    _classCallCheck(this, GuideThemeSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GuideThemeSelector).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    });\n\n    _this.themeOptions = [{\n      text: 'Light',\n      value: 'light'\n    }, {\n      text: 'Dark',\n      value: 'dark'\n    }];\n    _this.state = {\n      value: _this.themeOptions[0].value\n    };\n    return _this;\n  }\n\n  _createClass(GuideThemeSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_components.EuiFormRow, {\n        label: \"Theme\"\n      }, _react.default.createElement(_components.EuiSelect, {\n        options: this.themeOptions,\n        value: this.props.selectedTheme,\n        onChange: function onChange(e) {\n          _this2.props.onToggleTheme(e.target.value);\n        },\n        \"aria-label\": \"Switch the theme\"\n      }));\n    }\n  }]);\n\n  return GuideThemeSelector;\n}(_react.Component);\n\nexports.GuideThemeSelector = GuideThemeSelector;\nGuideThemeSelector.propTypes = {\n  onToggleTheme: _propTypes.default.func.isRequired,\n  selectedTheme: _propTypes.default.string.isRequired\n};\nGuideThemeSelector.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"GuideThemeSelector\",\n  \"props\": {\n    \"onToggleTheme\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTheme\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/components/guide_theme_selector/guide_theme_selector.js"],"names":["GuideThemeSelector","props","e","setState","value","target","themeOptions","text","state","selectedTheme","onToggleTheme","Component","propTypes","PropTypes","func","isRequired","string"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,kB;;;;;AACX,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;;AADiB,uFAmBR,UAAAC,CAAC,EAAI;AACd,YAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AADJ,OAAd;AAGD,KAvBkB;;AAGjB,UAAKE,YAAL,GAAoB,CAClB;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEH,MAAAA,KAAK,EAAE;AAFT,KADkB,EAKlB;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEH,MAAAA,KAAK,EAAE;AAFT,KALkB,CAApB;AAWA,UAAKI,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,MAAKE,YAAL,CAAkB,CAAlB,EAAqBF;AADjB,KAAb;AAdiB;AAiBlB;;;;6BAQQ;AAAA;;AACP,aACE,6BAAC,sBAAD;AAAY,QAAA,KAAK,EAAC;AAAlB,SACE,6BAAC,qBAAD;AACE,QAAA,OAAO,EAAE,KAAKE,YADhB;AAEE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWQ,aAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAP,CAAC,EAAI;AACb,UAAA,MAAI,CAACD,KAAL,CAAWS,aAAX,CAAyBR,CAAC,CAACG,MAAF,CAASD,KAAlC;AACD,SALH;AAME,sBAAW;AANb,QADF,CADF;AAYD;;;;EAvCqCO,gB;;;AA0CxCX,kBAAkB,CAACY,SAAnB,GAA+B;AAC7BF,EAAAA,aAAa,EAAEG,mBAAUC,IAAV,CAAeC,UADD;AAE7BN,EAAAA,aAAa,EAAEI,mBAAUG,MAAV,CAAiBD;AAFH,CAA/B","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EuiSelect, EuiFormRow } from '../../../../src/components';\n\nexport class GuideThemeSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.themeOptions = [\n      {\n        text: 'Light',\n        value: 'light',\n      },\n      {\n        text: 'Dark',\n        value: 'dark',\n      },\n    ];\n\n    this.state = {\n      value: this.themeOptions[0].value,\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <EuiFormRow label=\"Theme\">\n        <EuiSelect\n          options={this.themeOptions}\n          value={this.props.selectedTheme}\n          onChange={e => {\n            this.props.onToggleTheme(e.target.value);\n          }}\n          aria-label=\"Switch the theme\"\n        />\n      </EuiFormRow>\n    );\n  }\n}\n\nGuideThemeSelector.propTypes = {\n  onToggleTheme: PropTypes.func.isRequired,\n  selectedTheme: PropTypes.string.isRequired,\n};\n"]}]}