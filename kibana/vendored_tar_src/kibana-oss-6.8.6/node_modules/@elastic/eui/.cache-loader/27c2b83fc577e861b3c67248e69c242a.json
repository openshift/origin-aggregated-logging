{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/context_menu/context_menu_item.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/context_menu/context_menu_item.tsx","mtime":1567626462141},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiContextMenuItem = exports.LAYOUT_ALIGN = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _common = require(\"../common\");\n\nvar _icon = require(\"../icon\");\n\nvar _tool_tip = require(\"../tool_tip\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar layoutAlignToClassNames = {\n  center: null,\n  top: 'euiContextMenu__itemLayout--top',\n  bottom: 'euiContextMenu__itemLayout--bottom'\n};\nvar LAYOUT_ALIGN = (0, _common.keysOf)(layoutAlignToClassNames);\nexports.LAYOUT_ALIGN = LAYOUT_ALIGN;\n\nvar EuiContextMenuItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiContextMenuItem, _Component);\n\n  function EuiContextMenuItem() {\n    _classCallCheck(this, EuiContextMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EuiContextMenuItem).apply(this, arguments));\n  }\n\n  _createClass(EuiContextMenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          hasPanel = _this$props.hasPanel,\n          icon = _this$props.icon,\n          buttonRef = _this$props.buttonRef,\n          disabled = _this$props.disabled,\n          _this$props$layoutAli = _this$props.layoutAlign,\n          layoutAlign = _this$props$layoutAli === void 0 ? 'center' : _this$props$layoutAli,\n          toolTipTitle = _this$props.toolTipTitle,\n          toolTipContent = _this$props.toolTipContent,\n          _this$props$toolTipPo = _this$props.toolTipPosition,\n          toolTipPosition = _this$props$toolTipPo === void 0 ? 'right' : _this$props$toolTipPo,\n          href = _this$props.href,\n          target = _this$props.target,\n          rel = _this$props.rel,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"hasPanel\", \"icon\", \"buttonRef\", \"disabled\", \"layoutAlign\", \"toolTipTitle\", \"toolTipContent\", \"toolTipPosition\", \"href\", \"target\", \"rel\"]);\n\n      var iconInstance;\n\n      if (icon) {\n        switch (_typeof(icon)) {\n          case 'string':\n            iconInstance = _react.default.createElement(_icon.EuiIcon, {\n              type: icon,\n              size: \"m\",\n              className: \"euiContextMenu__icon\"\n            });\n            break;\n\n          default:\n            // Assume it's already an instance of an icon.\n            iconInstance = (0, _react.cloneElement)(icon, {\n              className: 'euiContextMenu__icon'\n            });\n        }\n      }\n\n      var arrow;\n\n      if (hasPanel) {\n        arrow = _react.default.createElement(_icon.EuiIcon, {\n          type: \"arrowRight\",\n          size: \"m\",\n          className: \"euiContextMenu__arrow\"\n        });\n      }\n\n      var classes = (0, _classnames.default)('euiContextMenuItem', className, {\n        'euiContextMenuItem-isDisabled': disabled\n      });\n      var layoutClasses = (0, _classnames.default)('euiContextMenu__itemLayout', layoutAlignToClassNames[layoutAlign]);\n\n      var buttonInner = _react.default.createElement(\"span\", {\n        className: layoutClasses\n      }, iconInstance, _react.default.createElement(\"span\", {\n        className: \"euiContextMenuItem__text\"\n      }, children), arrow);\n\n      var button; // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n      // this is a button and piggyback off its disabled styles.\n\n      if (href && !disabled) {\n        var secureRel = (0, _services.getSecureRelForTarget)({\n          href: href,\n          target: target,\n          rel: rel\n        });\n        button = _react.default.createElement(\"a\", _extends({\n          className: classes,\n          href: href,\n          target: target,\n          rel: secureRel,\n          ref: buttonRef\n        }, rest), buttonInner);\n      } else {\n        button = _react.default.createElement(\"button\", _extends({\n          disabled: disabled,\n          className: classes,\n          type: \"button\",\n          ref: buttonRef\n        }, rest), buttonInner);\n      }\n\n      if (toolTipContent) {\n        return _react.default.createElement(_tool_tip.EuiToolTip, {\n          title: toolTipTitle ? toolTipTitle : null,\n          content: toolTipContent,\n          anchorClassName: \"eui-displayBlock\",\n          position: toolTipPosition\n        }, button);\n      } else {\n        return button;\n      }\n    }\n  }]);\n\n  return EuiContextMenuItem;\n}(_react.Component);\n\nexports.EuiContextMenuItem = EuiContextMenuItem;\nEuiContextMenuItem.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  icon: _propTypes.default.oneOfType([_propTypes.default.element.isRequired, _propTypes.default.string.isRequired, _propTypes.default.any.isRequired]),\n  hasPanel: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  onClick: _propTypes.default.func,\n  buttonRef: _propTypes.default.any,\n\n  /**\n     * Required if using a tooltip. Add an optional tooltip on hover\n     */\n  toolTipContent: _propTypes.default.node,\n\n  /**\n     * Optional title for the tooltip\n     */\n  toolTipTitle: _propTypes.default.node,\n\n  /**\n     * Dictates the position of the tooltip.\n     */\n  toolTipPosition: _propTypes.default.oneOf([\"top\", \"right\", \"bottom\", \"left\"]),\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  rel: _propTypes.default.string,\n\n  /**\n     * How to align icon with content of button\n     */\n  layoutAlign: _propTypes.default.oneOf([\"center\", \"top\", \"bottom\"])\n};\nEuiContextMenuItem.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiContextMenuItem\",\n  \"props\": {\n    \"className\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"_propTypes.default.string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"string\"\n        }, {\n          \"name\": \"any\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasPanel\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buttonRef\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"toolTipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Required if using a tooltip. Add an optional tooltip on hover\"\n    },\n    \"toolTipTitle\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title for the tooltip\"\n    },\n    \"toolTipPosition\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"top\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"bottom\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Dictates the position of the tooltip.\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"target\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"rel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"layoutAlign\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"top\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"bottom\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"How to align icon with content of button\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/context_menu/context_menu_item.tsx"],"names":["layoutAlignToClassNames","center","top","bottom","LAYOUT_ALIGN","EuiContextMenuItem","props","children","className","hasPanel","icon","buttonRef","disabled","layoutAlign","toolTipTitle","toolTipContent","toolTipPosition","href","target","rel","rest","iconInstance","arrow","classes","layoutClasses","buttonInner","button","secureRel","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;AASA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,IAAMA,uBAAsE,GAAG;AAC7EC,EAAAA,MAAM,EAAE,IADqE;AAE7EC,EAAAA,GAAG,EAAE,iCAFwE;AAG7EC,EAAAA,MAAM,EAAE;AAHqE,CAA/E;AAMO,IAAMC,YAAY,GAAG,oBAAOJ,uBAAP,CAArB;;;IAEMK,kB;;;;;;;;;;;;;6BACF;AAAA,wBAgBH,KAAKC,KAhBF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,IALK,eAKLA,IALK;AAAA,UAMLC,SANK,eAMLA,SANK;AAAA,UAOLC,QAPK,eAOLA,QAPK;AAAA,8CAQLC,WARK;AAAA,UAQLA,WARK,sCAQS,QART;AAAA,UASLC,YATK,eASLA,YATK;AAAA,UAULC,cAVK,eAULA,cAVK;AAAA,8CAWLC,eAXK;AAAA,UAWLA,eAXK,sCAWa,OAXb;AAAA,UAYLC,IAZK,eAYLA,IAZK;AAAA,UAaLC,MAbK,eAaLA,MAbK;AAAA,UAcLC,GAdK,eAcLA,GAdK;AAAA,UAeFC,IAfE;;AAkBP,UAAIC,YAAJ;;AAEA,UAAIX,IAAJ,EAAU;AACR,wBAAeA,IAAf;AACE,eAAK,QAAL;AACEW,YAAAA,YAAY,GACV,6BAAC,aAAD;AAAS,cAAA,IAAI,EAAEX,IAAf;AAAqB,cAAA,IAAI,EAAC,GAA1B;AAA8B,cAAA,SAAS,EAAC;AAAxC,cADF;AAGA;;AAEF;AACE;AACAW,YAAAA,YAAY,GAAG,yBAAaX,IAAb,EAAmC;AAChDF,cAAAA,SAAS,EAAE;AADqC,aAAnC,CAAf;AATJ;AAaD;;AAED,UAAIc,KAAJ;;AAEA,UAAIb,QAAJ,EAAc;AACZa,QAAAA,KAAK,GACH,6BAAC,aAAD;AAAS,UAAA,IAAI,EAAC,YAAd;AAA2B,UAAA,IAAI,EAAC,GAAhC;AAAoC,UAAA,SAAS,EAAC;AAA9C,UADF;AAGD;;AAED,UAAMC,OAAO,GAAG,yBAAW,oBAAX,EAAiCf,SAAjC,EAA4C;AAC1D,yCAAiCI;AADyB,OAA5C,CAAhB;AAIA,UAAMY,aAAa,GAAG,yBACpB,4BADoB,EAEpBxB,uBAAuB,CAACa,WAAD,CAFH,CAAtB;;AAKA,UAAMY,WAAW,GACf;AAAM,QAAA,SAAS,EAAED;AAAjB,SACGH,YADH,EAEE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA4Cd,QAA5C,CAFF,EAGGe,KAHH,CADF;;AAQA,UAAII,MAAJ,CA7DO,CA8DP;AACA;;AACA,UAAIT,IAAI,IAAI,CAACL,QAAb,EAAuB;AACrB,YAAMe,SAAS,GAAG,qCAAsB;AAAEV,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,MAAM,EAANA,MAAR;AAAgBC,UAAAA,GAAG,EAAHA;AAAhB,SAAtB,CAAlB;AAEAO,QAAAA,MAAM,GACJ;AACE,UAAA,SAAS,EAAEH,OADb;AAEE,UAAA,IAAI,EAAEN,IAFR;AAGE,UAAA,MAAM,EAAEC,MAHV;AAIE,UAAA,GAAG,EAAES,SAJP;AAKE,UAAA,GAAG,EAAEhB;AALP,WAMMS,IANN,GAOGK,WAPH,CADF;AAWD,OAdD,MAcO;AACLC,QAAAA,MAAM,GACJ;AACE,UAAA,QAAQ,EAAEd,QADZ;AAEE,UAAA,SAAS,EAAEW,OAFb;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,GAAG,EAAEZ;AAJP,WAKMS,IALN,GAMGK,WANH,CADF;AAUD;;AAED,UAAIV,cAAJ,EAAoB;AAClB,eACE,6BAAC,oBAAD;AACE,UAAA,KAAK,EAAED,YAAY,GAAGA,YAAH,GAAkB,IADvC;AAEE,UAAA,OAAO,EAAEC,cAFX;AAGE,UAAA,eAAe,EAAC,kBAHlB;AAIE,UAAA,QAAQ,EAAEC;AAJZ,WAKGU,MALH,CADF;AASD,OAVD,MAUO;AACL,eAAOA,MAAP;AACD;AACF;;;;EAzGqCE,gB","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiIcon } from '../icon';\nimport { EuiToolTip } from '../tool_tip';\nimport { getSecureRelForTarget } from '../../services';\nvar layoutAlignToClassNames = {\n  center: null,\n  top: 'euiContextMenu__itemLayout--top',\n  bottom: 'euiContextMenu__itemLayout--bottom'\n};\nexport var LAYOUT_ALIGN = keysOf(layoutAlignToClassNames);\nexport class EuiContextMenuItem extends Component {\n  render() {\n    const {\n      children,\n      className,\n      hasPanel,\n      icon,\n      buttonRef,\n      disabled,\n      layoutAlign = 'center',\n      toolTipTitle,\n      toolTipContent,\n      toolTipPosition = 'right',\n      href,\n      target,\n      rel,\n      ...rest\n    } = this.props;\n    let iconInstance;\n\n    if (icon) {\n      switch (typeof icon) {\n        case 'string':\n          iconInstance = <EuiIcon type={icon} size=\"m\" className=\"euiContextMenu__icon\" />;\n          break;\n\n        default:\n          // Assume it's already an instance of an icon.\n          iconInstance = cloneElement(icon, {\n            className: 'euiContextMenu__icon'\n          });\n      }\n    }\n\n    let arrow;\n\n    if (hasPanel) {\n      arrow = <EuiIcon type=\"arrowRight\" size=\"m\" className=\"euiContextMenu__arrow\" />;\n    }\n\n    const classes = classNames('euiContextMenuItem', className, {\n      'euiContextMenuItem-isDisabled': disabled\n    });\n    const layoutClasses = classNames('euiContextMenu__itemLayout', layoutAlignToClassNames[layoutAlign]);\n    const buttonInner = <span className={layoutClasses}>\n        {iconInstance}\n        <span className=\"euiContextMenuItem__text\">{children}</span>\n        {arrow}\n      </span>;\n    let button; // <a> elements don't respect the `disabled` attribute. So if we're disabled, we'll just pretend\n    // this is a button and piggyback off its disabled styles.\n\n    if (href && !disabled) {\n      const secureRel = getSecureRelForTarget({\n        href,\n        target,\n        rel\n      });\n      button = <a className={classes} href={href} target={target} rel={secureRel} ref={buttonRef} {...rest}>\n          {buttonInner}\n        </a>;\n    } else {\n      button = <button disabled={disabled} className={classes} type=\"button\" ref={buttonRef} {...rest}>\n          {buttonInner}\n        </button>;\n    }\n\n    if (toolTipContent) {\n      return <EuiToolTip title={toolTipTitle ? toolTipTitle : null} content={toolTipContent} anchorClassName=\"eui-displayBlock\" position={toolTipPosition}>\n          {button}\n        </EuiToolTip>;\n    } else {\n      return button;\n    }\n  }\n\n}\nEuiContextMenuItem.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  icon: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.string.isRequired, PropTypes.any.isRequired]),\n  hasPanel: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  buttonRef: PropTypes.any,\n\n  /**\n     * Required if using a tooltip. Add an optional tooltip on hover\n     */\n  toolTipContent: PropTypes.node,\n\n  /**\n     * Optional title for the tooltip\n     */\n  toolTipTitle: PropTypes.node,\n\n  /**\n     * Dictates the position of the tooltip.\n     */\n  toolTipPosition: PropTypes.oneOf([\"top\", \"right\", \"bottom\", \"left\"]),\n  href: PropTypes.string,\n  target: PropTypes.string,\n  rel: PropTypes.string,\n\n  /**\n     * How to align icon with content of button\n     */\n  layoutAlign: PropTypes.oneOf([\"center\", \"top\", \"bottom\"])\n};"]}]}