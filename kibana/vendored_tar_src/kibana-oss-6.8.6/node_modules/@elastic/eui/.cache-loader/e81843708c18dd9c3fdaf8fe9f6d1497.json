{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_duration.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_duration.js","mtime":1565204169666},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTimeString = formatTimeString;\nexports.prettyDuration = prettyDuration;\nexports.showPrettyDuration = showPrettyDuration;\nexports.commonDurationRanges = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _datemath = _interopRequireDefault(require(\"@elastic/datemath\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _time_units = require(\"./time_units\");\n\nvar _date_modes = require(\"./date_modes\");\n\nvar _relative_utils = require(\"./relative_utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ISO_FORMAT = 'YYYY-MM-DDTHH:mm:ss.SSSZ';\nvar commonDurationRanges = [{\n  start: 'now/d',\n  end: 'now/d',\n  label: 'Today'\n}, {\n  start: 'now/w',\n  end: 'now/w',\n  label: 'This week'\n}, {\n  start: 'now/M',\n  end: 'now/M',\n  label: 'This month'\n}, {\n  start: 'now/y',\n  end: 'now/y',\n  label: 'This year'\n}, {\n  start: 'now-1d/d',\n  end: 'now-1d/d',\n  label: 'Yesterday'\n}, {\n  start: 'now/w',\n  end: 'now',\n  label: 'Week to date'\n}, {\n  start: 'now/M',\n  end: 'now',\n  label: 'Month to date'\n}, {\n  start: 'now/y',\n  end: 'now',\n  label: 'Year to date'\n}];\nexports.commonDurationRanges = commonDurationRanges;\n\nfunction cantLookup(timeFrom, timeTo, dateFormat) {\n  var displayFrom = formatTimeString(timeFrom, dateFormat);\n  var displayTo = formatTimeString(timeTo, dateFormat, true);\n  return \"\".concat(displayFrom, \" to \").concat(displayTo);\n}\n\nfunction isRelativeToNow(timeFrom, timeTo) {\n  var fromDateMode = (0, _date_modes.getDateMode)(timeFrom);\n  var toDateMode = (0, _date_modes.getDateMode)(timeTo);\n  var isLast = fromDateMode === _date_modes.DATE_MODES.RELATIVE && toDateMode === _date_modes.DATE_MODES.NOW;\n  var isNext = fromDateMode === _date_modes.DATE_MODES.NOW && toDateMode === _date_modes.DATE_MODES.RELATIVE;\n  return isLast || isNext;\n}\n\nfunction formatTimeString(timeString, dateFormat) {\n  var roundUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var timeAsMoment = (0, _moment.default)(timeString, ISO_FORMAT, true);\n\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.format(dateFormat);\n  }\n\n  if (timeString === 'now') {\n    return 'now';\n  }\n\n  var tryParse = _datemath.default.parse(timeString, {\n    roundUp: roundUp\n  });\n\n  if (_moment.default.isMoment(tryParse)) {\n    return \"~ \".concat(tryParse.fromNow());\n  }\n\n  return timeString;\n}\n\nfunction prettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var dateFormat = arguments.length > 3 ? arguments[3] : undefined;\n  var matchingQuickRange = quickRanges.find(function (_ref) {\n    var quickFrom = _ref.start,\n        quickTo = _ref.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange) {\n    return matchingQuickRange.label;\n  }\n\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    var timeTense;\n    var relativeParts;\n\n    if ((0, _date_modes.getDateMode)(timeTo) === _date_modes.DATE_MODES.NOW) {\n      timeTense = 'Last';\n      relativeParts = (0, _relative_utils.parseRelativeParts)(timeFrom);\n    } else {\n      timeTense = 'Next';\n      relativeParts = (0, _relative_utils.parseRelativeParts)(timeTo);\n    }\n\n    var countTimeUnit = relativeParts.unit.substring(0, 1);\n    var countTimeUnitFullName = relativeParts.count > 1 ? _time_units.timeUnitsPlural[countTimeUnit] : _time_units.timeUnits[countTimeUnit];\n    var text = \"\".concat(timeTense, \" \").concat(relativeParts.count, \" \").concat(countTimeUnitFullName);\n\n    if (relativeParts.round) {\n      text += \" rounded to the \".concat(_time_units.timeUnits[relativeParts.roundUnit]);\n    }\n\n    return text;\n  }\n\n  return cantLookup(timeFrom, timeTo, dateFormat);\n}\n\nfunction showPrettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var matchingQuickRange = quickRanges.find(function (_ref2) {\n    var quickFrom = _ref2.start,\n        quickTo = _ref2.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange) {\n    return true;\n  }\n\n  return isRelativeToNow(timeFrom, timeTo);\n}",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_duration.js"],"names":["ISO_FORMAT","commonDurationRanges","start","end","label","cantLookup","timeFrom","timeTo","dateFormat","displayFrom","formatTimeString","displayTo","isRelativeToNow","fromDateMode","toDateMode","isLast","DATE_MODES","RELATIVE","NOW","isNext","timeString","roundUp","timeAsMoment","isValid","format","tryParse","dateMath","parse","moment","isMoment","fromNow","prettyDuration","quickRanges","matchingQuickRange","find","quickFrom","quickTo","timeTense","relativeParts","countTimeUnit","unit","substring","countTimeUnitFullName","count","timeUnitsPlural","timeUnits","text","round","roundUnit","showPrettyDuration"],"mappings":"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","sourcesContent":["import dateMath from '@elastic/datemath';\nimport moment from 'moment';\nimport { timeUnits, timeUnitsPlural } from './time_units';\nimport { getDateMode, DATE_MODES } from './date_modes';\nimport { parseRelativeParts } from './relative_utils';\n\nconst ISO_FORMAT = 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n\nexport const commonDurationRanges = [\n  { start: 'now/d', end: 'now/d', label: 'Today' },\n  { start: 'now/w', end: 'now/w', label: 'This week' },\n  { start: 'now/M', end: 'now/M', label: 'This month' },\n  { start: 'now/y', end: 'now/y', label: 'This year' },\n  { start: 'now-1d/d', end: 'now-1d/d', label: 'Yesterday' },\n  { start: 'now/w', end: 'now', label: 'Week to date' },\n  { start: 'now/M', end: 'now', label: 'Month to date' },\n  { start: 'now/y', end: 'now', label: 'Year to date' },\n];\n\nfunction cantLookup(timeFrom, timeTo, dateFormat) {\n  const displayFrom = formatTimeString(timeFrom, dateFormat);\n  const displayTo = formatTimeString(timeTo, dateFormat, true);\n  return `${displayFrom} to ${displayTo}`;\n}\n\nfunction isRelativeToNow(timeFrom, timeTo) {\n  const fromDateMode = getDateMode(timeFrom);\n  const toDateMode = getDateMode(timeTo);\n  const isLast =\n    fromDateMode === DATE_MODES.RELATIVE && toDateMode === DATE_MODES.NOW;\n  const isNext =\n    fromDateMode === DATE_MODES.NOW && toDateMode === DATE_MODES.RELATIVE;\n  return isLast || isNext;\n}\n\nexport function formatTimeString(timeString, dateFormat, roundUp = false) {\n  const timeAsMoment = moment(timeString, ISO_FORMAT, true);\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.format(dateFormat);\n  }\n\n  if (timeString === 'now') {\n    return 'now';\n  }\n\n  const tryParse = dateMath.parse(timeString, { roundUp: roundUp });\n  if (moment.isMoment(tryParse)) {\n    return `~ ${tryParse.fromNow()}`;\n  }\n\n  return timeString;\n}\n\nexport function prettyDuration(timeFrom, timeTo, quickRanges = [], dateFormat) {\n  const matchingQuickRange = quickRanges.find(\n    ({ start: quickFrom, end: quickTo }) => {\n      return timeFrom === quickFrom && timeTo === quickTo;\n    }\n  );\n  if (matchingQuickRange) {\n    return matchingQuickRange.label;\n  }\n\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    let timeTense;\n    let relativeParts;\n    if (getDateMode(timeTo) === DATE_MODES.NOW) {\n      timeTense = 'Last';\n      relativeParts = parseRelativeParts(timeFrom);\n    } else {\n      timeTense = 'Next';\n      relativeParts = parseRelativeParts(timeTo);\n    }\n    const countTimeUnit = relativeParts.unit.substring(0, 1);\n    const countTimeUnitFullName =\n      relativeParts.count > 1\n        ? timeUnitsPlural[countTimeUnit]\n        : timeUnits[countTimeUnit];\n    let text = `${timeTense} ${relativeParts.count} ${countTimeUnitFullName}`;\n    if (relativeParts.round) {\n      text += ` rounded to the ${timeUnits[relativeParts.roundUnit]}`;\n    }\n    return text;\n  }\n\n  return cantLookup(timeFrom, timeTo, dateFormat);\n}\n\nexport function showPrettyDuration(timeFrom, timeTo, quickRanges = []) {\n  const matchingQuickRange = quickRanges.find(\n    ({ start: quickFrom, end: quickTo }) => {\n      return timeFrom === quickFrom && timeTo === quickTo;\n    }\n  );\n  if (matchingQuickRange) {\n    return true;\n  }\n\n  return isRelativeToNow(timeFrom, timeTo);\n}\n"]}]}