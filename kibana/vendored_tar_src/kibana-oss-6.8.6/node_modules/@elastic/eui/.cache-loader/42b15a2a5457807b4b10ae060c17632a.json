{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/guidelines/button.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/guidelines/button.js","mtime":1565204169486},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _context_menu = _interopRequireDefault(require(\"../context_menu/context_menu\"));\n\nvar _button_placement = _interopRequireDefault(require(\"../../images/button_placement.png\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default() {\n  return _react.default.createElement(_components.GuidePage, {\n    title: \"Button guidelines\",\n    componentLinkTo: \"/navigation/button\"\n  }, _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\",\n    grow: false\n  }, _react.default.createElement(\"p\", null, \"This page documents patterns for button design, including types, placement, color, and size.\")), _react.default.createElement(_components.GuideRuleTitle, null, \"Button types\"), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"xl\"\n  }), _react.default.createElement(_components2.EuiFlexGroup, {\n    alignItems: \"center\"\n  }, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false,\n    style: {\n      minWidth: 120\n    }\n  }, _react.default.createElement(_components2.EuiButton, {\n    fill: true\n  }, \"Filled\")), _react.default.createElement(_components2.EuiFlexItem, null, _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"h4\", null, \"Filled buttons are for the primary action\"), _react.default.createElement(\"p\", null, \"This button has the heaviest visual weight to draw users' attention.\")))), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiFlexGroup, {\n    alignItems: \"center\"\n  }, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false,\n    style: {\n      minWidth: 120\n    }\n  }, _react.default.createElement(_components2.EuiButton, null, \"Standard\")), _react.default.createElement(_components2.EuiFlexItem, null, _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"h4\", null, \"Standard buttons are for secondary actions\"), _react.default.createElement(\"p\", null, \"Such actions include Add and Apply. This button type works well for multiple actions of equal weight.\")))), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiFlexGroup, {\n    alignItems: \"center\"\n  }, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false,\n    style: {\n      minWidth: 120\n    }\n  }, _react.default.createElement(_components2.EuiButtonEmpty, null, \"Empty\")), _react.default.createElement(_components2.EuiFlexItem, null, _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"h4\", null, \"Empty buttons are for complementary, UI-specific actions\"), _react.default.createElement(\"p\", null, \"Close, cancel, filter, refresh, and other actions that reconfigure the UI are appropriate for empty buttons.\")))), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiFlexGroup, {\n    alignItems: \"center\"\n  }, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false,\n    style: {\n      minWidth: 120\n    }\n  }, _react.default.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, _react.default.createElement(_components2.EuiButtonIcon, {\n    size: \"s\",\n    color: \"danger\",\n    onClick: function onClick() {\n      return window.alert('Button clicked');\n    },\n    iconType: \"trash\",\n    \"aria-label\": \"Next\"\n  }))), _react.default.createElement(_components2.EuiFlexItem, null, _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"h4\", null, \"Icon buttons are for saving space\"), _react.default.createElement(\"p\", null, \"The icon must be immediately understood, for example, a trash can for delete. Use these buttons sparingly, and never for the primary action.\")))), _react.default.createElement(_components.GuideRuleTitle, null, \"Placement and order\"), _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"p\", null, \"Button placement and order should follow the user path.\")), _react.default.createElement(_components.GuideRule, {\n    heading: \"Put buttons on the right in containers with a restricted width\",\n    description: \"In contained spaces like modals, popovers, bottom bars, and flyouts, the user path is top to bottom, left to right, in a Z-shaped pattern. Placing buttons on the bottom right puts them right where users finish scanning.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    type: \"do\",\n    text: \"Do. In modals, the primary action is on the bottom right with the secondary action on its left.\",\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"button placement in an input modal\",\n    url: _button_placement.default\n  }))), _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    type: \"do\",\n    text: \"Do. Popovers should always use buttons positioned to the right.\",\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"button placement in confirmation modal\",\n    url: \"https://i.imgur.com/Jp3ln5t.png\"\n  })))), _react.default.createElement(_components.GuideRule, {\n    heading: \"Put buttons on the left in unrestricted containers\",\n    description: \" With large page forms, content is typically concentrated on the top and left with a lot of open space to the right. The user path is top to bottom, in an F-shaped pattern.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"do\",\n    text: \"Do. Because the user's eye never leaves the left side, the buttons are on the bottom left. The primary action is in the leftmost position.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"button placement in form\",\n    url: \"https://i.imgur.com/2nvcgEU.png\"\n  })), _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"dont\",\n    text: \"Don't put the actions far away from the content.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"form buttons go on the left, not right\",\n    url: \"https://i.imgur.com/Y1rOaoN.png\"\n  }))), _react.default.createElement(_components.GuideRule, {\n    heading: \"Other patterns\",\n    description: \"Button should always fit the surrounding context and stay consistent with the app.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"do\",\n    text: \"Do. If the action is against the page title, place the primary button in the upper right. A common pattern is a create button that adds an item to a list. Creation starts at the top and ends at the bottom. Think of it as adding to a pile.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"button placement in upper right\",\n    url: \"https://i.imgur.com/fJhWvK9.png\"\n  })), _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"do\",\n    text: \"Do. Empty states are unique because they focus first on information and then try to sell the user on creation. In these special cases, where the container is constrained and the content is fairly short, the title and the button should be center aligned.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"center-aligned button\",\n    url: \"https://i.imgur.com/H2yzAEB.png\"\n  }))), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"xxl\"\n  }), _react.default.createElement(_components.GuideRuleTitle, null, \"One primary button per layout\"), _react.default.createElement(_components.GuideRule, {\n    description: \"The primary action should not have to compete for attention. Use only one filled button per page, modal, form, or other layout.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"do\",\n    text: \"Do. Use only one filled button per layout. The primary action is the one you want the user to eventually complete.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"one primary button per page\",\n    url: \"https://i.imgur.com/QdTkIt6.png\"\n  })), _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"dont\",\n    text: \"Don't. Using too many primary buttons confuses the user.\"\n  }, _react.default.createElement(_components2.EuiImage, {\n    alt: \"page without primary button\",\n    url: \"https://i.imgur.com/rmVFU1C.png\"\n  }), _react.default.createElement(_components2.EuiSpacer, null))), _react.default.createElement(_components.GuideRuleTitle, null, \"Icons in buttons either stand on their own or add context\"), _react.default.createElement(_components.GuideRule, {\n    description: \"Icon buttons can save space. Limit icon buttons to groups of two\\u2014otherwise they lose meaning.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    type: \"do\",\n    text: \"Do. Use icon buttons for universal actions that are easy to understand.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiButtonIcon, {\n    size: \"s\",\n    iconType: \"pencil\",\n    \"aria-label\": \"Edit\"\n  }), \"\\xA0\\xA0\\xA0\\xA0\", _react.default.createElement(_components2.EuiButtonIcon, {\n    size: \"s\",\n    iconType: \"expand\",\n    \"aria-label\": \"Expand\"\n  }))), _react.default.createElement(_components.GuideRuleExample, {\n    type: \"dont\",\n    text: \"Don't use icons alone in a standard button. It defeats the purpose of saving space.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiButton, null, _react.default.createElement(_components2.EuiIcon, {\n    type: \"pencil\",\n    \"aria-label\": \"Edit\"\n  })), \"\\xA0\\xA0\\xA0\\xA0\", _react.default.createElement(_components2.EuiButton, null, _react.default.createElement(_components2.EuiIcon, {\n    type: \"expand\",\n    \"aria-label\": \"Expand\"\n  }))))), _react.default.createElement(_components.GuideRule, {\n    description: \"Icons can serve as a scanning aid in a text label, but keep to a minimum. Icons work best on labels for binary actions, for example, Create and Delete, and final actions, such as Save.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    type: \"do\",\n    text: \"Do. Use icons to emphasize actions. The arrow on the Continue button lets users know they still have items to fill out. Using the word \\\"Complete\\\" with a rare check icon helps users understand that this is the final action.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(_components2.EuiButton, {\n    iconType: \"arrowRight\",\n    iconSide: \"right\",\n    fill: true\n  }, \"Continue\"), _react.default.createElement(_components2.EuiButton, {\n    iconType: \"check\",\n    color: \"secondary\",\n    fill: true\n  }, \"Save and complete\")), _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"dont\",\n    text: \"Don't. Icons often distract from the text. This is especially true when the icon is positioned on the right, with a hard to grok icon.\"\n  }, _react.default.createElement(_components2.EuiButton, {\n    iconType: \"indexOpen\",\n    iconSide: \"right\",\n    fill: true\n  }, \"Create index pattern\"))), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"xxl\"\n  }), _react.default.createElement(_components.GuideRuleTitle, null, \"Minimize the mixing of color, size, and type\"), _react.default.createElement(_components.GuideRule, {\n    description: \"When in doubt, use a blue button in the default size. Never put more than two visual styles next to each other.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    type: \"do\",\n    text: \"Do. Stick to the default pattern: a filled, blue primary button paired with an empty, but same-colored button.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiFlexGroup, null, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, {\n    fill: true\n  }, \"Save\")), _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButtonEmpty, null, \"Cancel\"))))), _react.default.createElement(_components.GuideRuleExample, {\n    type: \"dont\",\n    text: \"Don't. Readability suffers when multiple colors and sizes are used.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiFlexGroup, null, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, {\n    fill: true\n  }, \"Save\")), _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, null, \"Cancel\")), _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\",\n    fill: true,\n    size: \"s\"\n  }, \"Delete\")))))), _react.default.createElement(_components.GuideRuleTitle, null, \"Stack action sets into one button\"), _react.default.createElement(_components.GuideRule, {\n    description: \"Two buttons are optimal for a side-by-side layout, three is rare. For more buttons, use a dropdown or context menu.\"\n  }, _react.default.createElement(_components.GuideRuleExample, {\n    panel: false,\n    frame: \"frame\",\n    type: \"do\",\n    text: \"Do. This example puts multiple actions in one button rather than showing them separately.\"\n  }, _react.default.createElement(_context_menu.default, null)), _react.default.createElement(_components.GuideRuleExample, {\n    type: \"dont\",\n    text: \"Don't. When you have too many buttons, none matter.\",\n    panel: false,\n    frame: \"frame\"\n  }, _react.default.createElement(\"div\", null, _react.default.createElement(_components2.EuiFlexGroup, null, _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, null, \"Show fullscreen\")), _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, null, \"Display options\")), _react.default.createElement(_components2.EuiFlexItem, {\n    grow: false\n  }, _react.default.createElement(_components2.EuiButton, null, \"Edit / add panels\")))))), _react.default.createElement(_components.GuideRuleTitle, null, \"Labels that say what the button does\"), _react.default.createElement(_components2.EuiText, {\n    grow: false,\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"p\", null, \"Labels should provide a clear indication of that action that occurs when the user clicks the button. Prefer action words, and include an object when it is not clear from the context, for example, Add dashboard. Labels should be three words or fewer. If your label requires more words, consider using a text link instead.\"), _react.default.createElement(\"h3\", null, \"Preferred words in buttons\")), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiTable, null, _react.default.createElement(_components2.EuiTableHeader, null, _react.default.createElement(_components2.EuiTableHeaderCell, null, \"Text\"), _react.default.createElement(_components2.EuiTableHeaderCell, null, \"Description\")), _react.default.createElement(_components2.EuiTableBody, null, _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButton, null, \"Add thing\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Establishes a new relationship. Often used in a create-then-add scenario. You create a dashboard, then add a visualization. Always followed by an object. Do not use \\\"Add new.\\\" Remove is the correct opposite.\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButtonEmpty, {\n    size: \"s\"\n  }, \"Cancel\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Stops an action without saving pending changes. Never make Cancel red\\u2014it's not a destructive action. Cancel is always an empty button.\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButton, {\n    fill: true\n  }, \"Create thing\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Creates a new object from scratch. Always followed by an object, for example, \\u201CCreate pipeline.\\u201D Do not use \\\"Create new.\\\" Exception: \\u201CAdd user\\u201D is more intuitive than \\u201CCreate user.\\u201D Delete is the correct opposite.\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\",\n    fill: true\n  }, \"Delete\"), \"\\xA0\\xA0\", _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\",\n    fill: true\n  }, \"Delete 6 things\"), \"\\xA0\\xA0\", _react.default.createElement(_components2.EuiButtonIcon, {\n    size: \"s\",\n    color: \"danger\",\n    iconType: \"trash\",\n    \"aria-label\": \"delete\"\n  })), _react.default.createElement(_components2.EuiTableRowCell, null, \"Deletes data so users can longer retrieve it. Create is the correct opposite. Do not confuse with Remove.\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\"\n  }, \"Remove\"), \"\\xA0\\xA0\", _react.default.createElement(_components2.EuiButtonIcon, {\n    size: \"s\",\n    color: \"danger\",\n    iconType: \"cross\",\n    \"aria-label\": \"Remove\"\n  })), _react.default.createElement(_components2.EuiTableRowCell, null, \"Removes a relationship, but doesn't permanently delete data. For example, you remove a visualization from a dashboard. Add is the correct opposite.\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, {\n    isMobileFullWidth: true\n  }, _react.default.createElement(_components2.EuiButton, {\n    fill: true\n  }, \"Save\"), \"\\xA0\\xA0\", _react.default.createElement(_components2.EuiButton, {\n    fill: true,\n    color: \"secondary\",\n    iconType: \"check\"\n  }, \"Save and complete\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Carries out pending changes, for example, Save edits. Do not confuse with Add. Can use green if this button is the final save action.\")))), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"xl\"\n  }), _react.default.createElement(_components2.EuiText, {\n    className: \"guideSection__text\"\n  }, _react.default.createElement(\"h3\", null, \"Avoid these words in buttons\")), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiTable, {\n    responsive: false\n  }, _react.default.createElement(_components2.EuiTableHeader, null, _react.default.createElement(_components2.EuiTableHeaderCell, null, \"Text\"), _react.default.createElement(_components2.EuiTableHeaderCell, null, \"Use this instead\")), _react.default.createElement(_components2.EuiTableBody, null, _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, null, _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\"\n  }, \"Discard\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Remove or Delete\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, null, _react.default.createElement(_components2.EuiButton, null, \"New\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Add or Create\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, null, _react.default.createElement(_components2.EuiButton, null, \"OK\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Words that explain the action\")), _react.default.createElement(_components2.EuiTableRow, null, _react.default.createElement(_components2.EuiTableRowCell, null, _react.default.createElement(_components2.EuiButton, null, \"Yes?\"), \"\\xA0\\xA0\", _react.default.createElement(_components2.EuiButton, {\n    color: \"danger\"\n  }, \"No?\")), _react.default.createElement(_components2.EuiTableRowCell, null, \"Words that explain the action\")))));\n};\n\nexports.default = _default;\nmodule.exports = exports.default;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/guidelines/button.js"],"names":["minWidth","textAlign","window","alert","imageButtonPlacement"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  GuidePage,\n  GuideRule,\n  GuideRuleTitle,\n  GuideRuleExample,\n} from '../../components';\n\nimport {\n  EuiText,\n  EuiButton,\n  EuiButtonIcon,\n  EuiSpacer,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiButtonEmpty,\n  EuiIcon,\n  EuiImage,\n  EuiTable,\n  EuiTableHeader,\n  EuiTableHeaderCell,\n  EuiTableBody,\n  EuiTableRow,\n  EuiTableRowCell,\n} from '../../../../src/components';\n\nimport ContextMenu from '../context_menu/context_menu';\n\nimport imageButtonPlacement from '../../images/button_placement.png';\n\nexport default () => (\n  <GuidePage title=\"Button guidelines\" componentLinkTo=\"/navigation/button\">\n    <EuiText className=\"guideSection__text\" grow={false}>\n      <p>\n        This page documents patterns for button design, including types,\n        placement, color, and size.\n      </p>\n    </EuiText>\n\n    <GuideRuleTitle>Button types</GuideRuleTitle>\n\n    <EuiSpacer size=\"xl\" />\n\n    <EuiFlexGroup alignItems=\"center\">\n      <EuiFlexItem grow={false} style={{ minWidth: 120 }}>\n        <EuiButton fill>Filled</EuiButton>\n      </EuiFlexItem>\n\n      <EuiFlexItem>\n        <EuiText className=\"guideSection__text\">\n          <h4>Filled buttons are for the primary action</h4>\n          <p>\n            This button has the heaviest visual weight to draw users&apos;\n            attention.\n          </p>\n        </EuiText>\n      </EuiFlexItem>\n    </EuiFlexGroup>\n\n    <EuiSpacer />\n\n    <EuiFlexGroup alignItems=\"center\">\n      <EuiFlexItem grow={false} style={{ minWidth: 120 }}>\n        <EuiButton>Standard</EuiButton>\n      </EuiFlexItem>\n\n      <EuiFlexItem>\n        <EuiText className=\"guideSection__text\">\n          <h4>Standard buttons are for secondary actions</h4>\n          <p>\n            Such actions include Add and Apply. This button type works well for\n            multiple actions of equal weight.\n          </p>\n        </EuiText>\n      </EuiFlexItem>\n    </EuiFlexGroup>\n\n    <EuiSpacer />\n\n    <EuiFlexGroup alignItems=\"center\">\n      <EuiFlexItem grow={false} style={{ minWidth: 120 }}>\n        <EuiButtonEmpty>Empty</EuiButtonEmpty>\n      </EuiFlexItem>\n\n      <EuiFlexItem>\n        <EuiText className=\"guideSection__text\">\n          <h4>Empty buttons are for complementary, UI-specific actions</h4>\n          <p>\n            Close, cancel, filter, refresh, and other actions that reconfigure\n            the UI are appropriate for empty buttons.\n          </p>\n        </EuiText>\n      </EuiFlexItem>\n    </EuiFlexGroup>\n\n    <EuiSpacer />\n\n    <EuiFlexGroup alignItems=\"center\">\n      <EuiFlexItem grow={false} style={{ minWidth: 120 }}>\n        <div style={{ textAlign: 'center' }}>\n          <EuiButtonIcon\n            size=\"s\"\n            color=\"danger\"\n            onClick={() => window.alert('Button clicked')}\n            iconType=\"trash\"\n            aria-label=\"Next\"\n          />\n        </div>\n      </EuiFlexItem>\n\n      <EuiFlexItem>\n        <EuiText className=\"guideSection__text\">\n          <h4>Icon buttons are for saving space</h4>\n          <p>\n            The icon must be immediately understood, for example, a trash can\n            for delete. Use these buttons sparingly, and never for the primary\n            action.\n          </p>\n        </EuiText>\n      </EuiFlexItem>\n    </EuiFlexGroup>\n\n    <GuideRuleTitle>Placement and order</GuideRuleTitle>\n    <EuiText className=\"guideSection__text\">\n      <p>Button placement and order should follow the user path.</p>\n    </EuiText>\n\n    <GuideRule\n      heading=\"Put buttons on the right in containers with a restricted width\"\n      description=\"In contained spaces like modals, popovers, bottom bars, and flyouts, the user path\n        is top to bottom, left to right, in a Z-shaped pattern.\n        Placing buttons on the bottom right puts them right where users finish scanning.\">\n      <GuideRuleExample\n        panel={false}\n        type=\"do\"\n        text=\"Do. In modals, the primary action is on the bottom right with the\n          secondary action on its left.\"\n        frame=\"frame\">\n        <div style={{ textAlign: 'center' }}>\n          <EuiImage\n            alt=\"button placement in an input modal\"\n            url={imageButtonPlacement}\n          />\n        </div>\n      </GuideRuleExample>\n\n      <GuideRuleExample\n        panel={false}\n        type=\"do\"\n        text=\"Do. Popovers should always use buttons positioned to the right.\"\n        frame=\"frame\">\n        <div style={{ textAlign: 'center' }}>\n          <EuiImage\n            alt=\"button placement in confirmation modal\"\n            url=\"https://i.imgur.com/Jp3ln5t.png\"\n          />\n        </div>\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRule\n      heading=\"Put buttons on the left in unrestricted containers\"\n      description=\"\n      With large page forms, content is typically concentrated on the top and\n        left with a lot of open space to the right. The user path is top to bottom, in an F-shaped pattern.\">\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"do\"\n        text=\"Do. Because the user's eye never leaves the left side,\n          the buttons are on the bottom left. The primary action is in the leftmost position.\">\n        <EuiImage\n          alt=\"button placement in form\"\n          url=\"https://i.imgur.com/2nvcgEU.png\"\n        />\n      </GuideRuleExample>\n\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"dont\"\n        text=\"Don't put the actions far away from the content.\">\n        <EuiImage\n          alt=\"form buttons go on the left, not right\"\n          url=\"https://i.imgur.com/Y1rOaoN.png\"\n        />\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRule\n      heading=\"Other patterns\"\n      description=\"Button should always fit the surrounding context\n      and stay consistent with the app.\">\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"do\"\n        text=\"Do. If the action is against the page title, place the primary button in the upper right.\n          A common pattern is a create button that adds an item to a list. Creation starts\n          at the top and ends at the bottom. Think of it as adding to a pile.\">\n        <EuiImage\n          alt=\"button placement in upper right\"\n          url=\"https://i.imgur.com/fJhWvK9.png\"\n        />\n      </GuideRuleExample>\n\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"do\"\n        text=\"Do.\n          Empty states are unique because they focus first on information and then try to sell\n          the user on creation. In these special cases, where the container is constrained\n          and the content is fairly short, the title and the button should be center aligned.\">\n        <EuiImage\n          alt=\"center-aligned button\"\n          url=\"https://i.imgur.com/H2yzAEB.png\"\n        />\n      </GuideRuleExample>\n    </GuideRule>\n\n    <EuiSpacer size=\"xxl\" />\n\n    <GuideRuleTitle>One primary button per layout</GuideRuleTitle>\n\n    <GuideRule\n      description=\"The primary action should not have to compete for attention.\n        Use only one filled button per page, modal, form, or other layout.\">\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"do\"\n        text=\"Do. Use only one filled button per layout. The primary action is\n          the one you want the user to eventually complete.\">\n        <EuiImage\n          alt=\"one primary button per page\"\n          url=\"https://i.imgur.com/QdTkIt6.png\"\n        />\n      </GuideRuleExample>\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"dont\"\n        text=\"Don't. Using too many primary buttons confuses the user.\">\n        <EuiImage\n          alt=\"page without primary button\"\n          url=\"https://i.imgur.com/rmVFU1C.png\"\n        />\n        <EuiSpacer />\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRuleTitle>\n      Icons in buttons either stand on their own or add context\n    </GuideRuleTitle>\n\n    <GuideRule\n      description=\"Icon buttons can save space.\n        Limit icon buttons to groups of two&mdash;otherwise they lose meaning.\">\n      <GuideRuleExample\n        type=\"do\"\n        text=\"Do. Use icon buttons for universal actions that are easy to understand.\"\n        panel={false}\n        frame=\"frame\">\n        <div>\n          <EuiButtonIcon size=\"s\" iconType=\"pencil\" aria-label=\"Edit\" />\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <EuiButtonIcon size=\"s\" iconType=\"expand\" aria-label=\"Expand\" />\n        </div>\n      </GuideRuleExample>\n      <GuideRuleExample\n        type=\"dont\"\n        text=\"Don't use icons alone in a standard button. It defeats the purpose of saving space.\"\n        panel={false}\n        frame=\"frame\">\n        <div>\n          <EuiButton>\n            <EuiIcon type=\"pencil\" aria-label=\"Edit\" />\n          </EuiButton>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <EuiButton>\n            <EuiIcon type=\"expand\" aria-label=\"Expand\" />\n          </EuiButton>\n        </div>\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRule\n      description=\"Icons can serve as a scanning aid in a text label, but keep to a minimum.\n        Icons work best on labels for binary actions, for example, Create and Delete, and final actions, such as Save.\">\n      <GuideRuleExample\n        type=\"do\"\n        text='Do. Use icons to emphasize actions. The arrow on the Continue\n          button lets users know they still have items to fill out. Using the word \"Complete\"\n          with a rare check icon helps users understand that this is the\n          final action.'\n        panel={false}\n        frame=\"frame\">\n        <EuiButton iconType=\"arrowRight\" iconSide=\"right\" fill>\n          Continue\n        </EuiButton>\n        <EuiButton iconType=\"check\" color=\"secondary\" fill>\n          Save and complete\n        </EuiButton>\n      </GuideRuleExample>\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"dont\"\n        text=\"Don't. Icons often distract from the text.\n          This is especially true when the icon is positioned on the right,\n          with a hard to grok icon.\">\n        <EuiButton iconType=\"indexOpen\" iconSide=\"right\" fill>\n          Create index pattern\n        </EuiButton>\n      </GuideRuleExample>\n    </GuideRule>\n\n    <EuiSpacer size=\"xxl\" />\n\n    <GuideRuleTitle>\n      Minimize the mixing of color, size, and type\n    </GuideRuleTitle>\n\n    <GuideRule\n      description=\"When in doubt, use a blue button in the default size. Never put more than two\n      visual styles next to each other.\">\n      <GuideRuleExample\n        type=\"do\"\n        text=\"Do. Stick to the default pattern: a filled, blue primary button paired with\n          an empty, but same-colored button.\"\n        panel={false}\n        frame=\"frame\">\n        <div>\n          <EuiFlexGroup>\n            <EuiFlexItem grow={false}>\n              <EuiButton fill>Save</EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButtonEmpty>Cancel</EuiButtonEmpty>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </GuideRuleExample>\n      <GuideRuleExample\n        type=\"dont\"\n        text=\"Don't. Readability suffers when multiple colors and sizes are used.\"\n        panel={false}\n        frame=\"frame\">\n        <div>\n          <EuiFlexGroup>\n            <EuiFlexItem grow={false}>\n              <EuiButton fill>Save</EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButton>Cancel</EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButton color=\"danger\" fill size=\"s\">\n                Delete\n              </EuiButton>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRuleTitle>Stack action sets into one button</GuideRuleTitle>\n\n    <GuideRule\n      description=\"Two buttons are optimal for a side-by-side layout, three is rare.\n      For more buttons, use a dropdown or context menu.\">\n      <GuideRuleExample\n        panel={false}\n        frame=\"frame\"\n        type=\"do\"\n        text=\"Do. This example puts multiple actions in one button rather than showing them separately.\">\n        <ContextMenu />\n      </GuideRuleExample>\n\n      <GuideRuleExample\n        type=\"dont\"\n        text=\"Don't. When you have too many buttons, none matter.\"\n        panel={false}\n        frame=\"frame\">\n        <div>\n          <EuiFlexGroup>\n            <EuiFlexItem grow={false}>\n              <EuiButton>Show fullscreen</EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButton>Display options</EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButton>Edit / add panels</EuiButton>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </GuideRuleExample>\n    </GuideRule>\n\n    <GuideRuleTitle>Labels that say what the button does</GuideRuleTitle>\n\n    <EuiText grow={false} className=\"guideSection__text\">\n      <p>\n        Labels should provide a clear indication of that action that occurs when\n        the user clicks the button. Prefer action words, and include an object\n        when it is not clear from the context, for example, Add dashboard.\n        Labels should be three words or fewer. If your label requires more\n        words, consider using a text link instead.\n      </p>\n\n      <h3>Preferred words in buttons</h3>\n    </EuiText>\n\n    <EuiSpacer />\n\n    <EuiTable>\n      <EuiTableHeader>\n        <EuiTableHeaderCell>Text</EuiTableHeaderCell>\n\n        <EuiTableHeaderCell>Description</EuiTableHeaderCell>\n      </EuiTableHeader>\n\n      <EuiTableBody>\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButton>Add thing</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>\n            Establishes a new relationship. Often used in a create-then-add\n            scenario. You create a dashboard, then add a visualization. Always\n            followed by an object. Do not use &quot;Add new.&quot; Remove is the\n            correct opposite.\n          </EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButtonEmpty size=\"s\">Cancel</EuiButtonEmpty>\n          </EuiTableRowCell>\n          <EuiTableRowCell>\n            Stops an action without saving pending changes. Never make Cancel\n            red&mdash;it&apos;s not a destructive action. Cancel is always an\n            empty button.\n          </EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButton fill>Create thing</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>\n            Creates a new object from scratch. Always followed by an object, for\n            example, “Create pipeline.” Do not use &quot;Create new.&quot;\n            Exception: “Add user” is more intuitive than “Create user.” Delete\n            is the correct opposite.\n          </EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButton color=\"danger\" fill>\n              Delete\n            </EuiButton>\n            &nbsp;&nbsp;\n            <EuiButton color=\"danger\" fill>\n              Delete 6 things\n            </EuiButton>\n            &nbsp;&nbsp;\n            <EuiButtonIcon\n              size=\"s\"\n              color=\"danger\"\n              iconType=\"trash\"\n              aria-label=\"delete\"\n            />\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>\n            Deletes data so users can longer retrieve it. Create is the correct\n            opposite. Do not confuse with Remove.\n          </EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButton color=\"danger\">Remove</EuiButton>&nbsp;&nbsp;\n            <EuiButtonIcon\n              size=\"s\"\n              color=\"danger\"\n              iconType=\"cross\"\n              aria-label=\"Remove\"\n            />\n          </EuiTableRowCell>\n          <EuiTableRowCell>\n            Removes a relationship, but doesn&apos;t permanently delete data.\n            For example, you remove a visualization from a dashboard. Add is the\n            correct opposite.\n          </EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell isMobileFullWidth>\n            <EuiButton fill>Save</EuiButton>&nbsp;&nbsp;\n            <EuiButton fill color=\"secondary\" iconType=\"check\">\n              Save and complete\n            </EuiButton>\n          </EuiTableRowCell>\n          <EuiTableRowCell>\n            Carries out pending changes, for example, Save edits. Do not confuse\n            with Add. Can use green if this button is the final save action.\n          </EuiTableRowCell>\n        </EuiTableRow>\n      </EuiTableBody>\n    </EuiTable>\n\n    <EuiSpacer size=\"xl\" />\n\n    <EuiText className=\"guideSection__text\">\n      <h3>Avoid these words in buttons</h3>\n    </EuiText>\n\n    <EuiSpacer />\n\n    <EuiTable responsive={false}>\n      <EuiTableHeader>\n        <EuiTableHeaderCell>Text</EuiTableHeaderCell>\n\n        <EuiTableHeaderCell>Use this instead</EuiTableHeaderCell>\n      </EuiTableHeader>\n      <EuiTableBody>\n        <EuiTableRow>\n          <EuiTableRowCell>\n            <EuiButton color=\"danger\">Discard</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>Remove or Delete</EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell>\n            <EuiButton>New</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>Add or Create</EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell>\n            <EuiButton>OK</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>Words that explain the action</EuiTableRowCell>\n        </EuiTableRow>\n\n        <EuiTableRow>\n          <EuiTableRowCell>\n            <EuiButton>Yes?</EuiButton>&nbsp;&nbsp;\n            <EuiButton color=\"danger\">No?</EuiButton>\n          </EuiTableRowCell>\n\n          <EuiTableRowCell>Words that explain the action</EuiTableRowCell>\n        </EuiTableRow>\n      </EuiTableBody>\n    </EuiTable>\n  </GuidePage>\n);\n"]}]}