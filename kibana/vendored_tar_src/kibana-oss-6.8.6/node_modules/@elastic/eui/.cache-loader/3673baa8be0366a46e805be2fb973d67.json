{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/health/health_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/health/health_example.js","mtime":1565204169497},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HealthExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _health = _interopRequireDefault(require(\"./health\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar healthSource = require('!!raw-loader!./health');\n\nvar healthHtml = (0, _services.renderToHtml)(_health.default);\nvar HealthExample = {\n  title: 'Health',\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: healthSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: healthHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"The \", _react.default.createElement(_components2.EuiCode, null, \"Health\"), \" component should be used when showing comparitive health of listed objects (like servers, nodes, indexes..etc). Because icons are vague and bulky and color alone does not work, we think color plus text provides a recognizable, lightweight combo that works in most situations.\"),\n    props: {\n      EuiHealth: _components2.EuiHealth\n    },\n    demo: _react.default.createElement(_health.default, null)\n  }]\n};\nexports.HealthExample = HealthExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/health/health_example.js"],"names":["healthSource","require","healthHtml","Health","HealthExample","title","sections","source","type","GuideSectionTypes","JS","code","HTML","text","props","EuiHealth","demo"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AACA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,UAAU,GAAG,4BAAaC,eAAb,CAAnB;AAEO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE,QADoB;AAE3BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEC,8BAAkBC,EAD1B;AAEEC,MAAAA,IAAI,EAAEX;AAFR,KADM,EAKN;AACEQ,MAAAA,IAAI,EAAEC,8BAAkBG,IAD1B;AAEED,MAAAA,IAAI,EAAET;AAFR,KALM,CADV;AAWEW,IAAAA,IAAI,EACF,gDACM,6BAAC,oBAAD,iBADN,yRAZJ;AAoBEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAATA;AAAF,KApBT;AAqBEC,IAAAA,IAAI,EAAE,6BAAC,eAAD;AArBR,GADQ;AAFiB,CAAtB","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiHealth } from '../../../../src/components';\n\nimport Health from './health';\nconst healthSource = require('!!raw-loader!./health');\nconst healthHtml = renderToHtml(Health);\n\nexport const HealthExample = {\n  title: 'Health',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: healthSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: healthHtml,\n        },\n      ],\n      text: (\n        <p>\n          The <EuiCode>Health</EuiCode> component should be used when showing\n          comparitive health of listed objects (like servers, nodes,\n          indexes..etc). Because icons are vague and bulky and color alone does\n          not work, we think color plus text provides a recognizable,\n          lightweight combo that works in most situations.\n        </p>\n      ),\n      props: { EuiHealth },\n      demo: <Health />,\n    },\n  ],\n};\n"]}]}