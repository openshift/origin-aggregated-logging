{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_interval.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_interval.ts","mtime":1565204169667},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prettyInterval = void 0;\nvar MS_IN_SECOND = 1000;\nvar MS_IN_MINUTE = 60 * MS_IN_SECOND;\nvar MS_IN_HOUR = 60 * MS_IN_MINUTE;\nvar MS_IN_DAY = 24 * MS_IN_HOUR;\n\nvar prettyInterval = function prettyInterval(isPaused, intervalInMs) {\n  var units;\n\n  if (isPaused || intervalInMs === 0) {\n    return 'Off';\n  } else if (intervalInMs < MS_IN_MINUTE) {\n    var intervalInSeconds = Math.round(intervalInMs / MS_IN_SECOND);\n    units = intervalInSeconds > 1 ? 'seconds' : 'second';\n    return \"\".concat(intervalInSeconds, \" \").concat(units);\n  } else if (intervalInMs < MS_IN_HOUR) {\n    var intervalInMinutes = Math.round(intervalInMs / MS_IN_MINUTE);\n    units = intervalInMinutes > 1 ? 'minutes' : 'minute';\n    return \"\".concat(intervalInMinutes, \" \").concat(units);\n  } else if (intervalInMs < MS_IN_DAY) {\n    var intervalInHours = Math.round(intervalInMs / MS_IN_HOUR);\n    units = intervalInHours > 1 ? 'hours' : 'hour';\n    return \"\".concat(intervalInHours, \" \").concat(units);\n  }\n\n  var intervalInDays = Math.round(intervalInMs / MS_IN_DAY);\n  units = intervalInDays > 1 ? 'days' : 'day';\n  return \"\".concat(intervalInDays, \" \").concat(units);\n};\n\nexports.prettyInterval = prettyInterval;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/date_picker/super_date_picker/pretty_interval.ts"],"names":["MS_IN_SECOND","MS_IN_MINUTE","MS_IN_HOUR","MS_IN_DAY","prettyInterval","isPaused","intervalInMs","units","intervalInSeconds","Math","round","intervalInMinutes","intervalInHours","intervalInDays"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG,IAArB;AACA,IAAMC,YAAY,GAAG,KAAKD,YAA1B;AACA,IAAME,UAAU,GAAG,KAAKD,YAAxB;AACA,IAAME,SAAS,GAAG,KAAKD,UAAvB;;AAEO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAoBC,YAApB,EAA6C;AACzE,MAAIC,KAAJ;;AACA,MAAIF,QAAQ,IAAIC,YAAY,KAAK,CAAjC,EAAoC;AAClC,WAAO,KAAP;AACD,GAFD,MAEO,IAAIA,YAAY,GAAGL,YAAnB,EAAiC;AACtC,QAAMO,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAGN,YAA1B,CAA1B;AACAO,IAAAA,KAAK,GAAGC,iBAAiB,GAAG,CAApB,GAAwB,SAAxB,GAAoC,QAA5C;AACA,qBAAUA,iBAAV,cAA+BD,KAA/B;AACD,GAJM,MAIA,IAAID,YAAY,GAAGJ,UAAnB,EAA+B;AACpC,QAAMS,iBAAiB,GAAGF,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAGL,YAA1B,CAA1B;AACAM,IAAAA,KAAK,GAAGI,iBAAiB,GAAG,CAApB,GAAwB,SAAxB,GAAoC,QAA5C;AACA,qBAAUA,iBAAV,cAA+BJ,KAA/B;AACD,GAJM,MAIA,IAAID,YAAY,GAAGH,SAAnB,EAA8B;AACnC,QAAMS,eAAe,GAAGH,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAGJ,UAA1B,CAAxB;AACAK,IAAAA,KAAK,GAAGK,eAAe,GAAG,CAAlB,GAAsB,OAAtB,GAAgC,MAAxC;AACA,qBAAUA,eAAV,cAA6BL,KAA7B;AACD;;AAED,MAAMM,cAAc,GAAGJ,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAGH,SAA1B,CAAvB;AACAI,EAAAA,KAAK,GAAGM,cAAc,GAAG,CAAjB,GAAqB,MAArB,GAA8B,KAAtC;AACA,mBAAUA,cAAV,cAA4BN,KAA5B;AACD,CArBM","sourcesContent":["const MS_IN_SECOND = 1000;\nconst MS_IN_MINUTE = 60 * MS_IN_SECOND;\nconst MS_IN_HOUR = 60 * MS_IN_MINUTE;\nconst MS_IN_DAY = 24 * MS_IN_HOUR;\n\nexport const prettyInterval = (isPaused: boolean, intervalInMs: number) => {\n  let units: string;\n  if (isPaused || intervalInMs === 0) {\n    return 'Off';\n  } else if (intervalInMs < MS_IN_MINUTE) {\n    const intervalInSeconds = Math.round(intervalInMs / MS_IN_SECOND);\n    units = intervalInSeconds > 1 ? 'seconds' : 'second';\n    return `${intervalInSeconds} ${units}`;\n  } else if (intervalInMs < MS_IN_HOUR) {\n    const intervalInMinutes = Math.round(intervalInMs / MS_IN_MINUTE);\n    units = intervalInMinutes > 1 ? 'minutes' : 'minute';\n    return `${intervalInMinutes} ${units}`;\n  } else if (intervalInMs < MS_IN_DAY) {\n    const intervalInHours = Math.round(intervalInMs / MS_IN_HOUR);\n    units = intervalInHours > 1 ? 'hours' : 'hour';\n    return `${intervalInHours} ${units}`;\n  }\n\n  const intervalInDays = Math.round(intervalInMs / MS_IN_DAY);\n  units = intervalInDays > 1 ? 'days' : 'day';\n  return `${intervalInDays} ${units}`;\n};\n"]}]}