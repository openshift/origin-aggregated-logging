{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/datagrid/style_selector.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/datagrid/style_selector.tsx","mtime":1567546079052},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStyleSelector = exports.startingStyles = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _popover = require(\"../popover\");\n\nvar _button = require(\"../button\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar startingStyles = {\n  cellPadding: 'm',\n  fontSize: 'm',\n  border: 'all',\n  stripes: false,\n  rowHover: 'highlight',\n  header: 'shade'\n};\nexports.startingStyles = startingStyles;\n\nvar useStyleSelector = function useStyleSelector() {\n  var _useState = (0, _react.useState)(startingStyles),\n      _useState2 = _slicedToArray(_useState, 2),\n      gridStyles = _useState2[0],\n      setGridStyles = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var densityStyles = {\n    comfortable: {\n      fontSize: 'l',\n      cellPadding: 'l'\n    },\n    normal: {\n      fontSize: 'm',\n      cellPadding: 'm'\n    },\n    compact: {\n      fontSize: 's',\n      cellPadding: 's'\n    }\n  };\n  var densityOptions = [{\n    id: 'comfortable',\n    label: 'Comfortable table density',\n    iconType: 'tableDensityComfortable'\n  }, {\n    id: 'normal',\n    label: 'Normal table density',\n    iconType: 'tableDensityNormal'\n  }, {\n    id: 'compact',\n    label: 'Compact table density',\n    iconType: 'tableDensityCompact'\n  }];\n\n  var _useState5 = (0, _react.useState)(densityOptions[1]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gridDensity = _useState6[0],\n      setGridDensity = _useState6[1];\n\n  var onChangeDensity = function onChangeDensity(optionId) {\n    var selectedDensity = densityOptions.filter(function (options) {\n      return options.id === optionId;\n    })[0];\n    setGridDensity(selectedDensity);\n  };\n\n  (0, _react.useEffect)(function () {\n    var oldStyles = gridStyles; // eslint doesn't like the way the object.assign here is set up.\n\n    /*eslint-disable */\n\n    var mergedStyle = Object.assign({}, oldStyles, // @ts-ignore\n    densityStyles[gridDensity.id]);\n    /*eslint-enable */\n\n    setGridStyles(mergedStyle); // @TODO: come back to this hook lifecycle\n  }, [gridDensity]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var StyleSelector = function StyleSelector() {\n    return _react.default.createElement(_popover.EuiPopover, {\n      \"data-test-subj\": \"dataGridStyleSelectorPopover\",\n      isOpen: isOpen,\n      closePopover: function closePopover() {\n        return setIsOpen(false);\n      },\n      anchorPosition: \"downCenter\",\n      ownFocus: true,\n      panelPaddingSize: \"s\",\n      panelClassName: \"euiDataGridColumnSelectorPopover\",\n      button: _react.default.createElement(_button.EuiButtonEmpty, {\n        size: \"xs\",\n        iconType: \"tableDensityComfortable\",\n        color: \"text\",\n        onClick: function onClick() {\n          return setIsOpen(!isOpen);\n        }\n      }, \"Density\")\n    }, _react.default.createElement(_button.EuiButtonGroup, {\n      legend: \"Text align\",\n      name: \"textAlign\",\n      className: \"eui-displayInlineBlock\",\n      options: densityOptions,\n      onChange: onChangeDensity,\n      idSelected: gridDensity.id,\n      isIconOnly: true\n    }));\n  };\n\n  return [StyleSelector, gridStyles, setGridStyles];\n};\n\nexports.useStyleSelector = useStyleSelector;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/datagrid/style_selector.tsx"],"names":["startingStyles","cellPadding","fontSize","border","stripes","rowHover","header","useStyleSelector","gridStyles","setGridStyles","isOpen","setIsOpen","densityStyles","comfortable","normal","compact","densityOptions","id","label","iconType","gridDensity","setGridDensity","onChangeDensity","optionId","selectedDensity","filter","options","oldStyles","mergedStyle","Object","assign","StyleSelector"],"mappings":"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","sourcesContent":["import React, {\n  Dispatch,\n  FunctionComponent,\n  SetStateAction,\n  useState,\n  useEffect,\n} from 'react';\nimport { EuiDataGridStyle } from './data_grid_types';\n// @ts-ignore-next-line\nimport { EuiPopover } from '../popover';\n// @ts-ignore-next-line\nimport { EuiButtonEmpty, EuiButtonGroup } from '../button';\n\nexport const startingStyles: EuiDataGridStyle = {\n  cellPadding: 'm',\n  fontSize: 'm',\n  border: 'all',\n  stripes: false,\n  rowHover: 'highlight',\n  header: 'shade',\n};\n\nexport const useStyleSelector = (): [\n  FunctionComponent<{}>,\n  EuiDataGridStyle,\n  Dispatch<SetStateAction<EuiDataGridStyle>>\n] => {\n  const [gridStyles, setGridStyles] = useState(startingStyles);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const densityStyles = {\n    comfortable: {\n      fontSize: 'l',\n      cellPadding: 'l',\n    },\n    normal: {\n      fontSize: 'm',\n      cellPadding: 'm',\n    },\n    compact: {\n      fontSize: 's',\n      cellPadding: 's',\n    },\n  };\n\n  const densityOptions = [\n    {\n      id: 'comfortable',\n      label: 'Comfortable table density',\n      iconType: 'tableDensityComfortable',\n    },\n    {\n      id: 'normal',\n      label: 'Normal table density',\n      iconType: 'tableDensityNormal',\n    },\n    {\n      id: 'compact',\n      label: 'Compact table density',\n      iconType: 'tableDensityCompact',\n    },\n  ];\n\n  const [gridDensity, setGridDensity] = useState(densityOptions[1]);\n\n  const onChangeDensity = (optionId: string) => {\n    const selectedDensity = densityOptions.filter(options => {\n      return options.id === optionId;\n    })[0];\n\n    setGridDensity(selectedDensity);\n  };\n\n  useEffect(() => {\n    const oldStyles = gridStyles;\n\n    // eslint doesn't like the way the object.assign here is set up.\n    /*eslint-disable */\n    const mergedStyle = Object.assign(\n      {},\n      oldStyles,\n      // @ts-ignore\n      densityStyles[gridDensity.id]\n    );\n    /*eslint-enable */\n    setGridStyles(mergedStyle);\n    // @TODO: come back to this hook lifecycle\n  }, [gridDensity]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const StyleSelector = () => (\n    <EuiPopover\n      data-test-subj=\"dataGridStyleSelectorPopover\"\n      isOpen={isOpen}\n      closePopover={() => setIsOpen(false)}\n      anchorPosition=\"downCenter\"\n      ownFocus\n      panelPaddingSize=\"s\"\n      panelClassName=\"euiDataGridColumnSelectorPopover\"\n      button={\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"tableDensityComfortable\"\n          color=\"text\"\n          onClick={() => setIsOpen(!isOpen)}>\n          Density\n        </EuiButtonEmpty>\n      }>\n      <EuiButtonGroup\n        legend=\"Text align\"\n        name=\"textAlign\"\n        className=\"eui-displayInlineBlock\"\n        options={densityOptions}\n        onChange={onChangeDensity}\n        idSelected={gridDensity.id}\n        isIconOnly\n      />\n    </EuiPopover>\n  );\n\n  return [StyleSelector, gridStyles, setGridStyles];\n};\n"]}]}