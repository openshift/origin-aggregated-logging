{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/table/table_header_cell.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/table/table_header_cell.js","mtime":1567534071294},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiTableHeaderCell = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _accessibility = require(\"../accessibility\");\n\nvar _icon = require(\"../icon\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar ALIGNMENT = [_services.LEFT_ALIGNMENT, _services.RIGHT_ALIGNMENT, _services.CENTER_ALIGNMENT];\n\nvar EuiTableHeaderCell = function EuiTableHeaderCell(_ref) {\n  var children = _ref.children,\n      align = _ref.align,\n      onSort = _ref.onSort,\n      isSorted = _ref.isSorted,\n      isSortAscending = _ref.isSortAscending,\n      allowNeutralSort = _ref.allowNeutralSort,\n      className = _ref.className,\n      scope = _ref.scope,\n      mobileOptions = _ref.mobileOptions,\n      isMobileHeader = _ref.isMobileHeader,\n      hideForMobile = _ref.hideForMobile,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"align\", \"onSort\", \"isSorted\", \"isSortAscending\", \"allowNeutralSort\", \"className\", \"scope\", \"mobileOptions\", \"isMobileHeader\", \"hideForMobile\"]);\n\n  var classes = (0, _classnames.default)('euiTableHeaderCell', className, {\n    'euiTableHeaderCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableHeaderCell--hideForMobile': !mobileOptions.show || hideForMobile\n  });\n  var contentClasses = (0, _classnames.default)('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === _services.RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === _services.CENTER_ALIGNMENT\n  });\n\n  if (onSort) {\n    var getScreenCasterDirection = function getScreenCasterDirection() {\n      if (ariaSortValue === 'ascending') {\n        return 'Click to sort in descending order';\n      } else if (allowNeutralSort && ariaSortValue === 'descending') {\n        return 'Click to unsort';\n      } else {\n        return 'Click to sort in ascending order';\n      }\n    };\n\n    var buttonClasses = (0, _classnames.default)('euiTableHeaderButton', {\n      'euiTableHeaderButton-isSorted': isSorted\n    });\n    var ariaSortValue = 'none';\n\n    if (isSorted) {\n      ariaSortValue = isSortAscending ? 'ascending' : 'descending';\n    }\n\n    return _react.default.createElement(\"th\", _extends({\n      className: classes,\n      scope: scope,\n      role: \"columnheader\",\n      \"aria-sort\": ariaSortValue,\n      \"aria-live\": \"polite\"\n    }, rest), _react.default.createElement(\"button\", {\n      type: \"button\",\n      className: buttonClasses,\n      onClick: onSort,\n      \"data-test-subj\": \"tableHeaderSortButton\"\n    }, _react.default.createElement(\"span\", {\n      className: contentClasses\n    }, _react.default.createElement(\"span\", {\n      className: \"euiTableCellContent__text\"\n    }, children), isSorted && _react.default.createElement(_icon.EuiIcon, {\n      className: \"euiTableSortIcon\",\n      type: isSortAscending ? 'sortUp' : 'sortDown',\n      size: \"m\",\n      \"aria-label\": \"Sorted in \".concat(ariaSortValue, \" order\")\n    }), _react.default.createElement(_accessibility.EuiScreenReaderOnly, null, _react.default.createElement(\"span\", null, getScreenCasterDirection())))));\n  }\n\n  return _react.default.createElement(\"th\", _extends({\n    className: classes,\n    scope: scope,\n    role: \"columnheader\"\n  }, rest), _react.default.createElement(\"div\", {\n    className: contentClasses\n  }, _react.default.createElement(\"span\", {\n    className: \"euiTableCellContent__text\"\n  }, children)));\n};\n\nexports.EuiTableHeaderCell = EuiTableHeaderCell;\nEuiTableHeaderCell.propTypes = {\n  children: _propTypes.default.node,\n  className: _propTypes.default.string,\n  align: _propTypes.default.oneOf(ALIGNMENT),\n  onSort: _propTypes.default.func,\n  isSorted: _propTypes.default.bool,\n  isSortAscending: _propTypes.default.bool,\n\n  /**\n   * Set `allowNeutralSort` on EuiInMemoryTable to false to force column sorting.\n   * EuiBasicTable always forces column sorting.\n   */\n  allowNeutralSort: _propTypes.default.bool,\n  scope: _propTypes.default.oneOf(['col', 'row', 'colgroup', 'rowgroup']),\n\n  /**\n   * _DEPRECATED: use `mobileOptions.only = true`_\n   * Indicates if the column was created to be the row's heading in mobile view\n   * (this column will be hidden at larger screens)\n   */\n  isMobileHeader: _propTypes.default.bool,\n\n  /**\n   * _DEPRECATED: use `mobileOptions.show = false`_\n   * Indicates if the column should not show for mobile users\n   * (typically hidden because a custom mobile header utilizes the column's contents)\n   */\n  hideForMobile: _propTypes.default.bool,\n\n  /**\n   * Mobile options for displaying differently at small screens\n   */\n  mobileOptions: _propTypes.default.shape({\n    /**\n     * If false, will not render the column at all for mobile\n     */\n    show: _propTypes.default.bool,\n\n    /**\n     * Only show for mobile? If true, will not render the column at all for desktop\n     */\n    only: _propTypes.default.bool\n  })\n};\nEuiTableHeaderCell.defaultProps = {\n  align: _services.LEFT_ALIGNMENT,\n  scope: 'col',\n  mobileOptions: {\n    show: true\n  }\n};\nEuiTableHeaderCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiTableHeaderCell\",\n  \"props\": {\n    \"align\": {\n      \"defaultValue\": {\n        \"value\": \"LEFT_ALIGNMENT\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"import {\\n  LEFT_ALIGNMENT,\\n  RIGHT_ALIGNMENT,\\n  CENTER_ALIGNMENT,\\n} from '../../services';\",\n          \"computed\": true\n        }, {\n          \"value\": \"import {\\n  LEFT_ALIGNMENT,\\n  RIGHT_ALIGNMENT,\\n  CENTER_ALIGNMENT,\\n} from '../../services';\",\n          \"computed\": true\n        }, {\n          \"value\": \"import {\\n  LEFT_ALIGNMENT,\\n  RIGHT_ALIGNMENT,\\n  CENTER_ALIGNMENT,\\n} from '../../services';\",\n          \"computed\": true\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scope\": {\n      \"defaultValue\": {\n        \"value\": \"'col'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'col'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'row'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'colgroup'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'rowgroup'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mobileOptions\": {\n      \"defaultValue\": {\n        \"value\": \"{\\n  show: true,\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"show\": {\n            \"name\": \"bool\",\n            \"description\": \"If false, will not render the column at all for mobile\",\n            \"required\": false\n          },\n          \"only\": {\n            \"name\": \"bool\",\n            \"description\": \"Only show for mobile? If true, will not render the column at all for desktop\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Mobile options for displaying differently at small screens\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onSort\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isSorted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isSortAscending\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowNeutralSort\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set `allowNeutralSort` on EuiInMemoryTable to false to force column sorting.\\nEuiBasicTable always forces column sorting.\"\n    },\n    \"isMobileHeader\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.only = true`_\\nIndicates if the column was created to be the row's heading in mobile view\\n(this column will be hidden at larger screens)\"\n    },\n    \"hideForMobile\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.show = false`_\\nIndicates if the column should not show for mobile users\\n(typically hidden because a custom mobile header utilizes the column's contents)\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/table/table_header_cell.js"],"names":["ALIGNMENT","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","CENTER_ALIGNMENT","EuiTableHeaderCell","children","align","onSort","isSorted","isSortAscending","allowNeutralSort","className","scope","mobileOptions","isMobileHeader","hideForMobile","rest","classes","only","show","contentClasses","getScreenCasterDirection","ariaSortValue","buttonClasses","propTypes","PropTypes","node","string","oneOf","func","bool","shape","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiScreenReaderOnly } from '../accessibility';\n\nimport { EuiIcon } from '../icon';\n\nimport {\n  LEFT_ALIGNMENT,\n  RIGHT_ALIGNMENT,\n  CENTER_ALIGNMENT,\n} from '../../services';\n\nconst ALIGNMENT = [LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT];\n\nexport const EuiTableHeaderCell = ({\n  children,\n  align,\n  onSort,\n  isSorted,\n  isSortAscending,\n  allowNeutralSort,\n  className,\n  scope,\n  mobileOptions,\n  // Soon to be deprecated for {...mobileOptions}\n  isMobileHeader,\n  hideForMobile,\n  ...rest\n}) => {\n  const classes = classNames('euiTableHeaderCell', className, {\n    'euiTableHeaderCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableHeaderCell--hideForMobile': !mobileOptions.show || hideForMobile,\n  });\n\n  const contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT,\n  });\n\n  if (onSort) {\n    const buttonClasses = classNames('euiTableHeaderButton', {\n      'euiTableHeaderButton-isSorted': isSorted,\n    });\n\n    let ariaSortValue = 'none';\n    if (isSorted) {\n      ariaSortValue = isSortAscending ? 'ascending' : 'descending';\n    }\n\n    function getScreenCasterDirection() {\n      if (ariaSortValue === 'ascending') {\n        return 'Click to sort in descending order';\n      } else if (allowNeutralSort && ariaSortValue === 'descending') {\n        return 'Click to unsort';\n      } else {\n        return 'Click to sort in ascending order';\n      }\n    }\n\n    return (\n      <th\n        className={classes}\n        scope={scope}\n        role=\"columnheader\"\n        aria-sort={ariaSortValue}\n        aria-live=\"polite\"\n        {...rest}>\n        <button\n          type=\"button\"\n          className={buttonClasses}\n          onClick={onSort}\n          data-test-subj=\"tableHeaderSortButton\">\n          <span className={contentClasses}>\n            <span className=\"euiTableCellContent__text\">{children}</span>\n            {isSorted && (\n              <EuiIcon\n                className=\"euiTableSortIcon\"\n                type={isSortAscending ? 'sortUp' : 'sortDown'}\n                size=\"m\"\n                aria-label={`Sorted in ${ariaSortValue} order`}\n              />\n            )}\n            <EuiScreenReaderOnly>\n              <span>{getScreenCasterDirection()}</span>\n            </EuiScreenReaderOnly>\n          </span>\n        </button>\n      </th>\n    );\n  }\n\n  return (\n    <th className={classes} scope={scope} role=\"columnheader\" {...rest}>\n      <div className={contentClasses}>\n        <span className=\"euiTableCellContent__text\">{children}</span>\n      </div>\n    </th>\n  );\n};\n\nEuiTableHeaderCell.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  align: PropTypes.oneOf(ALIGNMENT),\n  onSort: PropTypes.func,\n  isSorted: PropTypes.bool,\n  isSortAscending: PropTypes.bool,\n  /**\n   * Set `allowNeutralSort` on EuiInMemoryTable to false to force column sorting.\n   * EuiBasicTable always forces column sorting.\n   */\n  allowNeutralSort: PropTypes.bool,\n  scope: PropTypes.oneOf(['col', 'row', 'colgroup', 'rowgroup']),\n  /**\n   * _DEPRECATED: use `mobileOptions.only = true`_\n   * Indicates if the column was created to be the row's heading in mobile view\n   * (this column will be hidden at larger screens)\n   */\n  isMobileHeader: PropTypes.bool,\n  /**\n   * _DEPRECATED: use `mobileOptions.show = false`_\n   * Indicates if the column should not show for mobile users\n   * (typically hidden because a custom mobile header utilizes the column's contents)\n   */\n  hideForMobile: PropTypes.bool,\n  /**\n   * Mobile options for displaying differently at small screens\n   */\n  mobileOptions: PropTypes.shape({\n    /**\n     * If false, will not render the column at all for mobile\n     */\n    show: PropTypes.bool,\n    /**\n     * Only show for mobile? If true, will not render the column at all for desktop\n     */\n    only: PropTypes.bool,\n  }),\n};\n\nEuiTableHeaderCell.defaultProps = {\n  align: LEFT_ALIGNMENT,\n  scope: 'col',\n  mobileOptions: {\n    show: true,\n  },\n};\n"]}]}