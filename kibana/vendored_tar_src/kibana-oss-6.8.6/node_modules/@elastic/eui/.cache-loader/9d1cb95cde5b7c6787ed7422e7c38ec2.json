{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/observer/resize_observer/resize_observer.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/observer/resize_observer/resize_observer.tsx","mtime":1565204169948},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiResizeObserver = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar _observer = require(\"../observer\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EuiResizeObserver =\n/*#__PURE__*/\nfunction (_EuiObserver) {\n  _inherits(EuiResizeObserver, _EuiObserver);\n\n  function EuiResizeObserver() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiResizeObserver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiResizeObserver)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"name\", 'EuiResizeObserver');\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasResizeObserver\", typeof window.ResizeObserver !== 'undefined');\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onResize\", function () {\n      if (_this.childNode != null) {\n        // Eventually use `clientRect` on the `entries[]` returned natively\n        var _this$childNode$getBo = _this.childNode.getBoundingClientRect(),\n            height = _this$childNode$getBo.height,\n            width = _this$childNode$getBo.width;\n\n        _this.props.onResize({\n          height: height,\n          width: width\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"beginObserve\", function () {\n      var observerOptions;\n\n      if (_this.hasResizeObserver) {\n        _this.observer = new window.ResizeObserver(_this.onResize);\n      } else {\n        // MutationObserver fallback\n        observerOptions = {\n          // [MutationObserverInit](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit)\n          attributes: true,\n          // Account for style changes from `className` or `style`\n          characterData: true,\n          // Account for text content size differences\n          childList: true,\n          // Account for adding/removing child nodes\n          subtree: true // Account for deep child nodes\n\n        };\n        _this.observer = new MutationObserver(_this.onResize);\n        requestAnimationFrame(_this.onResize); // Mimic ResizeObserver behavior of triggering a resize event on init\n      } // The superclass checks that childNode is not null before invoking\n      // beginObserve()\n\n\n      _this.observer.observe(_this.childNode, observerOptions);\n    });\n\n    return _this;\n  }\n\n  return EuiResizeObserver;\n}(_observer.EuiObserver);\n\nexports.EuiResizeObserver = EuiResizeObserver;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/observer/resize_observer/resize_observer.tsx"],"names":["EuiResizeObserver","window","ResizeObserver","childNode","getBoundingClientRect","height","width","props","onResize","observerOptions","hasResizeObserver","observer","attributes","characterData","childList","subtree","MutationObserver","requestAnimationFrame","observe","EuiObserver"],"mappings":";;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;IAOaA,iB;;;;;;;;;;;;;;;;;;mFACJ,mB;;gGAGa,OAAOC,MAAM,CAACC,cAAd,KAAiC,W;;uFAE1C,YAAM;AACf,UAAI,MAAKC,SAAL,IAAkB,IAAtB,EAA4B;AAC1B;AAD0B,oCAEA,MAAKA,SAAL,CAAeC,qBAAf,EAFA;AAAA,YAElBC,MAFkB,yBAElBA,MAFkB;AAAA,YAEVC,KAFU,yBAEVA,KAFU;;AAG1B,cAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBH,UAAAA,MAAM,EAANA,MADkB;AAElBC,UAAAA,KAAK,EAALA;AAFkB,SAApB;AAID;AACF,K;;2FAEc,YAAM;AACnB,UAAIG,eAAJ;;AACA,UAAI,MAAKC,iBAAT,EAA4B;AAC1B,cAAKC,QAAL,GAAgB,IAAIV,MAAM,CAACC,cAAX,CAA0B,MAAKM,QAA/B,CAAhB;AACD,OAFD,MAEO;AACL;AACAC,QAAAA,eAAe,GAAG;AAChB;AACAG,UAAAA,UAAU,EAAE,IAFI;AAEE;AAClBC,UAAAA,aAAa,EAAE,IAHC;AAGK;AACrBC,UAAAA,SAAS,EAAE,IAJK;AAIC;AACjBC,UAAAA,OAAO,EAAE,IALO,CAKD;;AALC,SAAlB;AAOA,cAAKJ,QAAL,GAAgB,IAAIK,gBAAJ,CAAqB,MAAKR,QAA1B,CAAhB;AACAS,QAAAA,qBAAqB,CAAC,MAAKT,QAAN,CAArB,CAVK,CAUiC;AACvC,OAfkB,CAgBnB;AACA;;;AACA,YAAKG,QAAL,CAAcO,OAAd,CAAsB,MAAKf,SAA3B,EAAuCM,eAAvC;AACD,K;;;;;;EApCoCU,qB","sourcesContent":["import { ReactNode } from 'react';\n\nimport { EuiObserver } from '../observer';\n\ninterface Props {\n  children: (ref: (e: HTMLElement | null) => void) => ReactNode;\n  onResize: (dimensions: { height: number; width: number }) => void;\n}\n\nexport class EuiResizeObserver extends EuiObserver<Props> {\n  name = 'EuiResizeObserver';\n\n  // Only Chrome and Opera support the `ResizeObserver` API at the time of writing\n  hasResizeObserver = typeof window.ResizeObserver !== 'undefined';\n\n  onResize = () => {\n    if (this.childNode != null) {\n      // Eventually use `clientRect` on the `entries[]` returned natively\n      const { height, width } = this.childNode.getBoundingClientRect();\n      this.props.onResize({\n        height,\n        width,\n      });\n    }\n  };\n\n  beginObserve = () => {\n    let observerOptions;\n    if (this.hasResizeObserver) {\n      this.observer = new window.ResizeObserver(this.onResize);\n    } else {\n      // MutationObserver fallback\n      observerOptions = {\n        // [MutationObserverInit](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit)\n        attributes: true, // Account for style changes from `className` or `style`\n        characterData: true, // Account for text content size differences\n        childList: true, // Account for adding/removing child nodes\n        subtree: true, // Account for deep child nodes\n      };\n      this.observer = new MutationObserver(this.onResize);\n      requestAnimationFrame(this.onResize); // Mimic ResizeObserver behavior of triggering a resize event on init\n    }\n    // The superclass checks that childNode is not null before invoking\n    // beginObserve()\n    this.observer.observe(this.childNode!, observerOptions);\n  };\n}\n"]}]}