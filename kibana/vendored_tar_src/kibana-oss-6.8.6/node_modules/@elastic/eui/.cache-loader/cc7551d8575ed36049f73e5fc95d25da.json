{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/color_picker/color_picker_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/color_picker/color_picker_example.js","mtime":1565204169445},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorPickerExample = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _color_picker = require(\"./color_picker\");\n\nvar _custom_swatches = require(\"./custom_swatches\");\n\nvar _custom_button = require(\"./custom_button\");\n\nvar _modes = require(\"./modes\");\n\nvar _containers = _interopRequireDefault(require(\"./containers\"));\n\nvar _kitchen_sink = require(\"./kitchen_sink\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar colorPickerSource = require('!!raw-loader!./color_picker');\n\nvar colorPickerHtml = (0, _services.renderToHtml)(_color_picker.ColorPicker);\nvar colorPickerSnippet = \"<EuiColorPicker\\n  id={colorPickerId}\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n/>\\n\";\n\nvar customSwatchesSource = require('!!raw-loader!./custom_swatches');\n\nvar customSwatchesHtml = (0, _services.renderToHtml)(_custom_swatches.CustomSwatches);\nvar customSwatchesSnippet = \"<EuiColorPicker\\n  id={colorPickerId}\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n  swatches={[\\n    '#333',\\n    '#666',\\n    '#999',\\n    '#CCC',\\n  ]}\\n/>\\n\";\n\nvar customButtonSource = require('!!raw-loader!./custom_button');\n\nvar customButtonHtml = (0, _services.renderToHtml)(_custom_button.CustomButton);\nvar customButtonSnippet = \"<EuiColorPicker\\n  onChange={handleChange}\\n  color={chosenColor}\\n  button={\\n    <EuiColorPickerSwatch\\n      color={chosenColor}\\n      aria-label=\\\"Select a new color\\\"\\n    />\\n  }\\n/>\\n\";\nvar customBadgeSnippet = \"// Be sure to provide relevant accessibility to unmanaged elements\\n<EuiColorPicker\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n  button={\\n    <EuiBadge\\n      color={chosenColor ? chosenColor : 'hollow'}\\n      onClickAriaLabel=\\\"Select a new color\\\"\\n    >\\n      I'm a Badge\\n    </EuiBadge>\\n  }\\n/>\\n\";\n\nvar modesSource = require('!!raw-loader!./modes');\n\nvar modesHtml = (0, _services.renderToHtml)(_modes.Modes);\nvar modesSwatchSnippet = \"// Swatches only\\n<EuiColorPicker\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n  mode=\\\"swatch\\\"\\n/>\\n\";\nvar modesPickerSnippet = \"// Gradient map only\\n<EuiColorPicker\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n  mode=\\\"picker\\\"\\n/>\\n\";\n\nvar containersSource = require('!!raw-loader!./containers');\n\nvar containersHtml = (0, _services.renderToHtml)(_containers.default);\n\nvar kitchenSinkSource = require('!!raw-loader!./kitchen_sink');\n\nvar kitchenSinkHtml = (0, _services.renderToHtml)(_kitchen_sink.KitchenSink);\nvar kitchenSinkSnippet = \"<EuiColorPicker\\n  onChange={handleChange}\\n  color={chosenColor}\\n  isInvalid={hasErrors}\\n  onBlur={() => {}}\\n  onFocus={() => {}}\\n  compressed={true}\\n  popoverZIndex={10}\\n  mode=\\\"default\\\"\\n  swatches={[\\n    '#333',\\n    '#666',\\n    '#999',\\n    '#CCC',\\n    '#FFF',\\n  ]}\\n/>\\n\";\nvar ColorPickerExample = {\n  title: 'Color Picker',\n  intro: _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_components2.EuiText, null, _react.default.createElement(\"p\", null, \"Color input component allowing for multiple methods of entry and selection.\"), _react.default.createElement(\"p\", null, \"Direct text entry will only match hexadecimal (hex) colors, and output values only return hex values. Spatial selection involves HSV manipulaton, which is converted to hex.\"), _react.default.createElement(\"p\", null, \"Swatches allow consumers to predefine preferred or suggested choices. The swatches must also be entered in hex format.\"))),\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: colorPickerSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: colorPickerHtml\n    }],\n    props: {\n      EuiColorPicker: _components2.EuiColorPicker\n    },\n    snippet: colorPickerSnippet,\n    demo: _react.default.createElement(_color_picker.ColorPicker, null)\n  }, {\n    title: 'Custom color swatches',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: customSwatchesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: customSwatchesHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"By default the colors provided are the ten color blind safe visualization colors. You can however pass in your own color set with the \", _react.default.createElement(_components2.EuiCode, null, \"swatches\"), \" prop.\"),\n    snippet: customSwatchesSnippet,\n    demo: _react.default.createElement(_custom_swatches.CustomSwatches, null)\n  }, {\n    title: 'Custom button',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: customButtonSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: customButtonHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can optionally use a custom button as the trigger for selection using the \", _react.default.createElement(_components2.EuiCode, null, \"button\"), \" prop. Please remember to add accessibility to this component, using proper button markup and aria labeling.\"),\n    snippet: [customButtonSnippet, customBadgeSnippet],\n    demo: _react.default.createElement(_custom_button.CustomButton, null)\n  }, {\n    title: 'Limited selection modes',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: modesSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: modesHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"By default, both swatch selection and the gradient color map will be rendered. Use the \", _react.default.createElement(_components2.EuiCode, null, \"mode\"), \" prop to pass `swatch` for swatch-only selection, or pass `picker` for gradient map and hue slider selection without swatches.\"),\n    snippet: [modesSwatchSnippet, modesPickerSnippet],\n    demo: _react.default.createElement(_modes.Modes, null)\n  }, {\n    title: 'Containers',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: containersSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: containersHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Demonstrating that \", _react.default.createElement(_components2.EuiCode, null, \"EuiColorPicker\"), \" can exist in portal containers and that its popover position works in nested contexts.\"),\n    demo: _react.default.createElement(_containers.default, null)\n  }, {\n    title: 'Kitchen sink',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: kitchenSinkSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: kitchenSinkHtml\n    }],\n    snippet: kitchenSinkSnippet,\n    demo: _react.default.createElement(_kitchen_sink.KitchenSink, null)\n  }]\n};\nexports.ColorPickerExample = ColorPickerExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/color_picker/color_picker_example.js"],"names":["colorPickerSource","require","colorPickerHtml","ColorPicker","colorPickerSnippet","customSwatchesSource","customSwatchesHtml","CustomSwatches","customSwatchesSnippet","customButtonSource","customButtonHtml","CustomButton","customButtonSnippet","customBadgeSnippet","modesSource","modesHtml","Modes","modesSwatchSnippet","modesPickerSnippet","containersSource","containersHtml","Containers","kitchenSinkSource","kitchenSinkHtml","KitchenSink","kitchenSinkSnippet","ColorPickerExample","title","intro","sections","source","type","GuideSectionTypes","JS","code","HTML","props","EuiColorPicker","snippet","demo","text"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiColorPicker, EuiText } from '../../../../src/components';\n\nimport { ColorPicker } from './color_picker';\nconst colorPickerSource = require('!!raw-loader!./color_picker');\nconst colorPickerHtml = renderToHtml(ColorPicker);\nconst colorPickerSnippet = `<EuiColorPicker\n  id={colorPickerId}\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n/>\n`;\n\nimport { CustomSwatches } from './custom_swatches';\nconst customSwatchesSource = require('!!raw-loader!./custom_swatches');\nconst customSwatchesHtml = renderToHtml(CustomSwatches);\nconst customSwatchesSnippet = `<EuiColorPicker\n  id={colorPickerId}\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n  swatches={[\n    '#333',\n    '#666',\n    '#999',\n    '#CCC',\n  ]}\n/>\n`;\n\nimport { CustomButton } from './custom_button';\nconst customButtonSource = require('!!raw-loader!./custom_button');\nconst customButtonHtml = renderToHtml(CustomButton);\nconst customButtonSnippet = `<EuiColorPicker\n  onChange={handleChange}\n  color={chosenColor}\n  button={\n    <EuiColorPickerSwatch\n      color={chosenColor}\n      aria-label=\"Select a new color\"\n    />\n  }\n/>\n`;\nconst customBadgeSnippet = `// Be sure to provide relevant accessibility to unmanaged elements\n<EuiColorPicker\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n  button={\n    <EuiBadge\n      color={chosenColor ? chosenColor : 'hollow'}\n      onClickAriaLabel=\"Select a new color\"\n    >\n      I'm a Badge\n    </EuiBadge>\n  }\n/>\n`;\n\nimport { Modes } from './modes';\nconst modesSource = require('!!raw-loader!./modes');\nconst modesHtml = renderToHtml(Modes);\nconst modesSwatchSnippet = `// Swatches only\n<EuiColorPicker\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n  mode=\"swatch\"\n/>\n`;\nconst modesPickerSnippet = `// Gradient map only\n<EuiColorPicker\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n  mode=\"picker\"\n/>\n`;\n\nimport Containers from './containers';\nconst containersSource = require('!!raw-loader!./containers');\nconst containersHtml = renderToHtml(Containers);\n\nimport { KitchenSink } from './kitchen_sink';\nconst kitchenSinkSource = require('!!raw-loader!./kitchen_sink');\nconst kitchenSinkHtml = renderToHtml(KitchenSink);\nconst kitchenSinkSnippet = `<EuiColorPicker\n  onChange={handleChange}\n  color={chosenColor}\n  isInvalid={hasErrors}\n  onBlur={() => {}}\n  onFocus={() => {}}\n  compressed={true}\n  popoverZIndex={10}\n  mode=\"default\"\n  swatches={[\n    '#333',\n    '#666',\n    '#999',\n    '#CCC',\n    '#FFF',\n  ]}\n/>\n`;\n\nexport const ColorPickerExample = {\n  title: 'Color Picker',\n  intro: (\n    <React.Fragment>\n      <EuiText>\n        <p>\n          Color input component allowing for multiple methods of entry and\n          selection.\n        </p>\n        <p>\n          Direct text entry will only match hexadecimal (hex) colors, and output\n          values only return hex values. Spatial selection involves HSV\n          manipulaton, which is converted to hex.\n        </p>\n        <p>\n          Swatches allow consumers to predefine preferred or suggested choices.\n          The swatches must also be entered in hex format.\n        </p>\n      </EuiText>\n    </React.Fragment>\n  ),\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: colorPickerSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: colorPickerHtml,\n        },\n      ],\n      props: { EuiColorPicker },\n      snippet: colorPickerSnippet,\n      demo: <ColorPicker />,\n    },\n    {\n      title: 'Custom color swatches',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: customSwatchesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: customSwatchesHtml,\n        },\n      ],\n      text: (\n        <p>\n          By default the colors provided are the ten color blind safe\n          visualization colors. You can however pass in your own color set with\n          the <EuiCode>swatches</EuiCode> prop.\n        </p>\n      ),\n      snippet: customSwatchesSnippet,\n      demo: <CustomSwatches />,\n    },\n    {\n      title: 'Custom button',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: customButtonSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: customButtonHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can optionally use a custom button as the trigger for selection\n          using the <EuiCode>button</EuiCode> prop. Please remember to add\n          accessibility to this component, using proper button markup and aria\n          labeling.\n        </p>\n      ),\n      snippet: [customButtonSnippet, customBadgeSnippet],\n      demo: <CustomButton />,\n    },\n    {\n      title: 'Limited selection modes',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: modesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: modesHtml,\n        },\n      ],\n      text: (\n        <p>\n          By default, both swatch selection and the gradient color map will be\n          rendered. Use the <EuiCode>mode</EuiCode> prop to pass `swatch` for\n          swatch-only selection, or pass `picker` for gradient map and hue\n          slider selection without swatches.\n        </p>\n      ),\n      snippet: [modesSwatchSnippet, modesPickerSnippet],\n      demo: <Modes />,\n    },\n    {\n      title: 'Containers',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: containersSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: containersHtml,\n        },\n      ],\n      text: (\n        <p>\n          Demonstrating that <EuiCode>EuiColorPicker</EuiCode> can exist in\n          portal containers and that its popover position works in nested\n          contexts.\n        </p>\n      ),\n      demo: <Containers />,\n    },\n    {\n      title: 'Kitchen sink',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: kitchenSinkSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: kitchenSinkHtml,\n        },\n      ],\n      snippet: kitchenSinkSnippet,\n      demo: <KitchenSink />,\n    },\n  ],\n};\n"]}]}