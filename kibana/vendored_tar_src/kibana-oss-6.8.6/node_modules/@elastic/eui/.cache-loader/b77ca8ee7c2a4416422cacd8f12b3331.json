{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/services/format/format_auto.ts","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/services/format/format_auto.ts","mtime":1565204170067},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatAuto = void 0;\n\nvar _predicate = require(\"../predicate\");\n\nvar _format_boolean = require(\"./format_boolean\");\n\nvar _format_date = require(\"./format_date\");\n\nvar _format_number = require(\"./format_number\");\n\nvar _format_text = require(\"./format_text\");\n\nvar formatAuto = function formatAuto(value) {\n  if ((0, _predicate.isNil)(value) || (0, _predicate.isNaN)(value)) {\n    return '';\n  }\n\n  if ((0, _predicate.isString)(value)) {\n    return (0, _format_text.formatText)(value);\n  }\n\n  if ((0, _predicate.isDate)(value)) {\n    return (0, _format_date.formatDate)(value);\n  }\n\n  if ((0, _predicate.isBoolean)(value)) {\n    return (0, _format_boolean.formatBoolean)(value);\n  }\n\n  if ((0, _predicate.isNumber)(value)) {\n    return (0, _format_number.formatNumber)(value);\n  }\n\n  if ((0, _predicate.isArray)(value)) {\n    return Array.isArray(value) ? value.map(function (item) {\n      return formatAuto(item);\n    }).join(', ') : formatAuto(value);\n  } // TODO not sure if we want that.. the (+) is that we show something, the (-) is that it's very technical\n\n\n  return JSON.stringify(value);\n};\n\nexports.formatAuto = formatAuto;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/services/format/format_auto.ts"],"names":["formatAuto","value","Array","isArray","map","item","join","JSON","stringify"],"mappings":";;;;;;;AAAA;;AASA;;AACA;;AACA;;AACA;;AAEO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAwB;AAChD,MAAI,sBAAMA,KAAN,KAAgB,sBAAMA,KAAN,CAApB,EAAkC;AAChC,WAAO,EAAP;AACD;;AAED,MAAI,yBAASA,KAAT,CAAJ,EAAqB;AACnB,WAAO,6BAAWA,KAAX,CAAP;AACD;;AAED,MAAI,uBAAOA,KAAP,CAAJ,EAAmB;AACjB,WAAO,6BAAWA,KAAX,CAAP;AACD;;AAED,MAAI,0BAAUA,KAAV,CAAJ,EAAsB;AACpB,WAAO,mCAAcA,KAAd,CAAP;AACD;;AAED,MAAI,yBAASA,KAAT,CAAJ,EAAqB;AACnB,WAAO,iCAAaA,KAAb,CAAP;AACD;;AAED,MAAI,wBAAQA,KAAR,CAAJ,EAAoB;AAClB,WAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,IACHA,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,aAAIL,UAAU,CAACK,IAAD,CAAd;AAAA,KAAd,EAAoCC,IAApC,CAAyC,IAAzC,CADG,GAEHN,UAAU,CAACC,KAAD,CAFd;AAGD,GAzB+C,CA2BhD;;;AACA,SAAOM,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAP;AACD,CA7BM","sourcesContent":["import {\n  isNil,\n  isArray,\n  isBoolean,\n  isDate,\n  isNaN,\n  isNumber,\n  isString,\n} from '../predicate';\nimport { formatBoolean } from './format_boolean';\nimport { formatDate } from './format_date';\nimport { formatNumber } from './format_number';\nimport { formatText } from './format_text';\n\nexport const formatAuto = (value: any): string => {\n  if (isNil(value) || isNaN(value)) {\n    return '';\n  }\n\n  if (isString(value)) {\n    return formatText(value);\n  }\n\n  if (isDate(value)) {\n    return formatDate(value);\n  }\n\n  if (isBoolean(value)) {\n    return formatBoolean(value);\n  }\n\n  if (isNumber(value)) {\n    return formatNumber(value);\n  }\n\n  if (isArray(value)) {\n    return Array.isArray(value)\n      ? value.map(item => formatAuto(item)).join(', ')\n      : formatAuto(value);\n  }\n\n  // TODO not sure if we want that.. the (+) is that we show something, the (-) is that it's very technical\n  return JSON.stringify(value);\n};\n"]}]}