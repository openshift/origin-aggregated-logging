{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/combo_box/combo_box_example.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/combo_box/combo_box_example.js","mtime":1565204169448},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComboBoxExample = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRouter = require(\"react-router\");\n\nvar _services = require(\"../../services\");\n\nvar _components = require(\"../../components\");\n\nvar _components2 = require(\"../../../../src/components\");\n\nvar _combo_box = _interopRequireDefault(require(\"./combo_box\"));\n\nvar _containers = _interopRequireDefault(require(\"./containers\"));\n\nvar _colors = _interopRequireDefault(require(\"./colors\"));\n\nvar _render_option = _interopRequireDefault(require(\"./render_option\"));\n\nvar _groups = _interopRequireDefault(require(\"./groups\"));\n\nvar _single_selection = _interopRequireDefault(require(\"./single_selection\"));\n\nvar _disallow_custom_options = _interopRequireDefault(require(\"./disallow_custom_options\"));\n\nvar _custom_options_only = _interopRequireDefault(require(\"./custom_options_only\"));\n\nvar _async = _interopRequireDefault(require(\"./async\"));\n\nvar _virtualized = _interopRequireDefault(require(\"./virtualized\"));\n\nvar _disabled = _interopRequireDefault(require(\"./disabled\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar comboBoxSource = require('!!raw-loader!./combo_box');\n\nvar comboBoxHtml = (0, _services.renderToHtml)(_combo_box.default);\n\nvar containersSource = require('!!raw-loader!./containers');\n\nvar containersHtml = (0, _services.renderToHtml)(_containers.default);\n\nvar colorsSource = require('!!raw-loader!./colors');\n\nvar colorsHtml = (0, _services.renderToHtml)(_colors.default);\n\nvar renderOptionSource = require('!!raw-loader!./render_option');\n\nvar renderOptionHtml = (0, _services.renderToHtml)(_render_option.default);\n\nvar groupsSource = require('!!raw-loader!./groups');\n\nvar groupsHtml = (0, _services.renderToHtml)(_groups.default);\n\nvar singleSelectionSource = require('!!raw-loader!./single_selection');\n\nvar singleSelectionHtml = (0, _services.renderToHtml)(_single_selection.default);\n\nvar disallowCustomOptionsSource = require('!!raw-loader!./disallow_custom_options');\n\nvar disallowCustomOptionsHtml = (0, _services.renderToHtml)(_disallow_custom_options.default);\n\nvar customOptionsOnlySource = require('!!raw-loader!./custom_options_only');\n\nvar customOptionsOnlyHtml = (0, _services.renderToHtml)(_custom_options_only.default);\n\nvar asyncSource = require('!!raw-loader!./async');\n\nvar asyncHtml = (0, _services.renderToHtml)(_async.default);\n\nvar virtualizedSource = require('!!raw-loader!./virtualized');\n\nvar virtualizedHtml = (0, _services.renderToHtml)(_virtualized.default);\n\nvar disabledSource = require('!!raw-loader!./disabled');\n\nvar disabledHtml = (0, _services.renderToHtml)(_disabled.default);\nvar ComboBoxExample = {\n  title: 'Combo Box',\n  intro: _react.default.createElement(_react.Fragment, null, _react.default.createElement(_components2.EuiText, null, _react.default.createElement(\"p\", null, \"Use a \", _react.default.createElement(_components2.EuiCode, null, \"EuiComboBox\"), \" when the input has so many options that the user needs to be able to search them, the user needs to be able to select multiple options, and/or the user should have the ability to specify a custom value in addition to selecting from a predetermined list.\")), _react.default.createElement(_components2.EuiSpacer, null), _react.default.createElement(_components2.EuiCallOut, {\n    title: \"No duplicate option labels allowed\",\n    color: \"warning\"\n  }, _react.default.createElement(\"p\", null, \"The combo box will have errors if any of the options you pass to it share the same label property. It\\u2019s OK if options have duplicate values, though. This is because the label is the only thing the combo box is concerned about, since this is what the user sees and what is matched against when the user searches.\")), _react.default.createElement(_components2.EuiSpacer, {\n    size: \"l\"\n  })),\n  sections: [{\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: comboBoxSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: comboBoxHtml\n    }],\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_combo_box.default, null)\n  }, {\n    title: 'Disabled',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: disabledSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: disabledHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Set the prop \", _react.default.createElement(_components2.EuiCode, null, \"isDisabled\"), \" to make the combo box disabled.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_disabled.default, null)\n  }, {\n    title: 'Virtualized',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: virtualizedSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: virtualizedHtml\n    }],\n    text: _react.default.createElement(\"p\", null, _react.default.createElement(_components2.EuiCode, null, \"EuiComboBoxList\"), \" uses\", ' ', _react.default.createElement(_components2.EuiLink, {\n      href: \"https://github.com/bvaughn/react-virtualized\"\n    }, \"react-virtualized\"), ' ', \"to only render visible options to be super fast no matter how many options there are.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_virtualized.default, null)\n  }, {\n    title: 'Containers',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: containersSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: containersHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"This example demonstrates how the combo box works within containers. Because this component uses portals, it\\u2019s important that it works within other portal-using components.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_containers.default, null)\n  }, {\n    title: 'Pill colors',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: colorsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: colorsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Useful for visualization or tagging systems. You can also pass a color in your option list. The color can be a hex value (like\", ' ', _react.default.createElement(_components2.EuiCode, null, \"#000\"), \") or any other named color value accepted by the \", _react.default.createElement(_reactRouter.Link, {\n      to: \"/display/badge\"\n    }, \"Badge\"), \" component.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_colors.default, null)\n  }, {\n    title: 'Option rendering',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: renderOptionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: renderOptionHtml\n    }],\n    text: _react.default.createElement(_react.Fragment, null, _react.default.createElement(\"p\", null, \"You can provide a \", _react.default.createElement(_components2.EuiCode, null, \"renderOption\"), \" prop which will accept \", _react.default.createElement(_components2.EuiCode, null, \"option\"), \" and \", _react.default.createElement(_components2.EuiCode, null, \"searchValue\"), ' ', \"arguments. Use the \", _react.default.createElement(_components2.EuiCode, null, \"value\"), \" prop of the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"option\"), \" object to store metadata about the option for use in this callback.\"), _react.default.createElement(\"p\", null, _react.default.createElement(\"strong\", null, \"Note:\"), \" virtualization (above) requires that each option have the same height. Ensure that you render the options so that wrapping text is truncated instead of causing the height of the option to change.\")),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_render_option.default, null)\n  }, {\n    title: 'Groups',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: groupsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: groupsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"You can group options together. The groups \", _react.default.createElement(\"em\", null, \"won\\u2019t\"), \" match against the search value.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_groups.default, null)\n  }, {\n    title: 'Single selection',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: singleSelectionSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: singleSelectionHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"To only allow the user to select a single option, provide the\", ' ', _react.default.createElement(_components2.EuiCode, null, \"singleSelection\"), \" prop. You may want to render the selected option as plain text instead of pill form. To do this, pass\", ' ', _react.default.createElement(_components2.EuiCode, null, 'singleSelection={{ asPlainText: true }}')),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_single_selection.default, null)\n  }, {\n    title: 'Disallowing custom options',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: disallowCustomOptionsSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: disallowCustomOptionsHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Leave out the \", _react.default.createElement(_components2.EuiCode, null, \"onCreateOption\"), \" prop to disallow the creation of custom options.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_disallow_custom_options.default, null)\n  }, {\n    title: 'Custom options only, with validation',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: customOptionsOnlySource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: customOptionsOnlyHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Alternatively, provide the \", _react.default.createElement(_components2.EuiCode, null, \"noSuggestions\"), \" prop to hide the suggestions list and \", _react.default.createElement(\"em\", null, \"only\"), \" allow the creation of custom options.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_custom_options_only.default, null)\n  }, {\n    title: 'Async',\n    source: [{\n      type: _components.GuideSectionTypes.JS,\n      code: asyncSource\n    }, {\n      type: _components.GuideSectionTypes.HTML,\n      code: asyncHtml\n    }],\n    text: _react.default.createElement(\"p\", null, \"Use the \", _react.default.createElement(_components2.EuiCode, null, \"onSearchChange\"), \" code to handle searches asynchronously. Use the\", _react.default.createElement(_components2.EuiCode, null, \"isLoading\"), \" prop to let the user know that something async is happening.\"),\n    props: {\n      EuiComboBox: _components2.EuiComboBox\n    },\n    demo: _react.default.createElement(_async.default, null)\n  }]\n};\nexports.ComboBoxExample = ComboBoxExample;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/combo_box/combo_box_example.js"],"names":["comboBoxSource","require","comboBoxHtml","ComboBox","containersSource","containersHtml","Containers","colorsSource","colorsHtml","Colors","renderOptionSource","renderOptionHtml","RenderOption","groupsSource","groupsHtml","Groups","singleSelectionSource","singleSelectionHtml","SingleSelection","disallowCustomOptionsSource","disallowCustomOptionsHtml","DisallowCustomOptions","customOptionsOnlySource","customOptionsOnlyHtml","CustomOptionsOnly","asyncSource","asyncHtml","Async","virtualizedSource","virtualizedHtml","Virtualized","disabledSource","disabledHtml","Disabled","ComboBoxExample","title","intro","sections","source","type","GuideSectionTypes","JS","code","HTML","props","EuiComboBox","demo","text"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { Link } from 'react-router';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiLink,\n  EuiCallOut,\n  EuiCode,\n  EuiComboBox,\n  EuiSpacer,\n  EuiText,\n} from '../../../../src/components';\n\nimport ComboBox from './combo_box';\nconst comboBoxSource = require('!!raw-loader!./combo_box');\nconst comboBoxHtml = renderToHtml(ComboBox);\n\nimport Containers from './containers';\nconst containersSource = require('!!raw-loader!./containers');\nconst containersHtml = renderToHtml(Containers);\n\nimport Colors from './colors';\nconst colorsSource = require('!!raw-loader!./colors');\nconst colorsHtml = renderToHtml(Colors);\n\nimport RenderOption from './render_option';\nconst renderOptionSource = require('!!raw-loader!./render_option');\nconst renderOptionHtml = renderToHtml(RenderOption);\n\nimport Groups from './groups';\nconst groupsSource = require('!!raw-loader!./groups');\nconst groupsHtml = renderToHtml(Groups);\n\nimport SingleSelection from './single_selection';\nconst singleSelectionSource = require('!!raw-loader!./single_selection');\nconst singleSelectionHtml = renderToHtml(SingleSelection);\n\nimport DisallowCustomOptions from './disallow_custom_options';\nconst disallowCustomOptionsSource = require('!!raw-loader!./disallow_custom_options');\nconst disallowCustomOptionsHtml = renderToHtml(DisallowCustomOptions);\n\nimport CustomOptionsOnly from './custom_options_only';\nconst customOptionsOnlySource = require('!!raw-loader!./custom_options_only');\nconst customOptionsOnlyHtml = renderToHtml(CustomOptionsOnly);\n\nimport Async from './async';\nconst asyncSource = require('!!raw-loader!./async');\nconst asyncHtml = renderToHtml(Async);\n\nimport Virtualized from './virtualized';\nconst virtualizedSource = require('!!raw-loader!./virtualized');\nconst virtualizedHtml = renderToHtml(Virtualized);\n\nimport Disabled from './disabled';\nconst disabledSource = require('!!raw-loader!./disabled');\nconst disabledHtml = renderToHtml(Disabled);\n\nexport const ComboBoxExample = {\n  title: 'Combo Box',\n  intro: (\n    <Fragment>\n      <EuiText>\n        <p>\n          Use a <EuiCode>EuiComboBox</EuiCode> when the input has so many\n          options that the user needs to be able to search them, the user needs\n          to be able to select multiple options, and/or the user should have the\n          ability to specify a custom value in addition to selecting from a\n          predetermined list.\n        </p>\n      </EuiText>\n\n      <EuiSpacer />\n\n      <EuiCallOut title=\"No duplicate option labels allowed\" color=\"warning\">\n        <p>\n          The combo box will have errors if any of the options you pass to it\n          share the same label property. It&rsquo;s OK if options have duplicate\n          values, though. This is because the label is the only thing the combo\n          box is concerned about, since this is what the user sees and what is\n          matched against when the user searches.\n        </p>\n      </EuiCallOut>\n\n      <EuiSpacer size=\"l\" />\n    </Fragment>\n  ),\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: comboBoxSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: comboBoxHtml,\n        },\n      ],\n      props: { EuiComboBox },\n      demo: <ComboBox />,\n    },\n    {\n      title: 'Disabled',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: disabledSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: disabledHtml,\n        },\n      ],\n      text: (\n        <p>\n          Set the prop <EuiCode>isDisabled</EuiCode> to make the combo box\n          disabled.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Disabled />,\n    },\n    {\n      title: 'Virtualized',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: virtualizedSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: virtualizedHtml,\n        },\n      ],\n      text: (\n        <p>\n          <EuiCode>EuiComboBoxList</EuiCode> uses{' '}\n          <EuiLink href=\"https://github.com/bvaughn/react-virtualized\">\n            react-virtualized\n          </EuiLink>{' '}\n          to only render visible options to be super fast no matter how many\n          options there are.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Virtualized />,\n    },\n    {\n      title: 'Containers',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: containersSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: containersHtml,\n        },\n      ],\n      text: (\n        <p>\n          This example demonstrates how the combo box works within containers.\n          Because this component uses portals, it&rsquo;s important that it\n          works within other portal-using components.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Containers />,\n    },\n    {\n      title: 'Pill colors',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: colorsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: colorsHtml,\n        },\n      ],\n      text: (\n        <p>\n          Useful for visualization or tagging systems. You can also pass a color\n          in your option list. The color can be a hex value (like{' '}\n          <EuiCode>#000</EuiCode>) or any other named color value accepted by\n          the <Link to=\"/display/badge\">Badge</Link> component.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Colors />,\n    },\n    {\n      title: 'Option rendering',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: renderOptionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: renderOptionHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            You can provide a <EuiCode>renderOption</EuiCode> prop which will\n            accept <EuiCode>option</EuiCode> and <EuiCode>searchValue</EuiCode>{' '}\n            arguments. Use the <EuiCode>value</EuiCode> prop of the{' '}\n            <EuiCode>option</EuiCode> object to store metadata about the option\n            for use in this callback.\n          </p>\n\n          <p>\n            <strong>Note:</strong> virtualization (above) requires that each\n            option have the same height. Ensure that you render the options so\n            that wrapping text is truncated instead of causing the height of the\n            option to change.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiComboBox },\n      demo: <RenderOption />,\n    },\n    {\n      title: 'Groups',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: groupsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: groupsHtml,\n        },\n      ],\n      text: (\n        <p>\n          You can group options together. The groups <em>won&rsquo;t</em> match\n          against the search value.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Groups />,\n    },\n    {\n      title: 'Single selection',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: singleSelectionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: singleSelectionHtml,\n        },\n      ],\n      text: (\n        <p>\n          To only allow the user to select a single option, provide the{' '}\n          <EuiCode>singleSelection</EuiCode> prop. You may want to render the\n          selected option as plain text instead of pill form. To do this, pass{' '}\n          <EuiCode>{'singleSelection={{ asPlainText: true }}'}</EuiCode>\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <SingleSelection />,\n    },\n    {\n      title: 'Disallowing custom options',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: disallowCustomOptionsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: disallowCustomOptionsHtml,\n        },\n      ],\n      text: (\n        <p>\n          Leave out the <EuiCode>onCreateOption</EuiCode> prop to disallow the\n          creation of custom options.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <DisallowCustomOptions />,\n    },\n    {\n      title: 'Custom options only, with validation',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: customOptionsOnlySource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: customOptionsOnlyHtml,\n        },\n      ],\n      text: (\n        <p>\n          Alternatively, provide the <EuiCode>noSuggestions</EuiCode> prop to\n          hide the suggestions list and <em>only</em> allow the creation of\n          custom options.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <CustomOptionsOnly />,\n    },\n    {\n      title: 'Async',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: asyncSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: asyncHtml,\n        },\n      ],\n      text: (\n        <p>\n          Use the <EuiCode>onSearchChange</EuiCode> code to handle searches\n          asynchronously. Use the\n          <EuiCode>isLoading</EuiCode> prop to let the user know that something\n          async is happening.\n        </p>\n      ),\n      props: { EuiComboBox },\n      demo: <Async />,\n    },\n  ],\n};\n"]}]}