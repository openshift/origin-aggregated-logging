{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/key_pad_menu/key_pad_menu_item.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/key_pad_menu/key_pad_menu_item.js","mtime":1565204169927},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiKeyPadMenuItemButton = exports.EuiKeyPadMenuItem = void 0;\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _beta_badge = require(\"../../components/badge/beta_badge\");\n\nvar _icon = require(\"../icon\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar renderContent = function renderContent(children, label, betaBadgeLabel, betaBadgeTooltipContent, betaBadgeIconType) {\n  return _react.default.createElement(\"div\", {\n    className: \"euiKeyPadMenuItem__inner\"\n  }, betaBadgeLabel && _react.default.createElement(\"span\", {\n    className: \"euiKeyPadMenuItem__betaBadgeWrapper\"\n  }, _react.default.createElement(_beta_badge.EuiBetaBadge, {\n    className: \"euiKeyPadMenuItem__betaBadge\",\n    label: betaBadgeLabel,\n    iconType: betaBadgeIconType,\n    tooltipContent: betaBadgeTooltipContent\n  })), _react.default.createElement(\"div\", {\n    className: \"euiKeyPadMenuItem__icon\"\n  }, children), _react.default.createElement(\"p\", {\n    className: \"euiKeyPadMenuItem__label\"\n  }, label));\n};\n\nvar commonPropTypes = {\n  children: _propTypes.default.node.isRequired,\n  label: _propTypes.default.node.isRequired,\n\n  /**\n   * Add a badge to the card to label it as \"Beta\" or other non-GA state\n   */\n  betaBadgeLabel: _propTypes.default.string,\n\n  /**\n   * Supply an icon type if the badge should just be an icon\n   */\n  betaBadgeIconType: _icon.IconPropType,\n\n  /**\n   * Add a description to the beta badge (will appear in a tooltip)\n   */\n  betaBadgeTooltipContent: _propTypes.default.node\n};\n\nvar EuiKeyPadMenuItem = function EuiKeyPadMenuItem(_ref) {\n  var href = _ref.href,\n      label = _ref.label,\n      children = _ref.children,\n      className = _ref.className,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeIconType = _ref.betaBadgeIconType,\n      rest = _objectWithoutProperties(_ref, [\"href\", \"label\", \"children\", \"className\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeIconType\"]);\n\n  var classes = (0, _classnames.default)('euiKeyPadMenuItem', {\n    'euiKeyPadMenuItem--hasBetaBadge': betaBadgeLabel\n  }, className);\n  return _react.default.createElement(\"a\", _extends({\n    href: href,\n    className: classes,\n    role: \"menuitem\"\n  }, rest), renderContent(children, label, betaBadgeLabel, betaBadgeTooltipContent, betaBadgeIconType));\n};\n\nexports.EuiKeyPadMenuItem = EuiKeyPadMenuItem;\nEuiKeyPadMenuItem.propTypes = _objectSpread({}, {\n  href: _propTypes.default.string\n}, commonPropTypes);\n\nvar EuiKeyPadMenuItemButton = function EuiKeyPadMenuItemButton(_ref2) {\n  var onClick = _ref2.onClick,\n      label = _ref2.label,\n      children = _ref2.children,\n      className = _ref2.className,\n      betaBadgeLabel = _ref2.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref2.betaBadgeTooltipContent,\n      betaBadgeIconType = _ref2.betaBadgeIconType,\n      rest = _objectWithoutProperties(_ref2, [\"onClick\", \"label\", \"children\", \"className\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeIconType\"]);\n\n  var classes = (0, _classnames.default)('euiKeyPadMenuItem', {\n    'euiKeyPadMenuItem--hasBetaBadge': betaBadgeLabel\n  }, className);\n  return _react.default.createElement(\"button\", _extends({\n    type: \"button\",\n    onClick: onClick,\n    className: classes\n  }, rest), renderContent(children, label, betaBadgeLabel, betaBadgeTooltipContent, betaBadgeIconType));\n};\n\nexports.EuiKeyPadMenuItemButton = EuiKeyPadMenuItemButton;\nEuiKeyPadMenuItemButton.propTypes = _objectSpread({}, {\n  onClick: _propTypes.default.func\n}, commonPropTypes);\nEuiKeyPadMenuItem.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiKeyPadMenuItem\",\n  \"props\": {\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the card to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeIconType\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"IconPropType\"\n      },\n      \"required\": false,\n      \"description\": \"Supply an icon type if the badge should just be an icon\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    }\n  }\n};\nEuiKeyPadMenuItemButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiKeyPadMenuItemButton\",\n  \"props\": {\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the card to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeIconType\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"IconPropType\"\n      },\n      \"required\": false,\n      \"description\": \"Supply an icon type if the badge should just be an icon\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/key_pad_menu/key_pad_menu_item.js"],"names":["renderContent","children","label","betaBadgeLabel","betaBadgeTooltipContent","betaBadgeIconType","commonPropTypes","PropTypes","node","isRequired","string","IconPropType","EuiKeyPadMenuItem","href","className","rest","classes","propTypes","EuiKeyPadMenuItemButton","onClick","func"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,QADoB,EAEpBC,KAFoB,EAGpBC,cAHoB,EAIpBC,uBAJoB,EAKpBC,iBALoB;AAAA,SAOpB;AAAK,IAAA,SAAS,EAAC;AAAf,KACGF,cAAc,IACb;AAAM,IAAA,SAAS,EAAC;AAAhB,KACE,6BAAC,wBAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,KAAK,EAAEA,cAFT;AAGE,IAAA,QAAQ,EAAEE,iBAHZ;AAIE,IAAA,cAAc,EAAED;AAJlB,IADF,CAFJ,EAYE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CH,QAA1C,CAZF,EAcE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyCC,KAAzC,CAdF,CAPoB;AAAA,CAAtB;;AAyBA,IAAMI,eAAe,GAAG;AACtBL,EAAAA,QAAQ,EAAEM,mBAAUC,IAAV,CAAeC,UADH;AAEtBP,EAAAA,KAAK,EAAEK,mBAAUC,IAAV,CAAeC,UAFA;;AAItB;;;AAGAN,EAAAA,cAAc,EAAEI,mBAAUG,MAPJ;;AAStB;;;AAGAL,EAAAA,iBAAiB,EAAEM,kBAZG;;AActB;;;AAGAP,EAAAA,uBAAuB,EAAEG,mBAAUC;AAjBb,CAAxB;;AAoBO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,OAS3B;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,MAPJX,KAOI,QAPJA,KAOI;AAAA,MANJD,QAMI,QANJA,QAMI;AAAA,MALJa,SAKI,QALJA,SAKI;AAAA,MAJJX,cAII,QAJJA,cAII;AAAA,MAHJC,uBAGI,QAHJA,uBAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADDU,IACC;;AACJ,MAAMC,OAAO,GAAG,yBACd,mBADc,EAEd;AACE,uCAAmCb;AADrC,GAFc,EAKdW,SALc,CAAhB;AAQA,SACE;AAAG,IAAA,IAAI,EAAED,IAAT;AAAe,IAAA,SAAS,EAAEG,OAA1B;AAAmC,IAAA,IAAI,EAAC;AAAxC,KAAuDD,IAAvD,GACGf,aAAa,CACZC,QADY,EAEZC,KAFY,EAGZC,cAHY,EAIZC,uBAJY,EAKZC,iBALY,CADhB,CADF;AAWD,CA7BM;;;AA+BPO,iBAAiB,CAACK,SAAlB,qBACK;AACDJ,EAAAA,IAAI,EAAEN,mBAAUG;AADf,CADL,EAIKJ,eAJL;;AAOO,IAAMY,uBAAuB,GAAG,SAA1BA,uBAA0B,QASjC;AAAA,MARJC,OAQI,SARJA,OAQI;AAAA,MAPJjB,KAOI,SAPJA,KAOI;AAAA,MANJD,QAMI,SANJA,QAMI;AAAA,MALJa,SAKI,SALJA,SAKI;AAAA,MAJJX,cAII,SAJJA,cAII;AAAA,MAHJC,uBAGI,SAHJA,uBAGI;AAAA,MAFJC,iBAEI,SAFJA,iBAEI;AAAA,MADDU,IACC;;AACJ,MAAMC,OAAO,GAAG,yBACd,mBADc,EAEd;AACE,uCAAmCb;AADrC,GAFc,EAKdW,SALc,CAAhB;AAQA,SACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEK,OAA/B;AAAwC,IAAA,SAAS,EAAEH;AAAnD,KAAgED,IAAhE,GACGf,aAAa,CACZC,QADY,EAEZC,KAFY,EAGZC,cAHY,EAIZC,uBAJY,EAKZC,iBALY,CADhB,CADF;AAWD,CA7BM;;;AA+BPa,uBAAuB,CAACD,SAAxB,qBACK;AACDE,EAAAA,OAAO,EAAEZ,mBAAUa;AADlB,CADL,EAIKd,eAJL","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { EuiBetaBadge } from '../../components/badge/beta_badge';\n\nimport { IconPropType } from '../icon';\n\nconst renderContent = (\n  children,\n  label,\n  betaBadgeLabel,\n  betaBadgeTooltipContent,\n  betaBadgeIconType\n) => (\n  <div className=\"euiKeyPadMenuItem__inner\">\n    {betaBadgeLabel && (\n      <span className=\"euiKeyPadMenuItem__betaBadgeWrapper\">\n        <EuiBetaBadge\n          className=\"euiKeyPadMenuItem__betaBadge\"\n          label={betaBadgeLabel}\n          iconType={betaBadgeIconType}\n          tooltipContent={betaBadgeTooltipContent}\n        />\n      </span>\n    )}\n\n    <div className=\"euiKeyPadMenuItem__icon\">{children}</div>\n\n    <p className=\"euiKeyPadMenuItem__label\">{label}</p>\n  </div>\n);\n\nconst commonPropTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Add a badge to the card to label it as \"Beta\" or other non-GA state\n   */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n   * Supply an icon type if the badge should just be an icon\n   */\n  betaBadgeIconType: IconPropType,\n\n  /**\n   * Add a description to the beta badge (will appear in a tooltip)\n   */\n  betaBadgeTooltipContent: PropTypes.node,\n};\n\nexport const EuiKeyPadMenuItem = ({\n  href,\n  label,\n  children,\n  className,\n  betaBadgeLabel,\n  betaBadgeTooltipContent,\n  betaBadgeIconType,\n  ...rest\n}) => {\n  const classes = classNames(\n    'euiKeyPadMenuItem',\n    {\n      'euiKeyPadMenuItem--hasBetaBadge': betaBadgeLabel,\n    },\n    className\n  );\n\n  return (\n    <a href={href} className={classes} role=\"menuitem\" {...rest}>\n      {renderContent(\n        children,\n        label,\n        betaBadgeLabel,\n        betaBadgeTooltipContent,\n        betaBadgeIconType\n      )}\n    </a>\n  );\n};\n\nEuiKeyPadMenuItem.propTypes = {\n  ...{\n    href: PropTypes.string,\n  },\n  ...commonPropTypes,\n};\n\nexport const EuiKeyPadMenuItemButton = ({\n  onClick,\n  label,\n  children,\n  className,\n  betaBadgeLabel,\n  betaBadgeTooltipContent,\n  betaBadgeIconType,\n  ...rest\n}) => {\n  const classes = classNames(\n    'euiKeyPadMenuItem',\n    {\n      'euiKeyPadMenuItem--hasBetaBadge': betaBadgeLabel,\n    },\n    className\n  );\n\n  return (\n    <button type=\"button\" onClick={onClick} className={classes} {...rest}>\n      {renderContent(\n        children,\n        label,\n        betaBadgeLabel,\n        betaBadgeTooltipContent,\n        betaBadgeIconType\n      )}\n    </button>\n  );\n};\n\nEuiKeyPadMenuItemButton.propTypes = {\n  ...{\n    onClick: PropTypes.func,\n  },\n  ...commonPropTypes,\n};\n"]}]}