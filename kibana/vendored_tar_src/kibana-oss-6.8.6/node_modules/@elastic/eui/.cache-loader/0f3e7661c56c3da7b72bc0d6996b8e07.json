{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/data_store.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/data_store.js","mtime":1565204169552},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDataStore = void 0;\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _sort = require(\"../../../../src/services/sort\");\n\nvar _random = require(\"../../../../src/services/random\");\n\nvar _utils = require(\"../../../../src/services/utils\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar random = new _random.Random();\n\nvar createCountries = function createCountries() {\n  return [{\n    code: 'NL',\n    name: 'Netherlands',\n    flag: 'ðŸ‡³ðŸ‡±'\n  }, {\n    code: 'CZ',\n    name: 'Czech Republic',\n    flag: 'ðŸ‡¨ðŸ‡¿'\n  }, {\n    code: 'ZA',\n    name: 'South Africa',\n    flag: 'ðŸ‡¿ðŸ‡¦'\n  }, {\n    code: 'US',\n    name: 'United States',\n    flag: 'ðŸ‡ºðŸ‡²'\n  }, {\n    code: 'AU',\n    name: 'Australia',\n    flag: 'ðŸ‡¦ðŸ‡º'\n  }, {\n    code: 'IL',\n    name: 'Israel',\n    flag: 'ðŸ‡®ðŸ‡±'\n  }, {\n    code: 'NO',\n    name: 'Norway',\n    flag: 'ðŸ‡³ðŸ‡´'\n  }, {\n    code: 'IT',\n    name: 'Italy',\n    flag: 'ðŸ‡®ðŸ‡¹'\n  }, {\n    code: 'CA',\n    name: 'Canada',\n    flag: 'ðŸ‡¨ðŸ‡¦'\n  }, {\n    code: 'CG',\n    name: 'Congo',\n    flag: 'ðŸ‡¨ðŸ‡¬'\n  }, {\n    code: 'CL',\n    name: 'Chile',\n    flag: 'ðŸ‡¨ðŸ‡±'\n  }, {\n    code: 'FJ',\n    name: 'Fiji',\n    flag: 'ðŸ‡«ðŸ‡¯'\n  }, {\n    code: 'GB',\n    name: 'United Kingdom',\n    flag: 'ðŸ‡¬ðŸ‡§'\n  }, {\n    code: 'GR',\n    name: 'Greece',\n    flag: 'ðŸ‡¬ðŸ‡·'\n  }, {\n    code: 'HT',\n    name: 'Haiti',\n    flag: 'ðŸ‡­ðŸ‡¹'\n  }, {\n    code: 'LB',\n    name: 'Lebanon',\n    flag: 'ðŸ‡±ðŸ‡§'\n  }, {\n    code: 'MM',\n    name: 'Myanmar',\n    flag: 'ðŸ‡²ðŸ‡²'\n  }, {\n    code: 'MX',\n    name: 'Mexico',\n    flag: 'ðŸ‡²ðŸ‡½'\n  }, {\n    code: 'NG',\n    name: 'Nigeria',\n    flag: 'ðŸ‡³ðŸ‡¬'\n  }, {\n    code: 'SG',\n    name: 'Singapore',\n    flag: 'ðŸ‡¸ðŸ‡¬'\n  }, {\n    code: 'SO',\n    name: 'Somalia',\n    flag: 'ðŸ‡¸ðŸ‡´'\n  }, {\n    code: 'TN',\n    name: 'Tunisia',\n    flag: 'ðŸ‡¹ðŸ‡³'\n  }, {\n    code: 'VE',\n    name: 'Venezuela',\n    flag: 'ðŸ‡»ðŸ‡ª'\n  }, {\n    code: 'ZM',\n    name: 'Zambia',\n    flag: 'ðŸ‡¿ðŸ‡²'\n  }];\n};\n\nvar firstNames = ['Very long first name that will wrap or be truncated', 'Another very long first name which will wrap or be truncated', 'Clinton', 'Igor', undefined, 'Drew', null, 'Rashid', undefined, 'John'];\nvar lastNames = ['Very long last name that will wrap or be truncated', 'Another very long last name which will wrap or be truncated', 'Gormley', 'Motov', 'Minarik', 'Raines', 'KrÃ¡l', 'Khan', 'Sissel', 'Dorlus'];\nvar github = ['martijnvg', 'elissaw', 'clintongormley', 'imotov', 'karmi', 'drewr', 'HonzaKral', 'rashidkpc', 'jordansissel', 'silne30'];\nvar dob = new Date(1980, 1, 1);\n\nvar createUsers = function createUsers(countries) {\n  return (0, _utils.times)(20, function (index) {\n    return {\n      id: index,\n      firstName: index < 10 ? firstNames[index] : firstNames[index - 10],\n      lastName: index < 10 ? lastNames[index] : lastNames[index - 10],\n      github: index < 10 ? github[index] : github[index - 10],\n      dateOfBirth: dob,\n      nationality: random.oneToOne(countries.map(function (country) {\n        return country.code;\n      }), index),\n      online: index % 2 === 0\n    };\n  });\n};\n\nvar createDataStore = function createDataStore() {\n  var countries = createCountries();\n  var users = createUsers(countries);\n  return {\n    countries: countries,\n    users: users,\n    findUsers: function findUsers(pageIndex, pageSize, sortField, sortDirection) {\n      var items;\n\n      if (sortField) {\n        items = users.slice(0).sort(_sort.Comparators.property(sortField, _sort.Comparators.default(sortDirection)));\n      } else {\n        items = users;\n      }\n\n      var pageOfItems;\n\n      if (!pageIndex && !pageSize) {\n        pageOfItems = items;\n      } else {\n        var startIndex = pageIndex * pageSize;\n        pageOfItems = items.slice(startIndex, Math.min(startIndex + pageSize, items.length));\n      }\n\n      return {\n        pageOfItems: pageOfItems,\n        totalItemCount: items.length\n      };\n    },\n    deleteUsers: function deleteUsers() {\n      for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\n        ids[_key] = arguments[_key];\n      }\n\n      ids.forEach(function (id) {\n        var index = users.findIndex(function (user) {\n          return user.id === id;\n        });\n\n        if (index >= 0) {\n          users.splice(index, 1);\n        }\n      });\n    },\n    cloneUser: function cloneUser(id) {\n      var index = users.findIndex(function (user) {\n        return user.id === id;\n      });\n\n      if (index >= 0) {\n        var user = users[index];\n        users.splice(index, 0, _objectSpread({}, user, {\n          id: users.length\n        }));\n      }\n    },\n    getCountry: function getCountry(code) {\n      return countries.find(function (country) {\n        return country.code === code;\n      });\n    }\n  };\n};\n\nexports.createDataStore = createDataStore;",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/data_store.js"],"names":["random","Random","createCountries","code","name","flag","firstNames","undefined","lastNames","github","dob","Date","createUsers","countries","index","id","firstName","lastName","dateOfBirth","nationality","oneToOne","map","country","online","createDataStore","users","findUsers","pageIndex","pageSize","sortField","sortDirection","items","slice","sort","Comparators","property","default","pageOfItems","startIndex","Math","min","length","totalItemCount","deleteUsers","ids","forEach","findIndex","user","splice","cloneUser","getCountry","find"],"mappings":"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","sourcesContent":["import { Comparators } from '../../../../src/services/sort';\nimport { Random } from '../../../../src/services/random';\nimport { times } from '../../../../src/services/utils';\n\nconst random = new Random();\n\nconst createCountries = () => [\n  { code: 'NL', name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±' },\n  { code: 'CZ', name: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿' },\n  { code: 'ZA', name: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦' },\n  { code: 'US', name: 'United States', flag: 'ðŸ‡ºðŸ‡²' },\n  { code: 'AU', name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },\n  { code: 'IL', name: 'Israel', flag: 'ðŸ‡®ðŸ‡±' },\n  { code: 'NO', name: 'Norway', flag: 'ðŸ‡³ðŸ‡´' },\n  { code: 'IT', name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },\n  { code: 'CA', name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },\n  { code: 'CG', name: 'Congo', flag: 'ðŸ‡¨ðŸ‡¬' },\n  { code: 'CL', name: 'Chile', flag: 'ðŸ‡¨ðŸ‡±' },\n  { code: 'FJ', name: 'Fiji', flag: 'ðŸ‡«ðŸ‡¯' },\n  { code: 'GB', name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },\n  { code: 'GR', name: 'Greece', flag: 'ðŸ‡¬ðŸ‡·' },\n  { code: 'HT', name: 'Haiti', flag: 'ðŸ‡­ðŸ‡¹' },\n  { code: 'LB', name: 'Lebanon', flag: 'ðŸ‡±ðŸ‡§' },\n  { code: 'MM', name: 'Myanmar', flag: 'ðŸ‡²ðŸ‡²' },\n  { code: 'MX', name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },\n  { code: 'NG', name: 'Nigeria', flag: 'ðŸ‡³ðŸ‡¬' },\n  { code: 'SG', name: 'Singapore', flag: 'ðŸ‡¸ðŸ‡¬' },\n  { code: 'SO', name: 'Somalia', flag: 'ðŸ‡¸ðŸ‡´' },\n  { code: 'TN', name: 'Tunisia', flag: 'ðŸ‡¹ðŸ‡³' },\n  { code: 'VE', name: 'Venezuela', flag: 'ðŸ‡»ðŸ‡ª' },\n  { code: 'ZM', name: 'Zambia', flag: 'ðŸ‡¿ðŸ‡²' },\n];\n\nconst firstNames = [\n  'Very long first name that will wrap or be truncated',\n  'Another very long first name which will wrap or be truncated',\n  'Clinton',\n  'Igor',\n  undefined,\n  'Drew',\n  null,\n  'Rashid',\n  undefined,\n  'John',\n];\n\nconst lastNames = [\n  'Very long last name that will wrap or be truncated',\n  'Another very long last name which will wrap or be truncated',\n  'Gormley',\n  'Motov',\n  'Minarik',\n  'Raines',\n  'KrÃ¡l',\n  'Khan',\n  'Sissel',\n  'Dorlus',\n];\n\nconst github = [\n  'martijnvg',\n  'elissaw',\n  'clintongormley',\n  'imotov',\n  'karmi',\n  'drewr',\n  'HonzaKral',\n  'rashidkpc',\n  'jordansissel',\n  'silne30',\n];\n\nconst dob = new Date(1980, 1, 1);\n\nconst createUsers = countries => {\n  return times(20, index => {\n    return {\n      id: index,\n      firstName: index < 10 ? firstNames[index] : firstNames[index - 10],\n      lastName: index < 10 ? lastNames[index] : lastNames[index - 10],\n      github: index < 10 ? github[index] : github[index - 10],\n      dateOfBirth: dob,\n      nationality: random.oneToOne(\n        countries.map(country => country.code),\n        index\n      ),\n      online: index % 2 === 0,\n    };\n  });\n};\n\nexport const createDataStore = () => {\n  const countries = createCountries();\n  const users = createUsers(countries);\n\n  return {\n    countries,\n    users,\n\n    findUsers: (pageIndex, pageSize, sortField, sortDirection) => {\n      let items;\n\n      if (sortField) {\n        items = users\n          .slice(0)\n          .sort(\n            Comparators.property(sortField, Comparators.default(sortDirection))\n          );\n      } else {\n        items = users;\n      }\n\n      let pageOfItems;\n\n      if (!pageIndex && !pageSize) {\n        pageOfItems = items;\n      } else {\n        const startIndex = pageIndex * pageSize;\n        pageOfItems = items.slice(\n          startIndex,\n          Math.min(startIndex + pageSize, items.length)\n        );\n      }\n\n      return {\n        pageOfItems,\n        totalItemCount: items.length,\n      };\n    },\n\n    deleteUsers: (...ids) => {\n      ids.forEach(id => {\n        const index = users.findIndex(user => user.id === id);\n        if (index >= 0) {\n          users.splice(index, 1);\n        }\n      });\n    },\n\n    cloneUser: id => {\n      const index = users.findIndex(user => user.id === id);\n      if (index >= 0) {\n        const user = users[index];\n        users.splice(index, 0, { ...user, id: users.length });\n      }\n    },\n\n    getCountry: code => countries.find(country => country.code === code),\n  };\n};\n"]}]}