{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src/components/accordion/accordion.tsx","dependencies":[{"path":"/Users/chanderprall/projects/eui/src/components/accordion/accordion.tsx","mtime":1565204169588},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EuiAccordion = exports.PADDING_SIZES = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _common = require(\"../common\");\n\nvar _icon = require(\"../icon\");\n\nvar _mutation_observer = require(\"../observer/mutation_observer\");\n\nvar _services = require(\"../../services\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MUTATION_ATTRIBUTE_FILTER = ['style'];\nvar paddingSizeToClassNameMap = {\n  none: null,\n  xs: 'euiAccordion__padding--xs',\n  s: 'euiAccordion__padding--s',\n  m: 'euiAccordion__padding--m',\n  l: 'euiAccordion__padding--l',\n  xl: 'euiAccordion__padding--xl'\n};\nvar PADDING_SIZES = (0, _common.keysOf)(paddingSizeToClassNameMap);\nexports.PADDING_SIZES = PADDING_SIZES;\n\nvar EuiAccordion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EuiAccordion, _Component);\n\n  function EuiAccordion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EuiAccordion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EuiAccordion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"childContent\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"childWrapper\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isOpen: _this.props.initialIsOpen\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setChildContentHeight\", function () {\n      requestAnimationFrame(function () {\n        var height = _this.childContent && _this.state.isOpen ? _this.childContent.clientHeight : 0;\n        _this.childWrapper && _this.childWrapper.setAttribute('style', \"height: \".concat(height, \"px\"));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMutation\", function (records) {\n      var isChildStyleMutation = records.find(function (record) {\n        return record.attributeName ? MUTATION_ATTRIBUTE_FILTER.indexOf(record.attributeName) > -1 : false;\n      });\n\n      if (isChildStyleMutation) {\n        (0, _services.getDurationAndPerformOnFrame)(records, _this.setChildContentHeight);\n      } else {\n        _this.setChildContentHeight();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onToggle\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      }, function () {\n        _this.props.onToggle && _this.props.onToggle(_this.state.isOpen);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setChildContentRef\", function (node) {\n      _this.childContent = node;\n    });\n\n    return _this;\n  }\n\n  _createClass(EuiAccordion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setChildContentHeight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setChildContentHeight();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          buttonContent = _this$props.buttonContent,\n          className = _this$props.className,\n          id = _this$props.id,\n          buttonClassName = _this$props.buttonClassName,\n          buttonContentClassName = _this$props.buttonContentClassName,\n          extraAction = _this$props.extraAction,\n          paddingSize = _this$props.paddingSize,\n          initialIsOpen = _this$props.initialIsOpen,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"buttonContent\", \"className\", \"id\", \"buttonClassName\", \"buttonContentClassName\", \"extraAction\", \"paddingSize\", \"initialIsOpen\"]);\n\n      var classes = (0, _classnames.default)('euiAccordion', {\n        'euiAccordion-isOpen': this.state.isOpen\n      }, className);\n      var paddingClass = (0, _classnames.default)(paddingSizeToClassNameMap[paddingSize]);\n      var buttonClasses = (0, _classnames.default)('euiAccordion__button', buttonClassName);\n\n      var icon = _react.default.createElement(_icon.EuiIcon, {\n        className: \"euiAccordion__icon\",\n        type: this.state.isOpen ? 'arrowDown' : 'arrowRight',\n        size: \"m\"\n      });\n\n      var optionalAction = null;\n\n      if (extraAction) {\n        optionalAction = _react.default.createElement(\"div\", {\n          className: \"euiAccordion__optionalAction\"\n        }, extraAction);\n      }\n\n      return _react.default.createElement(\"div\", _extends({\n        className: classes\n      }, rest), _react.default.createElement(\"div\", {\n        className: \"euiAccordion__triggerWrapper\"\n      }, _react.default.createElement(\"button\", {\n        \"aria-controls\": id,\n        \"aria-expanded\": !!this.state.isOpen,\n        onClick: this.onToggle,\n        className: buttonClasses,\n        type: \"button\"\n      }, _react.default.createElement(\"span\", {\n        className: \"euiAccordion__iconWrapper\"\n      }, icon), _react.default.createElement(\"span\", {\n        className: buttonContentClassName\n      }, buttonContent)), optionalAction), _react.default.createElement(\"div\", {\n        className: \"euiAccordion__childWrapper\",\n        ref: function ref(node) {\n          _this2.childWrapper = node;\n        },\n        id: id\n      }, _react.default.createElement(_mutation_observer.EuiMutationObserver, {\n        observerOptions: {\n          childList: true,\n          subtree: true,\n          attributeFilter: MUTATION_ATTRIBUTE_FILTER\n        },\n        onMutation: this.onMutation\n      }, function (mutationRef) {\n        return _react.default.createElement(\"div\", {\n          ref: function ref(_ref) {\n            _this2.setChildContentRef(_ref);\n\n            mutationRef(_ref);\n          }\n        }, _react.default.createElement(\"div\", {\n          className: paddingClass\n        }, children));\n      })));\n    }\n  }]);\n\n  return EuiAccordion;\n}(_react.Component);\n\nexports.EuiAccordion = EuiAccordion;\n\n_defineProperty(EuiAccordion, \"defaultProps\", {\n  initialIsOpen: false,\n  paddingSize: 'none'\n});\n\nEuiAccordion.propTypes = {\n  className: _propTypes.default.string,\n  \"aria-label\": _propTypes.default.string,\n  \"data-test-subj\": _propTypes.default.string,\n  id: _propTypes.default.string.isRequired,\n\n  /**\n       * Class that will apply to the trigger for the accordion.\n       */\n  buttonClassName: _propTypes.default.string,\n\n  /**\n       * Class that will apply to the trigger content for the accordion.\n       */\n  buttonContentClassName: _propTypes.default.string,\n\n  /**\n       * The content of the clickable trigger\n       */\n  buttonContent: _propTypes.default.node,\n\n  /**\n       * Will appear right aligned against the button. Useful for separate actions like deletions.\n       */\n  extraAction: _propTypes.default.node,\n\n  /**\n       * The accordion will start in the open state.\n       */\n  initialIsOpen: _propTypes.default.bool.isRequired,\n\n  /**\n       * Optional callback method called on open and close with a single `isOpen` parameter\n       */\n  onToggle: _propTypes.default.func,\n\n  /**\n       * The padding around the exposed accordion content.\n       */\n  paddingSize: _propTypes.default.oneOf([\"none\", \"xs\", \"s\", \"m\", \"l\", \"xl\"]).isRequired\n};\nEuiAccordion.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"setChildContentHeight\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onMutation\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"records\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onToggle\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"setChildContentRef\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"EuiAccordion\",\n  \"props\": {\n    \"initialIsOpen\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"The accordion will start in the open state.\"\n    },\n    \"paddingSize\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"xs\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"xl\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The padding around the exposed accordion content.\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"buttonClassName\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Class that will apply to the trigger for the accordion.\"\n    },\n    \"buttonContentClassName\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Class that will apply to the trigger content for the accordion.\"\n    },\n    \"buttonContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"The content of the clickable trigger\"\n    },\n    \"extraAction\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Will appear right aligned against the button. Useful for separate actions like deletions.\"\n    },\n    \"onToggle\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Optional callback method called on open and close with a single `isOpen` parameter\"\n    }\n  }\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src/components/accordion/accordion.tsx"],"names":["MUTATION_ATTRIBUTE_FILTER","paddingSizeToClassNameMap","none","xs","s","m","l","xl","PADDING_SIZES","EuiAccordion","isOpen","props","initialIsOpen","requestAnimationFrame","height","childContent","state","clientHeight","childWrapper","setAttribute","records","isChildStyleMutation","find","record","attributeName","indexOf","setChildContentHeight","setState","prevState","onToggle","node","children","buttonContent","className","id","buttonClassName","buttonContentClassName","extraAction","paddingSize","rest","classes","paddingClass","buttonClasses","icon","optionalAction","childList","subtree","attributeFilter","onMutation","mutationRef","ref","setChildContentRef","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiIcon } from '../icon';\nimport { EuiMutationObserver } from '../observer/mutation_observer';\nimport { getDurationAndPerformOnFrame } from '../../services';\nvar MUTATION_ATTRIBUTE_FILTER = ['style'];\nvar paddingSizeToClassNameMap = {\n  none: null,\n  xs: 'euiAccordion__padding--xs',\n  s: 'euiAccordion__padding--s',\n  m: 'euiAccordion__padding--m',\n  l: 'euiAccordion__padding--l',\n  xl: 'euiAccordion__padding--xl'\n};\nexport var PADDING_SIZES = keysOf(paddingSizeToClassNameMap);\nexport class EuiAccordion extends Component {\n  static defaultProps = {\n    initialIsOpen: false,\n    paddingSize: 'none'\n  };\n  childContent = null;\n  childWrapper = null;\n  state = {\n    isOpen: this.props.initialIsOpen\n  };\n  setChildContentHeight = () => {\n    requestAnimationFrame(() => {\n      const height = this.childContent && this.state.isOpen ? this.childContent.clientHeight : 0;\n      this.childWrapper && this.childWrapper.setAttribute('style', `height: ${height}px`);\n    });\n  };\n  onMutation = records => {\n    const isChildStyleMutation = records.find(record => {\n      return record.attributeName ? MUTATION_ATTRIBUTE_FILTER.indexOf(record.attributeName) > -1 : false;\n    });\n\n    if (isChildStyleMutation) {\n      getDurationAndPerformOnFrame(records, this.setChildContentHeight);\n    } else {\n      this.setChildContentHeight();\n    }\n  };\n\n  componentDidMount() {\n    this.setChildContentHeight();\n  }\n\n  componentDidUpdate() {\n    this.setChildContentHeight();\n  }\n\n  onToggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }), () => {\n      this.props.onToggle && this.props.onToggle(this.state.isOpen);\n    });\n  };\n  setChildContentRef = node => {\n    this.childContent = node;\n  };\n\n  render() {\n    const {\n      children,\n      buttonContent,\n      className,\n      id,\n      buttonClassName,\n      buttonContentClassName,\n      extraAction,\n      paddingSize,\n      initialIsOpen,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiAccordion', {\n      'euiAccordion-isOpen': this.state.isOpen\n    }, className);\n    const paddingClass = classNames(paddingSizeToClassNameMap[paddingSize]);\n    const buttonClasses = classNames('euiAccordion__button', buttonClassName);\n    const icon = <EuiIcon className=\"euiAccordion__icon\" type={this.state.isOpen ? 'arrowDown' : 'arrowRight'} size=\"m\" />;\n    let optionalAction = null;\n\n    if (extraAction) {\n      optionalAction = <div className=\"euiAccordion__optionalAction\">{extraAction}</div>;\n    }\n\n    return <div className={classes} {...rest}>\n        <div className=\"euiAccordion__triggerWrapper\">\n          <button aria-controls={id} aria-expanded={!!this.state.isOpen} onClick={this.onToggle} className={buttonClasses} type=\"button\">\n            <span className=\"euiAccordion__iconWrapper\">{icon}</span>\n            <span className={buttonContentClassName}>{buttonContent}</span>\n          </button>\n\n          {optionalAction}\n        </div>\n\n        <div className=\"euiAccordion__childWrapper\" ref={node => {\n        this.childWrapper = node;\n      }} id={id}>\n          <EuiMutationObserver observerOptions={{\n          childList: true,\n          subtree: true,\n          attributeFilter: MUTATION_ATTRIBUTE_FILTER\n        }} onMutation={this.onMutation}>\n            {mutationRef => <div ref={ref => {\n            this.setChildContentRef(ref);\n            mutationRef(ref);\n          }}>\n                <div className={paddingClass}>{children}</div>\n              </div>}\n          </EuiMutationObserver>\n        </div>\n      </div>;\n  }\n\n}\nEuiAccordion.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  id: PropTypes.string.isRequired,\n\n  /**\n       * Class that will apply to the trigger for the accordion.\n       */\n  buttonClassName: PropTypes.string,\n\n  /**\n       * Class that will apply to the trigger content for the accordion.\n       */\n  buttonContentClassName: PropTypes.string,\n\n  /**\n       * The content of the clickable trigger\n       */\n  buttonContent: PropTypes.node,\n\n  /**\n       * Will appear right aligned against the button. Useful for separate actions like deletions.\n       */\n  extraAction: PropTypes.node,\n\n  /**\n       * The accordion will start in the open state.\n       */\n  initialIsOpen: PropTypes.bool.isRequired,\n\n  /**\n       * Optional callback method called on open and close with a single `isOpen` parameter\n       */\n  onToggle: PropTypes.func,\n\n  /**\n       * The padding around the exposed accordion content.\n       */\n  paddingSize: PropTypes.oneOf([\"none\", \"xs\", \"s\", \"m\", \"l\", \"xl\"]).isRequired\n};"]}]}