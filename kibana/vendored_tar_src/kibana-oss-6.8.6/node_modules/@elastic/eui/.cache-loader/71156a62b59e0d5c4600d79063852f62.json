{"remainingRequest":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js!/Users/chanderprall/projects/eui/src-docs/src/views/tables/in_memory/in_memory_custom_sorting.js","dependencies":[{"path":"/Users/chanderprall/projects/eui/src-docs/src/views/tables/in_memory/in_memory_custom_sorting.js","mtime":1565204169555},{"path":"/Users/chanderprall/projects/eui/.babelrc.js","mtime":1565204168946},{"path":"/Users/chanderprall/projects/eui/node_modules/cache-loader/dist/cjs.js","mtime":1555436064329},{"path":"/Users/chanderprall/projects/eui/node_modules/babel-loader/lib/index.js","mtime":1543517280769}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Table = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _components = require(\"../../../../../src/components\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar data = [{\n  animal: 'snail',\n  weight: 25\n}, {\n  animal: 'peregrine falcon',\n  weight: 900\n}, {\n  animal: 'small dog',\n  weight: 4500\n}, {\n  animal: 'brown bear',\n  weight: 180000\n}, {\n  animal: 'elephant',\n  weight: 5440000\n}, {\n  animal: 'giraffe',\n  weight: 1180000\n}];\n\nvar Table = function Table() {\n  var columns = [{\n    field: 'animal',\n    name: 'Animal',\n    sortable: true\n  }, {\n    name: 'Weight',\n    render: function render(_ref) {\n      var weight = _ref.weight;\n      return \"\".concat(weight / 1000, \"kg\");\n    },\n    sortable: function sortable(_ref2) {\n      var weight = _ref2.weight;\n      return weight;\n    }\n  }, {\n    field: 'weight',\n    name: 'Weight (grams)',\n    sortable: true\n  }];\n  var sorting = {\n    sort: {\n      field: 'Weight',\n      direction: 'asc'\n    }\n  };\n  return _react.default.createElement(_components.EuiInMemoryTable, {\n    items: data,\n    columns: columns,\n    pagination: false,\n    sorting: sorting\n  });\n};\n\nexports.Table = Table;\nTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Table\"\n};",{"version":3,"sources":["/Users/chanderprall/projects/eui/src-docs/src/views/tables/in_memory/in_memory_custom_sorting.js"],"names":["data","animal","weight","Table","columns","field","name","sortable","render","sorting","sort","direction"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,CACX;AAAEC,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,MAAM,EAAE;AAA3B,CADW,EAEX;AAAED,EAAAA,MAAM,EAAE,kBAAV;AAA8BC,EAAAA,MAAM,EAAE;AAAtC,CAFW,EAGX;AAAED,EAAAA,MAAM,EAAE,WAAV;AAAuBC,EAAAA,MAAM,EAAE;AAA/B,CAHW,EAIX;AAAED,EAAAA,MAAM,EAAE,YAAV;AAAwBC,EAAAA,MAAM,EAAE;AAAhC,CAJW,EAKX;AAAED,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,MAAM,EAAE;AAA9B,CALW,EAMX;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,MAAM,EAAE;AAA7B,CANW,CAAb;;AASO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzB,MAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADc,EAMd;AACED,IAAAA,IAAI,EAAE,QADR;AAEEE,IAAAA,MAAM,EAAE;AAAA,UAAGN,MAAH,QAAGA,MAAH;AAAA,uBAAmBA,MAAM,GAAG,IAA5B;AAAA,KAFV;AAGEK,IAAAA,QAAQ,EAAE;AAAA,UAAGL,MAAH,SAAGA,MAAH;AAAA,aAAgBA,MAAhB;AAAA;AAHZ,GANc,EAWd;AACEG,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAXc,CAAhB;AAkBA,MAAME,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE;AACJL,MAAAA,KAAK,EAAE,QADH;AAEJM,MAAAA,SAAS,EAAE;AAFP;AADQ,GAAhB;AAOA,SACE,6BAAC,4BAAD;AACE,IAAA,KAAK,EAAEX,IADT;AAEE,IAAA,OAAO,EAAEI,OAFX;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,OAAO,EAAEK;AAJX,IADF;AAQD,CAlCM","sourcesContent":["import React from 'react';\nimport { EuiInMemoryTable } from '../../../../../src/components';\n\nconst data = [\n  { animal: 'snail', weight: 25 },\n  { animal: 'peregrine falcon', weight: 900 },\n  { animal: 'small dog', weight: 4500 },\n  { animal: 'brown bear', weight: 180000 },\n  { animal: 'elephant', weight: 5440000 },\n  { animal: 'giraffe', weight: 1180000 },\n];\n\nexport const Table = () => {\n  const columns = [\n    {\n      field: 'animal',\n      name: 'Animal',\n      sortable: true,\n    },\n    {\n      name: 'Weight',\n      render: ({ weight }) => `${weight / 1000}kg`,\n      sortable: ({ weight }) => weight,\n    },\n    {\n      field: 'weight',\n      name: 'Weight (grams)',\n      sortable: true,\n    },\n  ];\n\n  const sorting = {\n    sort: {\n      field: 'Weight',\n      direction: 'asc',\n    },\n  };\n\n  return (\n    <EuiInMemoryTable\n      items={data}\n      columns={columns}\n      pagination={false}\n      sorting={sorting}\n    />\n  );\n};\n"]}]}