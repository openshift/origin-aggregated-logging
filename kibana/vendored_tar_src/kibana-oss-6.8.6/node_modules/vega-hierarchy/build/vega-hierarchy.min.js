!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("vega-dataflow"),require("vega-util"),require("d3-collection"),require("d3-hierarchy")):"function"==typeof define&&define.amd?define(["exports","vega-dataflow","vega-util","d3-collection","d3-hierarchy"],a):a((e.vega=e.vega||{},e.vega.transforms=e.vega.transforms||{}),e.vega,e.vega,e.d3,e.d3)}(this,function(e,a,t,r,n){"use strict";function i(e){a.Transform.call(this,null,e)}function o(e){return e.values}function s(e){a.Transform.call(this,null,e)}function d(e,a,t){for(var r,n=0,i=a.length;n<i;++n)(r=a[n])in t&&e[r](t[r])}function u(e,a,t){for(var r=e.data,n=0,i=a.length-1;n<i;++n)r[t[n]]=e[a[n]];r[t[i]]=e.children?e.children.length:0}function l(e){s.call(this,e)}function f(e){s.call(this,e)}function m(e){a.Transform.call(this,null,e)}function p(e){s.call(this,e)}function c(e){a.Transform.call(this,{},e)}function y(e){var t;return e.parent&&(t=e.parent.data)&&null!=a.tupleid(t)&&t}function h(e){s.call(this,e)}i.Definition={type:"Nest",metadata:{treesource:!0,changes:!0},params:[{name:"keys",type:"field",array:!0},{name:"key",type:"field"},{name:"generate",type:"boolean"}]},t.inherits(i,a.Transform).transform=function(e,i){i.source||t.error("Nest transform requires an upstream data source.");var s,d,u,l=e.key||a.tupleid,f=e.generate,m=e.modified(),p=i.clone();return(!this.value||m||i.changed())&&(f&&this.value&&this.value.each(function(e){e.children&&p.rem.push(e)}),s=t.array(e.keys).reduce(function(e,a){return e.key(a),e},r.nest()).entries(p.source),this.value=d=n.hierarchy({values:s},o),f&&d.each(function(e){e.children&&(e=a.ingest(e.data),p.add.push(e),p.source.push(e))}),u=d.lookup={},d.each(function(e){null!=a.tupleid(e.data)&&(u[l(e.data)]=e)})),p.source.root=this.value,p},t.inherits(s,a.Transform).transform=function(e,a){a.source&&a.source.root||t.error(this.constructor.name+" transform requires a backing tree data source.");var r=this.layout(e.method),n=this.fields,i=a.source.root,o=e.as||n;e.field&&i.sum(e.field),e.sort&&i.sort(e.sort),d(r,this.params,e);try{this.value=r(i)}catch(e){t.error(e)}return i.each(function(e){u(e,n,o)}),a.reflow(e.modified()).modifies(o).modifies("leaf")};var g=["x","y","r","depth","children"];l.Definition={type:"Pack",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"radius",type:"field",default:null},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:3,default:g}]};var v=t.inherits(l,s);v.layout=n.pack,v.params=["size","padding"],v.fields=g;var b=["x0","y0","x1","y1","depth","children"];f.Definition={type:"Partition",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:4,default:b}]};var k=t.inherits(f,s);k.layout=n.partition,k.params=["size","round","padding"],k.fields=b,m.Definition={type:"Stratify",metadata:{treesource:!0},params:[{name:"key",type:"field",required:!0},{name:"parentKey",type:"field",required:!0}]},t.inherits(m,a.Transform).transform=function(e,a){a.source||t.error("Stratify transform requires an upstream data source.");var r,i,o=e.modified(),s=a.fork(a.ALL).materialize(a.SOURCE),d=!this.value||o||a.changed(a.ADD_REM)||a.modified(e.key.fields)||a.modified(e.parentKey.fields);return s.source=s.source.slice(),d&&(r=n.stratify().id(e.key).parentId(e.parentKey)(s.source),i=r.lookup={},r.each(function(a){i[e.key(a.data)]=a}),this.value=r),s.source.root=this.value,s};var q={tidy:n.tree,cluster:n.cluster},T=["x","y","depth","children"];p.Definition={type:"Tree",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"tidy",values:["tidy","cluster"]},{name:"size",type:"number",array:!0,length:2},{name:"nodeSize",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:4,default:T}]};var D=t.inherits(p,s);D.layout=function(e){var a=e||"tidy";if(q.hasOwnProperty(a))return q[a]();t.error("Unrecognized Tree layout method: "+a)},D.params=["size","nodeSize","separation"],D.fields=T,c.Definition={type:"TreeLinks",metadata:{tree:!0,generates:!0,changes:!0},params:[{name:"key",type:"field"}]},t.inherits(c,a.Transform).transform=function(e,r){function n(e){var a=o[e];a&&(d[e]=1,u.mod.push(a))}r.source&&r.source.root||t.error("TreeLinks transform requires a backing tree data source.");var i=r.source.root.lookup,o=this.value,s=e.key||a.tupleid,d={},u=r.fork();return r.visit(r.REM,function(e){var a=s(e),t=o[a];t&&(delete o[a],u.rem.push(t))}),r.visit(r.ADD,function(e){var t,r=s(e);(t=y(i[r]))&&(u.add.push(o[r]=a.ingest({source:t,target:e})),d[r]=1)}),r.visit(r.MOD,function(e){var a=s(e),t=i[a].children;if(n(a),t)for(var r=0,o=t.length;r<o;++r)d[a=s(t[r].data)]||n(a)}),u};var z={binary:n.treemapBinary,dice:n.treemapDice,slice:n.treemapSlice,slicedice:n.treemapSliceDice,squarify:n.treemapSquarify,resquarify:n.treemapResquarify},x=["x0","y0","x1","y1","depth","children"];h.Definition={type:"Treemap",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"squarify",values:["squarify","resquarify","binary","dice","slice","slicedice"]},{name:"padding",type:"number",default:0},{name:"paddingInner",type:"number",default:0},{name:"paddingOuter",type:"number",default:0},{name:"paddingTop",type:"number",default:0},{name:"paddingRight",type:"number",default:0},{name:"paddingBottom",type:"number",default:0},{name:"paddingLeft",type:"number",default:0},{name:"ratio",type:"number",default:1.618033988749895},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:4,default:x}]};var S=t.inherits(h,s);S.layout=function(){var e=n.treemap();return e.ratio=function(a){var t=e.tile();t.ratio&&e.tile(t.ratio(a))},e.method=function(a){z.hasOwnProperty(a)?e.tile(z[a]):t.error("Unrecognized Treemap layout method: "+a)},e},S.params=["method","ratio","size","round","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft"],S.fields=x,e.nest=i,e.pack=l,e.partition=f,e.stratify=m,e.tree=p,e.treelinks=c,e.treemap=h,Object.defineProperty(e,"__esModule",{value:!0})});