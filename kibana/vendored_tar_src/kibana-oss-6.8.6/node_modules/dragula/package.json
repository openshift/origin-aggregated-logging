{
  "name": "dragula",
  "version": "3.7.0",
  "description": "Drag and drop so simple it hurts",
  "main": "dragula.js",
  "scripts": {
    "build": "npm run scripts && npm run styles",
    "deploy": "npm run build && npm run deployment && npm run sync",
    "deploy-plugins": "npm run deploy-react ; npm run deploy-angular ; cd ../dragula",
    "deploy-react": "cd ../react-dragula ; git pull ; npm i -S dragula@* ; git commit package.json -m 'bumped dragula version'; npm run deploy",
    "deploy-angular": "cd ../angular-dragula ; git pull ; npm i -S dragula@* ; git commit package.json -m 'bumped dragula version'; npm run deploy",
    "deployment": "git add dist && npm version ${BUMP:-\"patch\"} --no-git-tag-version && git add package.json && git commit -am \"Autogenerated pre-deployment commit\" && bower version ${BUMP:-\"patch\"} && git reset HEAD~2 && git add . && git commit -am \"Release $(cat package.json | jq -r .version)\" && git push --tags && npm publish && git push",
    "scripts": "jshint . && browserify -s dragula -do dist/dragula.js dragula.js && uglifyjs -m -c -o dist/dragula.min.js dist/dragula.js",
    "start": "watchify -dvo example/example.min.js example/example.js & watchify -dvs dragula -o dist/dragula.js dragula.js & stylus -w dragula.styl --import node_modules/nib -o dist",
    "styles": "stylus dragula.styl --import node_modules/nib -o dist && cleancss dist/dragula.css -o dist/dragula.min.css",
    "sync": "git checkout gh-pages ; git merge master ; git push ; git checkout master",
    "lint": "jshint . --reporter node_modules/jshint-stylish/index.js",
    "test": "npm run lint && browserify test/*.js | tape-run",
    "test-watch": "hihat test/*.js -p tap-dev-tool"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevacqua/dragula.git"
  },
  "author": "Nicolas Bevacqua <nicolasbevacqua@gmail.com> (http://bevacqua.io/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bevacqua/dragula/issues"
  },
  "homepage": "https://github.com/bevacqua/dragula",
  "dependencies": {},
  "devDependencies": {},
  "cleaned": true
}