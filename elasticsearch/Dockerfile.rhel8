FROM registry.ci.openshift.org/ocp/builder:rhel-8-base-openshift-4.6

MAINTAINER OpenShift Development <dev@lists.openshift.redhat.com>

LABEL \
        License="GPLv2+" \
        io.k8s.description="Elasticsearch container for EFK aggregated logging storage" \
        io.k8s.display-name="Elasticsearch 6" \
        io.openshift.tags="logging,elk,elasticsearch" \
        vendor="Red Hat" \
        name="openshift/ose-logging-elasticsearch6" \
        com.redhat.component="logging-elasticsearch6-container" \
        io.openshift.maintainer.product="OpenShift Container Platform" \
        io.openshift.maintainer.component="Logging" 

EXPOSE 9200
EXPOSE 9300
USER 0

ARG ES_ARCHIVE_URL
ARG PROMETHEUS_EXPORTER_URL
ARG OPENDISTRO_URL
ARG OPENSHIFT_CI

ENV ES_PATH_CONF=/etc/elasticsearch/ \
    ES_HOME=/usr/share/elasticsearch \
    ES_VER=6.8.1.redhat-00016 \
    HOME=/opt/app-root/src \
    INSTANCE_RAM=512G \
    JAVA_VER=11 \
    JAVA_HOME=/usr/lib/jvm/jre \
    NODE_QUORUM=1 \
    PROMETHEUS_EXPORTER_VER=6.8.1.0-redhat-00001 \
    OPENDISTRO_VER=0.10.1.2-redhat-00006 \
    PLUGIN_LOGLEVEL=INFO \
    RECOVER_AFTER_NODES=1 \
    RECOVER_EXPECTED_NODES=1 \
    RECOVER_AFTER_TIME=5m \
    DHE_TMP_KEY_SIZE=2048 \
    RELEASE_STREAM=prod \
    OPENSHIFT_CI=${OPENSHIFT_CI:-false}

ARG MAVEN_REPO_URL=${MAVEN_REPO_URL:-file:///artifacts/}

RUN packages="java-${JAVA_VER}-openjdk-headless \
              python36 python3-pyyaml  \
              hostname \
              openssl \
              zip \
              unzip" && \
    yum install -y --setopt=tsflags=nodocs ${packages} && \
    rpm -V ${packages} && \
    alternatives --set python /usr/bin/python3 && \
    yum clean all

ADD extra-jvm.options install-es.sh ci-env.sh /var/tmp

# Since artifacts does not exist during CI build, include README.MD
# which will prevent the copy from raising an error.
RUN mkdir /artifacts
# In an OSBS build, this will COPY artifacts from fetch-artifacts-koji.yaml. In a CI build, it will just
# copy the README.MD.
COPY artifacts /artifacts/
COPY *.zip /
RUN /var/tmp/install-es.sh

ADD sgconfig/ ${HOME}/sgconfig/
ADD index_templates/ ${ES_HOME}/index_templates/
ADD index_patterns/ ${ES_HOME}/index_patterns/
ADD init/ ${ES_HOME}/init/
ADD probe/ ${ES_HOME}/probe/
ADD init.sh run.sh ci-env.sh install.sh ${HOME}/
COPY utils/** /usr/local/bin/

RUN ${HOME}/install.sh && rm -rf /artifacts

WORKDIR ${HOME}
USER 1000
CMD ["sh", "/opt/app-root/src/run.sh"]
