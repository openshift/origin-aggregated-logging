apiVersion: "v1"
kind: "List"
items:
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      provider: "openshift"
      component: "elasticsearch-ops"
    name: "es-ops"
  spec:
    ports:
    -
      port: 9200
      targetPort: 9200
    selector:
      provider: "openshift"
      component: "elasticsearch-ops"
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      provider: "openshift"
      component: "elasticsearch-ops"
    name: "es-ops-logging-cluster"
  spec:
    portalIP: "None"
    ports:
    -
      port: 9300
      targetPort: 9300
    selector:
      provider: "openshift"
      component: "elasticsearch-ops"
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      provider: "openshift"
      component: "elasticsearch"
    name: "es-logging"
  spec:
    ports:
    -
      port: 9200
      targetPort: 9200
    selector:
      provider: "openshift"
      component: "elasticsearch"
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    labels:
      provider: "openshift"
      component: "elasticsearch"
    name: "es-logging-cluster"
  spec:
    portalIP: "None"
    ports:
    -
      port: 9300
      targetPort: 9300
    selector:
      provider: "openshift"
      component: "elasticsearch"
-
  apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "elasticsearch-ops"
  spec:
    replicas: 1
    selector:
      provider: "openshift"
      component: "elasticsearch-ops"
    template:
      metadata:
        labels:
          provider: "openshift"
          component: "elasticsearch-ops"
      spec:
        containers:
          -
            env:
            -
              name: "KUBERNETES_TRUST_CERT"
              value: "true"
            -
              name: "SERVICE_DNS"
              value: "es-ops-logging-cluster"
            -
              name: "CLUSTER_NAME"
              value: "operations"
            image: "openshift/elasticsearch:v1"
            name: "elasticsearch-ops"
            ports:
            -
              containerPort: 9200
              name: "http"
            -
              containerPort: 9300
              name: "transport"
            volumeMounts:
              - name: certs
                mountPath: /var/run/elasticsearch/keys
                readOnly: true
              - name: pvc
                mountPath: /elasticsearch
                readOnly: false
        volumes:
          - name: certs
            secret:
              secretName: elasticsearch-ops
          - name: pvc
            persistentVolumeClaim:
              claimName: pvc-001
-
  apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "elasticsearch"
  spec:
    replicas: 1
    selector:
      provider: "openshift"
      component: "elasticsearch"
    template:
      metadata:
        labels:
          provider: "openshift"
          component: "elasticsearch"
      spec:
        containers:
          -
            env:
            -
              name: "KUBERNETES_TRUST_CERT"
              value: "true"
            -
              name: "SERVICE_DNS"
              value: "es-logging-cluster"
            -
              name: "CLUSTER_NAME"
              value: "elasticsearch"
            image: "openshift/elasticsearch:v1"
            name: "elasticsearch"
            ports:
            -
              containerPort: 9200
              name: "http"
            -
              containerPort: 9300
              name: "transport"
            volumeMounts:
              - name: certs
                mountPath: /var/run/elasticsearch/keys
                readOnly: true
              - name: pvc
                mountPath: /elasticsearch
                readOnly: false
        volumes:
          - name: certs
            secret:
              secretName: elasticsearch
          - name: pvc
            persistentVolumeClaim:
              claimName: pvc-001
-
  apiVersion: v1
  kind: Pod
  metadata:
    name: fluentd-elasticsearch
    labels:
      provider: "openshift"
      component: "fluentd"
  spec:
    containers:
    - name: fluentd-elasticsearch
      image: openshift/fluentd:v1
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 100m
      volumeMounts:
      - name: varlog
        mountPath: /var/log
      - name: varlibdockercontainers
        mountPath: /var/lib/docker/containers
        readOnly: true
      - name: certs
        mountPath: /etc/fluent/keys
        readOnly: true
      env:
      - name: "ES_HOST"
        value: "es-logging"
      - name: "ES_PORT"
        value: "9200"
      - name: "ES_CLIENT_CERT"
        value: "/etc/fluent/keys/cert"
      - name: "ES_CLIENT_KEY"
        value: "/etc/fluent/keys/key"
      - name: "ES_CA"
        value: "/etc/fluent/keys/ca"
      - name: "OPS_HOST"
        value: "es-ops"
      - name: "OPS_PORT"
        value: "9200"
      - name: "OPS_CLIENT_CERT"
        value: "/etc/fluent/keys/cert"
      - name: "OPS_CLIENT_KEY"
        value: "/etc/fluent/keys/key"
      - name: "OPS_CA"
        value: "/etc/fluent/keys/ca"
      - name: "K8S_HOST_URL"
        value: "https://kubernetes.default.svc.cluster.local:8443"
    volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: certs
      secret:
        secretName: fluentd
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "kibana-ops"
  spec:
    ports:
      -
        port: 80
        targetPort: "kibana-port"
    selector:
      provider: openshift
      component: "kibana-ops"
-
  apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "kibana-ops"
  spec:
    replicas: 1
    selector:
      component: "kibana-ops"
    template:
      metadata:
        name: "kibana-ops"
        labels:
          provider: openshift
          component: "kibana-ops"
      spec:
        containers:
          -
            name: "kibana-ops"
            image: "openshift/kibana:v1"
            ports:
              -
                name: "kibana-port"
                containerPort: 5601
            env:
              - name: "ES_HOST"
                value: "es-ops"
              - name: "ES_PORT"
                value: "9200"
            volumeMounts:
              - name: certs
                mountPath: /etc/kibana/keys
                readOnly: true
        volumes:
          - name: certs
            secret:
              secretName: kibana-ops
-
  apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "kibana"
  spec:
    ports:
      -
        port: 80
        targetPort: "kibana-port"
    selector:
      provider: openshift
      component: "kibana"
-
  apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "kibana"
  spec:
    replicas: 1
    selector:
      component: "kibana"
    template:
      metadata:
        name: "kibana"
        labels:
          provider: openshift
          component: "kibana"
      spec:
        containers:
          -
            name: "kibana"
            image: "openshift/kibana:v1"
            ports:
              -
                name: "kibana-port"
                containerPort: 5601
            env:
              - name: "ES_HOST"
                value: "es-logging"
              - name: "ES_PORT"
                value: "9200"
            volumeMounts:
              - name: certs
                mountPath: /etc/kibana/keys
                readOnly: true
        volumes:
          - name: certs
            secret:
              secretName: kibana
