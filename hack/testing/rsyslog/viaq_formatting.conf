lookup_table(name="prio_to_level" file="/etc/rsyslog.d/viaq/prio_to_level.json")
lookup_table(name="normalize_level" file="/etc/rsyslog.d/viaq/normalize_level.json")

template(name="cnvt_to_viaq_timestamp" type="list") {
    property(name="TIMESTAMP" dateFormat="rfc3339")
}

if strlen($!_MACHINE_ID) > 0 then {
    # convert from imjournal to viaq systemd format
    # https://github.com/ViaQ/elasticsearch-templates/blob/master/namespaces/systemd.yml

    set $!systemd!t!MACHINE_ID = $!_MACHINE_ID;
    unset $!_MACHINE_ID;
    if strlen($!CODE_FILE) > 0 then {
        set $!systemd!u!CODE_FILE = $!CODE_FILE;
    }
    unset $!CODE_FILE;
    if strlen($!CODE_FUNCTION) > 0 then {
        set $!systemd!u!CODE_FUNCTION = $!CODE_FUNCTION;
    }
    unset $!CODE_FUNCTION;
    if strlen($!CODE_LINE) > 0 then {
        set $!systemd!u!CODE_LINE = $!CODE_LINE;
    }
    unset $!CODE_LINE;
    if strlen($!ERRNO) > 0 then {
        set $!systemd!u!ERRNO = $!ERRNO;
    }
    unset $!ERRNO;
    if strlen($!MESSAGE_ID) > 0 then {
        set $!systemd!u!MESSAGE_ID = $!MESSAGE_ID;
    }
    unset $!MESSAGE_ID;
    if strlen($!RESULT) > 0 then {
        set $!systemd!u!RESULT = $!RESULT;
    }
    unset $!RESULT;
    if strlen($!UNIT) > 0 then {
        set $!systemd!u!UNIT = $!UNIT;
    }
    unset $!UNIT;
    if strlen($!SYSLOG_FACILITY) > 0 then {
        set $!systemd!u!SYSLOG_FACILITY = $!SYSLOG_FACILITY;
    }
    unset $!SYSLOG_FACILITY;
    if strlen($!SYSLOG_IDENTIFIER) > 0 then {
        set $!systemd!u!SYSLOG_IDENTIFIER = $!SYSLOG_IDENTIFIER;
    }
    unset $!SYSLOG_IDENTIFIER;
    if strlen($!SYSLOG_PID) > 0 then {
        set $!systemd!u!SYSLOG_PID = $!SYSLOG_PID;
    }
    unset $!SYSLOG_PID;
    if strlen($!_AUDIT_LOGINUID) > 0 then {
        set $!systemd!t!AUDIT_LOGINUID = $!_AUDIT_LOGINUID;
    }
    unset $!_AUDIT_LOGINUID;
    if strlen($!_AUDIT_SESSION) > 0 then {
        set $!systemd!t!AUDIT_SESSION = $!_AUDIT_SESSION;
    }
    unset $!_AUDIT_SESSION;
    if strlen($!_BOOT_ID) > 0 then {
        set $!systemd!t!BOOT_ID = $!_BOOT_ID;
    }
    unset $!_BOOT_ID;
    if strlen($!_CAP_EFFECTIVE) > 0 then {
        set $!systemd!t!CAP_EFFECTIVE = $!_CAP_EFFECTIVE;
    }
    unset $!_CAP_EFFECTIVE;
    if strlen($!_CMDLINE) > 0 then {
        set $!systemd!t!CMDLINE = $!_CMDLINE;
    }
    unset $!_CMDLINE;
    if strlen($!_COMM) > 0 then {
        set $!systemd!t!COMM = $!_COMM;
    }
    unset $!_COMM;
    if strlen($!_EXE) > 0 then {
        set $!systemd!t!EXE = $!_EXE;
    }
    unset $!_EXE;
    if strlen($!_GID) > 0 then {
        set $!systemd!t!GID = $!_GID;
    }
    unset $!_GID;
    if strlen($!_HOSTNAME) > 0 then {
        set $!systemd!t!HOSTNAME = $!_HOSTNAME;
    }
    unset $!_HOSTNAME;
    if strlen($!_PID) > 0 then {
        set $!systemd!t!PID = $!_PID;
    }
    unset $!_PID;
    if strlen($!_SELINUX_CONTEXT) > 0 then {
        set $!systemd!t!SELINUX_CONTEXT = $!_SELINUX_CONTEXT;
    }
    unset $!_SELINUX_CONTEXT;
    if strlen($!_SOURCE_REALTIME_TIMESTAMP) > 0 then {
        set $!systemd!t!SOURCE_REALTIME_TIMESTAMP = $!_SOURCE_REALTIME_TIMESTAMP;
    }
    unset $!_SOURCE_REALTIME_TIMESTAMP;
    if strlen($!_SYSTEMD_CGROUP) > 0 then {
        set $!systemd!t!SYSTEMD_CGROUP = $!_SYSTEMD_CGROUP;
    }
    unset $!_SYSTEMD_CGROUP;
    if strlen($!_SYSTEMD_OWNER_UID) > 0 then {
        set $!systemd!t!SYSTEMD_OWNER_UID = $!_SYSTEMD_OWNER_UID;
    }
    unset $!_SYSTEMD_OWNER_UID;
    if strlen($!_SYSTEMD_SESSION) > 0 then {
        set $!systemd!t!SYSTEMD_SESSION = $!_SYSTEMD_SESSION;
    }
    unset $!_SYSTEMD_SESSION;
    if strlen($!_SYSTEMD_SLICE) > 0 then {
        set $!systemd!t!SYSTEMD_SLICE = $!_SYSTEMD_SLICE;
    }
    unset $!_SYSTEMD_SLICE;
    if strlen($!_SYSTEMD_UNIT) > 0 then {
        set $!systemd!t!SYSTEMD_UNIT = $!_SYSTEMD_UNIT;
    }
    unset $!_SYSTEMD_UNIT;
    if strlen($!_SYSTEMD_USER_UNIT) > 0 then {
        set $!systemd!t!SYSTEMD_USER_UNIT = $!_SYSTEMD_USER_UNIT;
    }
    unset $!_SYSTEMD_USER_UNIT;
    if strlen($!_TRANSPORT) > 0 then {
        set $!systemd!t!TRANSPORT = $!_TRANSPORT;
    }
    unset $!_TRANSPORT;
    if strlen($!_UID) > 0 then {
        set $!systemd!t!UID = $!_UID;
    }
    unset $!_UID;
    if strlen($!_KERNEL_DEVICE) > 0 then {
        set $!systemd!k!KERNEL_DEVICE = $!_KERNEL_DEVICE;
    }
    unset $!_KERNEL_DEVICE;
    if strlen($!_KERNEL_SUBSYSTEM) > 0 then {
        set $!systemd!k!KERNEL_SUBSYSTEM = $!_KERNEL_SUBSYSTEM;
    }
    unset $!_KERNEL_SUBSYSTEM;
    if strlen($!_UDEV_SYSNAME) > 0 then {
        set $!systemd!k!UDEV_SYSNAME = $!_UDEV_SYSNAME;
    }
    unset $!_UDEV_SYSNAME;
    if strlen($!_UDEV_DEVNODE) > 0 then {
        set $!systemd!k!UDEV_DEVNODE = $!_UDEV_DEVNODE;
    }
    unset $!_UDEV_DEVNODE;
    if strlen($!_UDEV_DEVLINK) > 0 then {
        set $!systemd!k!UDEV_DEVLINK = $!_UDEV_DEVLINK;
    }
    unset $!_UDEV_DEVLINK;

    # these fields require special handling
    if strlen($!level) == 0 then {
        if strlen($!PRIORITY) > 0 then {
            set $!level = lookup("prio_to_level", $!PRIORITY);
        }
    }
    unset $!PRIORITY;
    if strlen($!message) == 0 then {
        if strlen($!MESSAGE) > 0 then {
            set $!message = $!MESSAGE;
        } else {
            if strlen($!log) > 0 then {
                set $!message = $!log;
            }
        }
    }
    unset $!MESSAGE;
    if strlen($!hostname) == 0 then {
        if strlen($!kubernetes!host) > 0 then {
            set $!hostname = $!kubernetes!host;
        } else {
            if strlen($!_HOSTNAME) > 0 then {
                set $!hostname = $!_HOSTNAME;
            } else {
                set $!hostname = $hostname;
            }
        }
    }
    unset $!_HOSTNAME;
    if strlen($!@timestamp) == 0 then {
        # need to figure out how to convert _SOURCE_REALTIME_TIMESTAMP
        # in the meantime . . .
        set $!@timestamp = exec_template('cnvt_to_viaq_timestamp');
    }
    unset $!_SOURCE_REALTIME_TIMESTAMP;
    unset $!__REALTIME_TIMESTAMP;
    # end of block that converts imjournal to viaq format
} else if strlen($!kubernetes!namespace_name) > 0 then {
    # clean up container log formatting
    if (strlen($!message) == 0) and (strlen($!log) > 0) then {
        set $!message = $!log;
    }
    if strlen($!hostname) == 0 then {
        if strlen($!kubernetes!host) > 0 then {
            set $!hostname = $!kubernetes!host;
        } else {
            set $!hostname = $hostname;
        }
    }
    if strlen($!@timestamp) == 0 then {
        if strlen($!time) > 0 then {
            set $!@timestamp = $!time;
        } else {
            set $!@timestamp = $TIMESTAMP;
        }
    }
}

# normalize level
if strlen($!level) > 0 then {
    set $.lclevel = tolower($!level);
    set $.normlevel = lookup("normalize_level", $.lclevel);
    if $.normlevel == "unknown" then {
        continue # do nothing - preserve original value
    } else {
        set $!level = $.normlevel;
    }
    unset $.lclevel;
    unset $.normlevel;
} else {
    if $!stream == "stdout" then {
        set $!level = "info";
    } else {
        if $!stream == "stderr" then {
            set $!level = "err";
        } else {
            set $!level = "unknown";
        }
    }
}

# add eventrouter
# add pipeline_metadata

if strlen($!kubernetes!namespace_name) > 0 then {
    # see if this is an operations namespace
    if ($!kubernetes!namespace_name == "default") or ($!kubernetes!namespace_name == "openshift") or
        ($!kubernetes!namespace_name startswith "openshift-") then {
            set $.viaq_index_prefix = ".operations.";
    } else {
        if strlen($!kubernetes!namespace_id) > 0 then {
            set $.viaq_index_prefix = "project." & $!kubernetes!namespace_name & "." & $!kubernetes!namespace_id & ".";
        } else {
            set $.viaq_index_prefix = ".orphaned.";
        }
    } 
} else {
    set $.viaq_index_prefix = ".operations.";
}
