#!/bin/bash

function announce_test(){
  local message=${1:-""}
  local TEST_DIVIDER="------------------------------------------" 
  echo $TEST_DIVIDER
  echo "     $message" 
  echo $TEST_DIVIDER
}

function start_logging_builds()
{
  logging_builds=$(oc get bc -l logging-infra=development -o name)
  for bc in $logging_builds ; do
    if [ "${USE_LOCAL_SOURCE:-false}" = false ] ; then
      oc start-build $bc
    else
      oc start-build --from-dir $OS_O_A_L_DIR $bc
    fi
  done
}

function wait_for_logging_builds_to_complete()
{
    waittime=1800 # seconds - 30 min
    interval=30
    bc_count=$(oc get bc -l logging-infra=development -o name | wc -l)
    while [ $waittime -gt 0 ] ; do
      buildstatus=$(oc get builds -l logging-infra=development -o jsonpath={.items[*].spec.phase})
      completed=$(echo $buildstatus | grep -io "complete" | wc -l)
      if [ $completed -eq $bc_count ] ; then
          return 0
      fi
      failed=$(echo $buildstatus | grep -io "failed" | wc -l)
      if [ $failed -gt 0 ] ; then
        echo error one or more builds failed
        oc get builds
        return 1
      fi
      sleep $interval
      waittime=`expr $waittime - $interval` || :
    done

    echo error timed out before builds completed
    oc get builds
    return 1
}
