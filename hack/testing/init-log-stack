#!/bin/bash

OS_ANSIBLE_VERBOSITY=${OS_ANSIBLE_VERBOSITY:-"vv"}
OS_VERSION_STRING=${OS_VERSION:+openshift_release=$OS_VERSION}
USE_JOURNAL_VAR=${USE_JOURNAL:+openshift_logging_fluentd_use_journal=${USE_JOURNAL}}

ANSIBLE_PLAYBOOK_ARGS=${ANSIBLE_PLAYBOOK_ARGS:-""}

ES_ALLOW_EXTERNAL=${ES_HOST:+openshift_logging_es_allow_external=True}
ES_HOSTNAME=${ES_HOST:+openshift_logging_es_hostname=$ES_HOST}
ES_OPS_ALLOW_EXTERNAL=${ES_OPS_HOST:+openshift_logging_es_ops_allow_external=True}
ES_OPS_HOSTNAME=${ES_OPS_HOST:+openshift_logging_es_ops_hostname=$ES_OPS_HOST}

SET_MUX_CPU_LIMIT=""
SET_MUX_MEMORY_LIMIT=""
SET_MUX_BUFFER_QUEUE_LIMIT=""
SET_MUX_BUFFER_SIZE_LIMIT=""
SET_MUX_FILE_BUFFER_STORAGE_TYPE=""
SET_MUX_FILE_BUFFER_PVC_NAME=""
SET_MUX_FILE_BUFFER_PVC_SIZE=""
SET_MUX_BUFFER_TYPE=""
SET_FLUENTD_BUFFER_TYPE=""
if [ "$MUX_ALLOW_EXTERNAL" = true ] ; then
    SET_MUX_CPU_LIMIT="openshift_logging_mux_cpu_limit=${MUX_CPU_LIMIT:-500m}"
    SET_MUX_MEMORY_LIMIT="openshift_logging_mux_memory_limit=${MUX_MEMORY_LIMIT:-2Gi}"
    SET_MUX_BUFFER_QUEUE_LIMIT="openshift_logging_mux_buffer_queue_limit=${MUX_BUFFER_QUEUE_LIMIT:-1024}"
    SET_MUX_BUFFER_SIZE_LIMIT="openshift_logging_mux_buffer_size_limit=${MUX_BUFFER_SIZE_LIMIT:-1048576}"
    if [ "$BUFFER_TYPE" = "file" ]; then
        SET_MUX_BUFFER_TYPE="openshift_logging_mux_buffer_type=file"
        SET_MUX_FILE_BUFFER_STORAGE_TYPE="openshift_logging_mux_file_buffer_storage_type=${MUX_FILE_BUFFER_STORAGE_TYPE:-emptydir}"
        if [ "$MUX_FILE_BUFFER_STORAGE_TYPE" = "pvc" ]; then
          SET_MUX_FILE_BUFFER_PVC_NAME="openshift_logging_mux_file_buffer_pvc_name=logging-mux-pvc"
          SET_MUX_FILE_BUFFER_PVC_SIZE="openshift_logging_mux_file_buffer_pvc_size=6Gi"
          echo "### Prepare pvc storage for testing"
          echo "apiVersion: \"v1\"
kind: \"PersistentVolume\"
metadata:
  name: logging-muxpv-1
spec:
  capacity:
    storage: \"6Gi\"
  accessModes:
    - \"ReadWriteOnce\"
  hostPath:
    path: ${FILE_BUFFER_PATH:-/var/log/mux/filebufferstorage}" > /tmp/host-pv.yaml
          cat /tmp/host-pv.yaml
          cat /tmp/host-pv.yaml | oc create -f -
    echo "###################################"
        fi
    else
        SET_MUX_BUFFER_TYPE="openshift_logging_mux_buffer_type=memory"
    fi
fi

if [ "$BUFFER_TYPE" = "file" ]; then
    SET_FLUENTD_BUFFER_TYPE="openshift_logging_fluentd_buffer_type=file"
else
    SET_FLUENTD_BUFFER_TYPE="openshift_logging_fluentd_buffer_type=memory"
fi

source $OS_O_A_L_DIR/hack/testing/build-images

# init inventory file
pushd $OS_ANSIBLE_DIR

# these should be interpreted as python
cat > ansible.inventory  << EOL
[oo_first_master]
openshift

[oo_first_master:vars]
ansible_become=true
ansible_connection=local
containerized=true
docker_protect_installed_version=true
openshift_deployment_type=origin
deployment_type=origin
required_packages=[]
$OS_VERSION_STRING

openshift_logging_kibana_hostname=${KIBANA_HOST:-kibana.127.0.0.1.xip.io}
openshift_logging_kibana_ops_hostname=${KIBANA_OPS_HOST:-kibana-ops.127.0.0.1.xip.io}
openshift_master_logging_public_url=https://${KIBANA_HOST:-kibana.127.0.0.1.xip.io}
openshift_logging_master_public_url=https://${PUBLIC_MASTER_HOST:-localhost}:8443

openshift_logging_image_prefix=$imageprefix
openshift_logging_use_ops=${ENABLE_OPS_CLUSTER:-False}
$USE_JOURNAL_VAR
openshift_logging_fluentd_journal_read_from_head=${JOURNAL_READ_FROM_HEAD:-False}
openshift_logging_es_log_appenders=['console']
openshift_logging_use_mux=${USE_MUX:-false}
openshift_logging_mux_allow_external=${MUX_ALLOW_EXTERNAL:-false}
openshift_logging_use_mux_client=${USE_MUX_CLIENT:-false}
$ES_ALLOW_EXTERNAL
$ES_HOSTNAME
$ES_OPS_ALLOW_EXTERNAL
$ES_OPS_HOSTNAME
$SET_FLUENTD_BUFFER_TYPE
$SET_MUX_CPU_LIMIT
$SET_MUX_MEMORY_LIMIT
$SET_MUX_BUFFER_QUEUE_LIMIT
$SET_MUX_BUFFER_SIZE_LIMIT
$SET_MUX_BUFFER_TYPE
$SET_MUX_FILE_BUFFER_STORAGE_TYPE
$SET_MUX_FILE_BUFFER_PVC_NAME
$SET_MUX_FILE_BUFFER_PVC_SIZE
EOL

echo "### Created host inventory file ###"
cat ansible.inventory
echo "###################################"

# Execute logging playbook
os::cmd::expect_success "oc login -u system:admin"

# hack since ansible is looking for it
sudo mkdir -p /etc/origin
sudo cp -r ${SERVER_CONFIG_DIR}/master/ /etc/origin/

sudo ansible-playbook -i ansible.inventory \
  -$OS_ANSIBLE_VERBOSITY \
  $OS_ANSIBLE_DIR/playbooks/byo/openshift-cluster/openshift-logging.yml \
  -e ansible_host=127.0.0.1 \
  -e openshift_master_config_dir=${SERVER_CONFIG_DIR}/master \
  --skip-tags=update_master_config \
  $ANSIBLE_PLAYBOOK_ARGS

popd
