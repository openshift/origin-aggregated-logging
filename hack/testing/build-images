#!/bin/bash
dev_build_template=dev-builds.yaml
if [ "$USE_LOCAL_SOURCE" = "true" ] ; then
    build_filter() {
        # remove all build triggers
        sed "/triggers/d; /- type: .*Change/d"
    }
    post_build() {
        os::cmd::try_until_success "oc get imagestreamtag origin:latest" "$(( 1 * TIME_MIN ))"
        for bc in `oc get bc -o jsonpath='{.items[*].metadata.name}'` ; do
            oc start-build --from-dir $OS_O_A_L_DIR $bc
        done
    }
else
    build_filter() {
        cat
    }
    post_build() {
        :
    }
fi

dev_build_template=dev-builds-wo-deployer.yaml

os::cmd::expect_success "oc process -o yaml \
   -f $OS_O_A_L_DIR/hack/templates/$dev_build_template \
   -p LOGGING_FORK_URL=$GIT_URL -p LOGGING_FORK_BRANCH=$GIT_BRANCH \
   | build_filter | oc create -f -"
post_build
os::cmd::expect_success "wait_for_builds_complete"
imageprefix=`oc get is | awk '$1 == "logging-elasticsearch" {print gensub(/^([^/]*\/logging\/).*$/, "\\\1", 1, $2)}'`
sleep 5
